[2024-12-20 11:11:23 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.GreenGramApplication][0;39m
 Starting GreenGramApplication using Java 17.0.12 with PID 11296 (D:\GSY\GreenGramSecurity\build\classes\java\main started by Administrator in D:\GSY\GreenGramSecurity)
[2024-12-20 11:11:23 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.GreenGramApplication][0;39m
 No active profile set, falling back to 1 default profile: "default"
[2024-12-20 11:11:23 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor][0;39m
 Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-20 11:11:23 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor][0;39m
 For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-20 11:11:24 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.web.embedded.tomcat.TomcatWebServer][0;39m
 Tomcat initialized with port 8080 (http)
[2024-12-20 11:11:24 [32mINFO [0;39mrestartedMain] [[36m[org.apache.coyote.http11.Http11NioProtocol][0;39m
 Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-20 11:11:24 [32mINFO [0;39mrestartedMain] [[36m[org.apache.catalina.core.StandardService][0;39m
 Starting service [Tomcat]
[2024-12-20 11:11:24 [32mINFO [0;39mrestartedMain] [[36m[org.apache.catalina.core.StandardEngine][0;39m
 Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-20 11:11:24 [32mINFO [0;39mrestartedMain] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]][0;39m
 Initializing Spring embedded WebApplicationContext
[2024-12-20 11:11:24 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext][0;39m
 Root WebApplicationContext: initialization completed in 864 ms
[2024-12-20 11:11:24 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.common.MyFileUtils][0;39m
 MyFileUtils - ÏÉùÏÑ±Ïûê: D:\GSY\GreenGramVer3\greengram_ver3
[2024-12-20 11:11:25 [33mWARN [0;39mrestartedMain] [[36m[org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration][0;39m
 

Using generated security password: 96514c26-9dad-43d8-a6d5-5c1d9476875b

This generated password is for development use only. Your security configuration must be updated before running your application in production.

[2024-12-20 11:11:25 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer][0;39m
 Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
[2024-12-20 11:11:25 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping][0;39m
 Adding welcome page: class path resource [static/index.html]
[2024-12-20 11:11:25 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer][0;39m
 LiveReload server is running on port 35729
[2024-12-20 11:11:25 [32mINFO [0;39mrestartedMain] [[36m[org.apache.coyote.http11.Http11NioProtocol][0;39m
 Starting ProtocolHandler ["http-nio-8080"]
[2024-12-20 11:11:25 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.web.embedded.tomcat.TomcatWebServer][0;39m
 Tomcat started on port 8080 (http) with context path '/'
[2024-12-20 11:11:25 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.GreenGramApplication][0;39m
 Started GreenGramApplication in 1.909 seconds (process running for 2.274)
[2024-12-20 11:11:29 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]][0;39m
 Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-20 11:11:29 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[org.springframework.web.servlet.DispatcherServlet][0;39m
 Initializing Servlet 'dispatcherServlet'
[2024-12-20 11:11:29 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[org.springframework.web.servlet.DispatcherServlet][0;39m
 Completed initialization in 1 ms
[2024-12-20 11:11:29 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:29 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:29 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:29 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:29 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:29 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:29 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:29 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:29 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:29 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:29 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:29 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:29 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:29 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:29 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:29 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:29 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:29 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:29 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDU4MTAzNiwiZXhwIjoxNzM0NTg3MDM2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6NSxcInJvbGVzXCI6W1wiUk9MRV9VU0VSXCIsXCJST0xFX0FETUlOXCJdfSJ9.LuW4czr5BkEhh3bwfpYuMgVDALxbcCrnr28RmsoUCCFPsR2SZZNjY0SssWjLOqG4
[2024-12-20 11:11:29 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:29 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDU4MTAzNiwiZXhwIjoxNzM0NTg3MDM2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6NSxcInJvbGVzXCI6W1wiUk9MRV9VU0VSXCIsXCJST0xFX0FETUlOXCJdfSJ9.LuW4czr5BkEhh3bwfpYuMgVDALxbcCrnr28RmsoUCCFPsR2SZZNjY0SssWjLOqG4
[2024-12-20 11:11:29 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:29 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:29 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:29 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:29 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:29 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:29 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:29 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:29 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:29 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:29 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:29 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:34 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:34 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDU4MTAzNiwiZXhwIjoxNzM0NTg3MDM2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6NSxcInJvbGVzXCI6W1wiUk9MRV9VU0VSXCIsXCJST0xFX0FETUlOXCJdfSJ9.LuW4czr5BkEhh3bwfpYuMgVDALxbcCrnr28RmsoUCCFPsR2SZZNjY0SssWjLOqG4
[2024-12-20 11:11:34 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDU4MTAzNiwiZXhwIjoxNzM0NTg3MDM2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6NSxcInJvbGVzXCI6W1wiUk9MRV9VU0VSXCIsXCJST0xFX0FETUlOXCJdfSJ9.LuW4czr5BkEhh3bwfpYuMgVDALxbcCrnr28RmsoUCCFPsR2SZZNjY0SssWjLOqG4
[2024-12-20 11:11:34 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.zaxxer.hikari.HikariDataSource][0;39m
 HikariPool-1 - Starting...
[2024-12-20 11:11:34 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.zaxxer.hikari.pool.HikariPool][0;39m
 HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@4a1b2f7f
[2024-12-20 11:11:34 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.zaxxer.hikari.HikariDataSource][0;39m
 HikariPool-1 - Start completed.
[2024-12-20 11:11:34 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id AS userId,
        IFNULL(nick_name,uid) AS nickName, pic, upw
        FROM user
        WHERE uid = '1111'
 {executed in 0 msec}
[2024-12-20 11:11:34 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|--------|---------|-----------------------------------------|-------------------------------------------------------------|
|user_id |nickname |pic                                      |upw                                                          |
|--------|---------|-----------------------------------------|-------------------------------------------------------------|
|5       |1111     |9e2d2e13-79a7-481f-b221-26e228ce8a4d.jpg |$2a$10$eH60DKexA0FC5txA3eiptOQNf6ey3QLAaqnrlS0CsZFY3JnfM6iwu |
|--------|---------|-----------------------------------------|-------------------------------------------------------------|

[2024-12-20 11:11:34 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:34 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:34 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:34 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:34 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MDY5NCwiZXhwIjoxNzM0NjY2Njk0LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6NSxcInJvbGVzXCI6W1wiUk9MRV9VU0VSXCIsXCJST0xFX0FETUlOXCJdfSJ9.3U3kIU-XWtWkrUs6854bkWabnaS_fKnPC8tdI33KJB1xUejpgRVUuVNnBAWt2erd
[2024-12-20 11:11:34 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:34 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MDY5NCwiZXhwIjoxNzM0NjY2Njk0LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6NSxcInJvbGVzXCI6W1wiUk9MRV9VU0VSXCIsXCJST0xFX0FETUlOXCJdfSJ9.3U3kIU-XWtWkrUs6854bkWabnaS_fKnPC8tdI33KJB1xUejpgRVUuVNnBAWt2erd
[2024-12-20 11:11:34 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:34 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:34 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:34 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:34 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:34 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.feed.model.FeedGetReq][0;39m
 page: 1, size: null, profileUserId: null
[2024-12-20 11:11:34 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.feed.FeedController][0;39m
 FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=0, profileUserId=null)
[2024-12-20 11:11:34 [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  A.feed_id AS feedId, A.contents, A.location
          , A.created_at AS createdAt
          , B.user_id AS writerUserId
          , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
          , B.pic AS writerPic
          , IF(C.feed_id IS NULL, 0 , 1) AS isLike
     FROM feed A
    INNER JOIN user B
       ON A.writer_user_id = B.user_id
     LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 5

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 5 msec}
[2024-12-20 11:11:34 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[jdbc.resultsettable][0;39m
 
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location  |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|
|76      |ÌîºÎìúÎÇ¥Ïö©ÌÖåÏä§Ìä∏  |Í∑∏Î¶ºÏª¥Ìì®ÌÑ∞ÏïÑÌä∏ÌïôÏõê |2024-12-19 11:46:59 |5       |1111     |9e2d2e13-79a7-481f-b221-26e228ce8a4d.jpg |0      |
|75      |asdf     |asdf      |2024-12-10 10:55:05 |19      |zxzx     |2f008281-bcf1-4873-812c-20ab707bf4c7     |0      |
|73      |         |          |2024-12-10 10:33:25 |9       |0        |445adb23-d27b-43c2-837a-3e70f0bfae01     |0      |
|72      |         |          |2024-12-10 10:06:53 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|71      |         |          |2024-12-10 10:04:30 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|70      |ÎßåÏÇ≠       |          |2024-12-10 10:04:12 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|68      |aaaaa    |aaaaa     |2024-12-10 09:50:56 |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |0      |
|67      |         |          |2024-12-09 16:52:00 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|66      |         |          |2024-12-09 16:45:57 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|65      |         |          |2024-12-09 16:38:08 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|64      |         |          |2024-12-09 16:38:04 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|63      |         |          |2024-12-09 16:37:59 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|62      |Îãà ÎØ∏Îûò
ÎÇ®Ìé∏  |          |2024-12-09 16:27:39 |17      |ddd      |null                                     |0      |
|61      |         |          |2024-12-09 16:26:51 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|60      |         |          |2024-12-09 16:19:37 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|59      |         |          |2024-12-09 16:19:21 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|58      |         |          |2024-12-09 16:19:10 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|57      |„Öã„Öã       |          |2024-12-09 16:07:37 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|56      |Î™ÖÎ∞ïÏ®©      |          |2024-12-09 16:06:14 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|55      |Í∑ºÌòúÏ∞°      |          |2024-12-09 16:06:06 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-20 11:11:34 [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT feed_id AS feedId, pic
        FROM feed_pic
        WHERE feed_id in
         (  
            76
         , 
            75
         , 
            73
         , 
            72
         , 
            71
         , 
            70
         , 
            68
         , 
            67
         , 
            66
         , 
            65
         , 
            64
         , 
            63
         , 
            62
         , 
            61
         , 
            60
         , 
            59
         , 
            58
         , 
            57
         , 
            56
         , 
            55
         ) 
        ORDER BY feed_id DESC
 {executed in 1 msec}
[2024-12-20 11:11:34 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[jdbc.resultsettable][0;39m
 
|--------|------------------------------------------|
|feed_id |pic                                       |
|--------|------------------------------------------|
|76      |fe728007-d85c-4ab7-8577-58a4c81ff176.gif  |
|76      |6d1cd1f5-8f13-4d99-9665-4dbab9b47fb7.png  |
|75      |6a6fb41e-8434-4c72-8139-1169c075b2e8.png  |
|73      |b53d82b3-0379-49c9-9c85-cb9c403c6523.jpg  |
|72      |74f8b9ea-6e30-48e1-983a-3d09b7dbabea.gif  |
|71      |2d1c8d65-5c08-4f78-96df-1fb6349d58d0.gif  |
|70      |87f5ba66-f8e4-41ca-a7ec-1d394b7ae5f7.jpg  |
|68      |62d4ef6f-50e4-406f-ae1e-d1f64060366a.jpg  |
|67      |5e5df70e-01d4-4b33-9e87-00e6a716008d.gif  |
|66      |2b6887e5-7070-4f39-a5db-bc4d35bb51fa.gif  |
|65      |0b2c055a-2426-4dbc-8f83-403ecd3fa464.gif  |
|64      |d252f5fe-6aa1-4212-b558-caedfb9d59c5.gif  |
|63      |86cea73b-80b4-4501-aaeb-4db5007ded5f.gif  |
|62      |943ec3db-6b2f-4d8a-a1d9-cdfa7b2fe921.jpeg |
|61      |bb7c519a-0113-4137-ada5-4bfa9df4b5d7.gif  |
|60      |282ad40c-d6c6-4183-8781-2cd3a5d80ade.gif  |
|59      |261ecdff-f966-4797-bc07-75a9eb1a5eee.gif  |
|58      |68c097ba-aa57-4002-a3bd-774851007b2a.gif  |
|57      |f5512946-3498-437e-ac4c-28c8a06fc9f0.jpg  |
|57      |3298dc0e-3231-4773-982a-47e30f2531e5.jpg  |
|56      |f661e26c-8b44-49d5-a944-cceeea6116a7.jpg  |
|55      |dc7ee72b-960a-431b-b021-bdfc625c097b.jpg  |
|--------|------------------------------------------|

[2024-12-20 11:11:34 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.feed.FeedService][0;39m
 feedPicList: [FeedPicSel(feedId=76, pic=fe728007-d85c-4ab7-8577-58a4c81ff176.gif), FeedPicSel(feedId=76, pic=6d1cd1f5-8f13-4d99-9665-4dbab9b47fb7.png), FeedPicSel(feedId=75, pic=6a6fb41e-8434-4c72-8139-1169c075b2e8.png), FeedPicSel(feedId=73, pic=b53d82b3-0379-49c9-9c85-cb9c403c6523.jpg), FeedPicSel(feedId=72, pic=74f8b9ea-6e30-48e1-983a-3d09b7dbabea.gif), FeedPicSel(feedId=71, pic=2d1c8d65-5c08-4f78-96df-1fb6349d58d0.gif), FeedPicSel(feedId=70, pic=87f5ba66-f8e4-41ca-a7ec-1d394b7ae5f7.jpg), FeedPicSel(feedId=68, pic=62d4ef6f-50e4-406f-ae1e-d1f64060366a.jpg), FeedPicSel(feedId=67, pic=5e5df70e-01d4-4b33-9e87-00e6a716008d.gif), FeedPicSel(feedId=66, pic=2b6887e5-7070-4f39-a5db-bc4d35bb51fa.gif), FeedPicSel(feedId=65, pic=0b2c055a-2426-4dbc-8f83-403ecd3fa464.gif), FeedPicSel(feedId=64, pic=d252f5fe-6aa1-4212-b558-caedfb9d59c5.gif), FeedPicSel(feedId=63, pic=86cea73b-80b4-4501-aaeb-4db5007ded5f.gif), FeedPicSel(feedId=62, pic=943ec3db-6b2f-4d8a-a1d9-cdfa7b2fe921.jpeg), FeedPicSel(feedId=61, pic=bb7c519a-0113-4137-ada5-4bfa9df4b5d7.gif), FeedPicSel(feedId=60, pic=282ad40c-d6c6-4183-8781-2cd3a5d80ade.gif), FeedPicSel(feedId=59, pic=261ecdff-f966-4797-bc07-75a9eb1a5eee.gif), FeedPicSel(feedId=58, pic=68c097ba-aa57-4002-a3bd-774851007b2a.gif), FeedPicSel(feedId=57, pic=f5512946-3498-437e-ac4c-28c8a06fc9f0.jpg), FeedPicSel(feedId=57, pic=3298dc0e-3231-4773-982a-47e30f2531e5.jpg), FeedPicSel(feedId=56, pic=f661e26c-8b44-49d5-a944-cceeea6116a7.jpg), FeedPicSel(feedId=55, pic=dc7ee72b-960a-431b-b021-bdfc625c097b.jpg)]
[2024-12-20 11:11:34 [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT T.feedId, T.feedCommentId, T.comment
    FROM (
    SELECT ROW_NUMBER() OVER (PARTITION BY A.feed_id ORDER BY A.feed_id, A.feed_comment_id DESC) AS num
    , A.feed_id AS feedId
    , A.feed_comment_id AS feedCommentId
    , A.comment
    , B.user_id AS writerUserId
    , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
    , B.pic AS writerPic
    FROM feed_comment A
    INNER JOIN user B
    ON A.user_id = B.user_id
    WHERE A.feed_id IN
         (  
        76
     , 
        75
     , 
        73
     , 
        72
     , 
        71
     , 
        70
     , 
        68
     , 
        67
     , 
        66
     , 
        65
     , 
        64
     , 
        63
     , 
        62
     , 
        61
     , 
        60
     , 
        59
     , 
        58
     , 
        57
     , 
        56
     , 
        55
     ) 
    ) T
    WHERE T.num    <=   4
 {executed in 4 msec}
[2024-12-20 11:11:34 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[jdbc.resultsettable][0;39m
 
|-------|--------------|-----------------|
|feedid |feedcommentid |comment          |
|-------|--------------|-----------------|
|57     |97            |„Ñ∑„Ñ∑;; ÎÖ∏ÏïåÎùº         |
|66     |99            |ÏàòÏòÅÏïÑ Í¥ÄÎ¶¨ ÏïàÌïòÎÉê?      |
|66     |98            |Ïó¨ ÌîºÎìú Í∞ú Ï≥ê ÎçîÎüΩÎÑ§     |
|67     |100           |Í∞úÏ∂î Î∞ïÍ≥† Í∞ëÎãàÎã§        |
|70     |101           |Î≥¥Ïó¨Ï§ò              |
|73     |104           |ÏåâÍ≤åÏù¥ÎÑ§             |
|73     |103           |Í≤åÏù¥Í≤åÏù¥Ïïº            |
|73     |102           |‚ô°                |
|75     |106           |„Öá„Ñ¥„Ñª„Ñ¥„Öá„Ñª„Ñ¥„Öá„Ñπ„Ñ¥„Öá„Ñπ„Ñ¥„Öá„Ñª„Ñ¥ |
|75     |105           |„Öá„Ñª„Öá„Ñª„Ñ¥„Öá„Ñª„Ñ¥„Öá„Ñπ„Ñ¥„Öá„Ñπ    |
|-------|--------------|-----------------|

[2024-12-20 11:11:34 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.feed.FeedService][0;39m
 list: [com.green.greengram.feed.model.FeedGetRes@3af36fef, com.green.greengram.feed.model.FeedGetRes@67c25550, com.green.greengram.feed.model.FeedGetRes@36fb2fcb, com.green.greengram.feed.model.FeedGetRes@bfd911d, com.green.greengram.feed.model.FeedGetRes@2ad01b9a, com.green.greengram.feed.model.FeedGetRes@5f4da345, com.green.greengram.feed.model.FeedGetRes@30a74a10, com.green.greengram.feed.model.FeedGetRes@57b55060, com.green.greengram.feed.model.FeedGetRes@7d138dc7, com.green.greengram.feed.model.FeedGetRes@4ff65eab, com.green.greengram.feed.model.FeedGetRes@458b7a8f, com.green.greengram.feed.model.FeedGetRes@38c0140e, com.green.greengram.feed.model.FeedGetRes@595cdb64, com.green.greengram.feed.model.FeedGetRes@2422c5e2, com.green.greengram.feed.model.FeedGetRes@3a638ceb, com.green.greengram.feed.model.FeedGetRes@23b9fcd, com.green.greengram.feed.model.FeedGetRes@3d83f315, com.green.greengram.feed.model.FeedGetRes@f3c3c92, com.green.greengram.feed.model.FeedGetRes@299eed4a, com.green.greengram.feed.model.FeedGetRes@7705ca43]
[2024-12-20 11:11:34 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:34 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:34 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:35 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MDY5NCwiZXhwIjoxNzM0NjY2Njk0LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6NSxcInJvbGVzXCI6W1wiUk9MRV9VU0VSXCIsXCJST0xFX0FETUlOXCJdfSJ9.3U3kIU-XWtWkrUs6854bkWabnaS_fKnPC8tdI33KJB1xUejpgRVUuVNnBAWt2erd
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MDY5NCwiZXhwIjoxNzM0NjY2Njk0LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6NSxcInJvbGVzXCI6W1wiUk9MRV9VU0VSXCIsXCJST0xFX0FETUlOXCJdfSJ9.3U3kIU-XWtWkrUs6854bkWabnaS_fKnPC8tdI33KJB1xUejpgRVUuVNnBAWt2erd
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.feed.model.FeedGetReq][0;39m
 page: 1, size: null, profileUserId: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.feed.FeedController][0;39m
 FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=0, profileUserId=null)
[2024-12-20 11:11:39 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  A.feed_id AS feedId, A.contents, A.location
          , A.created_at AS createdAt
          , B.user_id AS writerUserId
          , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
          , B.pic AS writerPic
          , IF(C.feed_id IS NULL, 0 , 1) AS isLike
     FROM feed A
    INNER JOIN user B
       ON A.writer_user_id = B.user_id
     LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 5

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 0 msec}
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location  |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|
|76      |ÌîºÎìúÎÇ¥Ïö©ÌÖåÏä§Ìä∏  |Í∑∏Î¶ºÏª¥Ìì®ÌÑ∞ÏïÑÌä∏ÌïôÏõê |2024-12-19 11:46:59 |5       |1111     |9e2d2e13-79a7-481f-b221-26e228ce8a4d.jpg |0      |
|75      |asdf     |asdf      |2024-12-10 10:55:05 |19      |zxzx     |2f008281-bcf1-4873-812c-20ab707bf4c7     |0      |
|73      |         |          |2024-12-10 10:33:25 |9       |0        |445adb23-d27b-43c2-837a-3e70f0bfae01     |0      |
|72      |         |          |2024-12-10 10:06:53 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|71      |         |          |2024-12-10 10:04:30 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|70      |ÎßåÏÇ≠       |          |2024-12-10 10:04:12 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|68      |aaaaa    |aaaaa     |2024-12-10 09:50:56 |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |0      |
|67      |         |          |2024-12-09 16:52:00 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|66      |         |          |2024-12-09 16:45:57 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|65      |         |          |2024-12-09 16:38:08 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|64      |         |          |2024-12-09 16:38:04 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|63      |         |          |2024-12-09 16:37:59 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|62      |Îãà ÎØ∏Îûò
ÎÇ®Ìé∏  |          |2024-12-09 16:27:39 |17      |ddd      |null                                     |0      |
|61      |         |          |2024-12-09 16:26:51 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|60      |         |          |2024-12-09 16:19:37 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|59      |         |          |2024-12-09 16:19:21 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|58      |         |          |2024-12-09 16:19:10 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|57      |„Öã„Öã       |          |2024-12-09 16:07:37 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|56      |Î™ÖÎ∞ïÏ®©      |          |2024-12-09 16:06:14 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|55      |Í∑ºÌòúÏ∞°      |          |2024-12-09 16:06:06 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:39 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT feed_id AS feedId, pic
        FROM feed_pic
        WHERE feed_id in
         (  
            76
         , 
            75
         , 
            73
         , 
            72
         , 
            71
         , 
            70
         , 
            68
         , 
            67
         , 
            66
         , 
            65
         , 
            64
         , 
            63
         , 
            62
         , 
            61
         , 
            60
         , 
            59
         , 
            58
         , 
            57
         , 
            56
         , 
            55
         ) 
        ORDER BY feed_id DESC
 {executed in 0 msec}
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|--------|------------------------------------------|
|feed_id |pic                                       |
|--------|------------------------------------------|
|76      |fe728007-d85c-4ab7-8577-58a4c81ff176.gif  |
|76      |6d1cd1f5-8f13-4d99-9665-4dbab9b47fb7.png  |
|75      |6a6fb41e-8434-4c72-8139-1169c075b2e8.png  |
|73      |b53d82b3-0379-49c9-9c85-cb9c403c6523.jpg  |
|72      |74f8b9ea-6e30-48e1-983a-3d09b7dbabea.gif  |
|71      |2d1c8d65-5c08-4f78-96df-1fb6349d58d0.gif  |
|70      |87f5ba66-f8e4-41ca-a7ec-1d394b7ae5f7.jpg  |
|68      |62d4ef6f-50e4-406f-ae1e-d1f64060366a.jpg  |
|67      |5e5df70e-01d4-4b33-9e87-00e6a716008d.gif  |
|66      |2b6887e5-7070-4f39-a5db-bc4d35bb51fa.gif  |
|65      |0b2c055a-2426-4dbc-8f83-403ecd3fa464.gif  |
|64      |d252f5fe-6aa1-4212-b558-caedfb9d59c5.gif  |
|63      |86cea73b-80b4-4501-aaeb-4db5007ded5f.gif  |
|62      |943ec3db-6b2f-4d8a-a1d9-cdfa7b2fe921.jpeg |
|61      |bb7c519a-0113-4137-ada5-4bfa9df4b5d7.gif  |
|60      |282ad40c-d6c6-4183-8781-2cd3a5d80ade.gif  |
|59      |261ecdff-f966-4797-bc07-75a9eb1a5eee.gif  |
|58      |68c097ba-aa57-4002-a3bd-774851007b2a.gif  |
|57      |f5512946-3498-437e-ac4c-28c8a06fc9f0.jpg  |
|57      |3298dc0e-3231-4773-982a-47e30f2531e5.jpg  |
|56      |f661e26c-8b44-49d5-a944-cceeea6116a7.jpg  |
|55      |dc7ee72b-960a-431b-b021-bdfc625c097b.jpg  |
|--------|------------------------------------------|

[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.feed.FeedService][0;39m
 feedPicList: [FeedPicSel(feedId=76, pic=fe728007-d85c-4ab7-8577-58a4c81ff176.gif), FeedPicSel(feedId=76, pic=6d1cd1f5-8f13-4d99-9665-4dbab9b47fb7.png), FeedPicSel(feedId=75, pic=6a6fb41e-8434-4c72-8139-1169c075b2e8.png), FeedPicSel(feedId=73, pic=b53d82b3-0379-49c9-9c85-cb9c403c6523.jpg), FeedPicSel(feedId=72, pic=74f8b9ea-6e30-48e1-983a-3d09b7dbabea.gif), FeedPicSel(feedId=71, pic=2d1c8d65-5c08-4f78-96df-1fb6349d58d0.gif), FeedPicSel(feedId=70, pic=87f5ba66-f8e4-41ca-a7ec-1d394b7ae5f7.jpg), FeedPicSel(feedId=68, pic=62d4ef6f-50e4-406f-ae1e-d1f64060366a.jpg), FeedPicSel(feedId=67, pic=5e5df70e-01d4-4b33-9e87-00e6a716008d.gif), FeedPicSel(feedId=66, pic=2b6887e5-7070-4f39-a5db-bc4d35bb51fa.gif), FeedPicSel(feedId=65, pic=0b2c055a-2426-4dbc-8f83-403ecd3fa464.gif), FeedPicSel(feedId=64, pic=d252f5fe-6aa1-4212-b558-caedfb9d59c5.gif), FeedPicSel(feedId=63, pic=86cea73b-80b4-4501-aaeb-4db5007ded5f.gif), FeedPicSel(feedId=62, pic=943ec3db-6b2f-4d8a-a1d9-cdfa7b2fe921.jpeg), FeedPicSel(feedId=61, pic=bb7c519a-0113-4137-ada5-4bfa9df4b5d7.gif), FeedPicSel(feedId=60, pic=282ad40c-d6c6-4183-8781-2cd3a5d80ade.gif), FeedPicSel(feedId=59, pic=261ecdff-f966-4797-bc07-75a9eb1a5eee.gif), FeedPicSel(feedId=58, pic=68c097ba-aa57-4002-a3bd-774851007b2a.gif), FeedPicSel(feedId=57, pic=f5512946-3498-437e-ac4c-28c8a06fc9f0.jpg), FeedPicSel(feedId=57, pic=3298dc0e-3231-4773-982a-47e30f2531e5.jpg), FeedPicSel(feedId=56, pic=f661e26c-8b44-49d5-a944-cceeea6116a7.jpg), FeedPicSel(feedId=55, pic=dc7ee72b-960a-431b-b021-bdfc625c097b.jpg)]
[2024-12-20 11:11:39 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT T.feedId, T.feedCommentId, T.comment
    FROM (
    SELECT ROW_NUMBER() OVER (PARTITION BY A.feed_id ORDER BY A.feed_id, A.feed_comment_id DESC) AS num
    , A.feed_id AS feedId
    , A.feed_comment_id AS feedCommentId
    , A.comment
    , B.user_id AS writerUserId
    , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
    , B.pic AS writerPic
    FROM feed_comment A
    INNER JOIN user B
    ON A.user_id = B.user_id
    WHERE A.feed_id IN
         (  
        76
     , 
        75
     , 
        73
     , 
        72
     , 
        71
     , 
        70
     , 
        68
     , 
        67
     , 
        66
     , 
        65
     , 
        64
     , 
        63
     , 
        62
     , 
        61
     , 
        60
     , 
        59
     , 
        58
     , 
        57
     , 
        56
     , 
        55
     ) 
    ) T
    WHERE T.num    <=   4
 {executed in 0 msec}
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|-------|--------------|-----------------|
|feedid |feedcommentid |comment          |
|-------|--------------|-----------------|
|57     |97            |„Ñ∑„Ñ∑;; ÎÖ∏ÏïåÎùº         |
|66     |99            |ÏàòÏòÅÏïÑ Í¥ÄÎ¶¨ ÏïàÌïòÎÉê?      |
|66     |98            |Ïó¨ ÌîºÎìú Í∞ú Ï≥ê ÎçîÎüΩÎÑ§     |
|67     |100           |Í∞úÏ∂î Î∞ïÍ≥† Í∞ëÎãàÎã§        |
|70     |101           |Î≥¥Ïó¨Ï§ò              |
|73     |104           |ÏåâÍ≤åÏù¥ÎÑ§             |
|73     |103           |Í≤åÏù¥Í≤åÏù¥Ïïº            |
|73     |102           |‚ô°                |
|75     |106           |„Öá„Ñ¥„Ñª„Ñ¥„Öá„Ñª„Ñ¥„Öá„Ñπ„Ñ¥„Öá„Ñπ„Ñ¥„Öá„Ñª„Ñ¥ |
|75     |105           |„Öá„Ñª„Öá„Ñª„Ñ¥„Öá„Ñª„Ñ¥„Öá„Ñπ„Ñ¥„Öá„Ñπ    |
|-------|--------------|-----------------|

[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.feed.FeedService][0;39m
 list: [com.green.greengram.feed.model.FeedGetRes@3fd3d69e, com.green.greengram.feed.model.FeedGetRes@5534b53f, com.green.greengram.feed.model.FeedGetRes@353a4c1d, com.green.greengram.feed.model.FeedGetRes@5f3fa0a1, com.green.greengram.feed.model.FeedGetRes@7e79eafe, com.green.greengram.feed.model.FeedGetRes@e943543, com.green.greengram.feed.model.FeedGetRes@69a9ca28, com.green.greengram.feed.model.FeedGetRes@4b315514, com.green.greengram.feed.model.FeedGetRes@7aae7896, com.green.greengram.feed.model.FeedGetRes@553f64ad, com.green.greengram.feed.model.FeedGetRes@72e00ca8, com.green.greengram.feed.model.FeedGetRes@33387e15, com.green.greengram.feed.model.FeedGetRes@3a5bca2c, com.green.greengram.feed.model.FeedGetRes@146fcbc6, com.green.greengram.feed.model.FeedGetRes@661810af, com.green.greengram.feed.model.FeedGetRes@16a002af, com.green.greengram.feed.model.FeedGetRes@72cea0fd, com.green.greengram.feed.model.FeedGetRes@18156499, com.green.greengram.feed.model.FeedGetRes@3e2e825c, com.green.greengram.feed.model.FeedGetRes@288d4a4c]
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:11:39 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:12:24 [32mINFO [0;39mFile Watcher] [[36m[org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener][0;39m
 Restarting due to 56 class path changes (0 additions, 0 deletions, 56 modifications)
[2024-12-20 11:12:24 [32mINFO [0;39mThread-5] [[36m[org.apache.coyote.http11.Http11NioProtocol][0;39m
 Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-20 11:12:24 [32mINFO [0;39mThread-5] [[36m[com.zaxxer.hikari.HikariDataSource][0;39m
 HikariPool-1 - Shutdown initiated...
[2024-12-20 11:12:24 [32mINFO [0;39mThread-5] [[36m[com.zaxxer.hikari.HikariDataSource][0;39m
 HikariPool-1 - Shutdown completed.
[2024-12-20 11:12:24 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.GreenGramApplication][0;39m
 Starting GreenGramApplication using Java 17.0.12 with PID 11296 (D:\GSY\GreenGramSecurity\build\classes\java\main started by Administrator in D:\GSY\GreenGramSecurity)
[2024-12-20 11:12:24 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.GreenGramApplication][0;39m
 No active profile set, falling back to 1 default profile: "default"
[2024-12-20 11:12:24 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.web.embedded.tomcat.TomcatWebServer][0;39m
 Tomcat initialized with port 8080 (http)
[2024-12-20 11:12:24 [32mINFO [0;39mrestartedMain] [[36m[org.apache.coyote.http11.Http11NioProtocol][0;39m
 Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-20 11:12:24 [32mINFO [0;39mrestartedMain] [[36m[org.apache.catalina.core.StandardService][0;39m
 Starting service [Tomcat]
[2024-12-20 11:12:24 [32mINFO [0;39mrestartedMain] [[36m[org.apache.catalina.core.StandardEngine][0;39m
 Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-20 11:12:24 [32mINFO [0;39mrestartedMain] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]][0;39m
 Initializing Spring embedded WebApplicationContext
[2024-12-20 11:12:24 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext][0;39m
 Root WebApplicationContext: initialization completed in 249 ms
[2024-12-20 11:12:24 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.common.MyFileUtils][0;39m
 MyFileUtils - ÏÉùÏÑ±Ïûê: D:\GSY\GreenGramVer3\greengram_ver3
[2024-12-20 11:12:24 [33mWARN [0;39mrestartedMain] [[36m[org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration][0;39m
 

Using generated security password: d375b5d9-6530-4903-85e7-8ad24299f0a3

This generated password is for development use only. Your security configuration must be updated before running your application in production.

[2024-12-20 11:12:24 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer][0;39m
 Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
[2024-12-20 11:12:24 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping][0;39m
 Adding welcome page: class path resource [static/index.html]
[2024-12-20 11:12:24 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer][0;39m
 LiveReload server is running on port 35729
[2024-12-20 11:12:24 [32mINFO [0;39mrestartedMain] [[36m[org.apache.coyote.http11.Http11NioProtocol][0;39m
 Starting ProtocolHandler ["http-nio-8080"]
[2024-12-20 11:12:24 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.web.embedded.tomcat.TomcatWebServer][0;39m
 Tomcat started on port 8080 (http) with context path '/'
[2024-12-20 11:12:24 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.GreenGramApplication][0;39m
 Started GreenGramApplication in 0.534 seconds (process running for 61.525)
[2024-12-20 11:12:24 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener][0;39m
 Condition evaluation unchanged
[2024-12-20 11:33:01 [32mINFO [0;39mbackground-preinit] [[36m[org.hibernate.validator.internal.util.Version][0;39m
 HV000001: Hibernate Validator 8.0.1.Final
[2024-12-20 11:33:01 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.GreenGramApplication][0;39m
 Starting GreenGramApplication using Java 17.0.12 with PID 11724 (D:\GSY\GreenGramSecurity\build\classes\java\main started by Administrator in D:\GSY\GreenGramSecurity)
[2024-12-20 11:33:01 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.GreenGramApplication][0;39m
 No active profile set, falling back to 1 default profile: "default"
[2024-12-20 11:33:01 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor][0;39m
 Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-20 11:33:01 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor][0;39m
 For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-20 11:33:02 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.web.embedded.tomcat.TomcatWebServer][0;39m
 Tomcat initialized with port 8080 (http)
[2024-12-20 11:33:02 [32mINFO [0;39mrestartedMain] [[36m[org.apache.coyote.http11.Http11NioProtocol][0;39m
 Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-20 11:33:02 [32mINFO [0;39mrestartedMain] [[36m[org.apache.catalina.core.StandardService][0;39m
 Starting service [Tomcat]
[2024-12-20 11:33:02 [32mINFO [0;39mrestartedMain] [[36m[org.apache.catalina.core.StandardEngine][0;39m
 Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-20 11:33:02 [32mINFO [0;39mrestartedMain] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]][0;39m
 Initializing Spring embedded WebApplicationContext
[2024-12-20 11:33:02 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext][0;39m
 Root WebApplicationContext: initialization completed in 902 ms
[2024-12-20 11:33:02 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.common.MyFileUtils][0;39m
 MyFileUtils - ÏÉùÏÑ±Ïûê: D:\GSY\GreenGramVer3\greengram_ver3
[2024-12-20 11:33:02 [33mWARN [0;39mrestartedMain] [[36m[org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration][0;39m
 

Using generated security password: 2558df01-9652-4ab4-a6bb-df5041d948f1

This generated password is for development use only. Your security configuration must be updated before running your application in production.

[2024-12-20 11:33:02 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer][0;39m
 Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
[2024-12-20 11:33:02 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping][0;39m
 Adding welcome page: class path resource [static/index.html]
[2024-12-20 11:33:02 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer][0;39m
 LiveReload server is running on port 35729
[2024-12-20 11:33:02 [32mINFO [0;39mrestartedMain] [[36m[org.apache.coyote.http11.Http11NioProtocol][0;39m
 Starting ProtocolHandler ["http-nio-8080"]
[2024-12-20 11:33:02 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.web.embedded.tomcat.TomcatWebServer][0;39m
 Tomcat started on port 8080 (http) with context path '/'
[2024-12-20 11:33:02 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.GreenGramApplication][0;39m
 Started GreenGramApplication in 1.913 seconds (process running for 2.327)
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]][0;39m
 Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[org.springframework.web.servlet.DispatcherServlet][0;39m
 Initializing Servlet 'dispatcherServlet'
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[org.springframework.web.servlet.DispatcherServlet][0;39m
 Completed initialization in 1 ms
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MDY5NCwiZXhwIjoxNzM0NjY2Njk0LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6NSxcInJvbGVzXCI6W1wiUk9MRV9VU0VSXCIsXCJST0xFX0FETUlOXCJdfSJ9.3U3kIU-XWtWkrUs6854bkWabnaS_fKnPC8tdI33KJB1xUejpgRVUuVNnBAWt2erd
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MDY5NCwiZXhwIjoxNzM0NjY2Njk0LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6NSxcInJvbGVzXCI6W1wiUk9MRV9VU0VSXCIsXCJST0xFX0FETUlOXCJdfSJ9.3U3kIU-XWtWkrUs6854bkWabnaS_fKnPC8tdI33KJB1xUejpgRVUuVNnBAWt2erd
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.feed.model.FeedGetReq][0;39m
 page: 1, size: null, profileUserId: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.feed.FeedController][0;39m
 FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=0, profileUserId=null)
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.zaxxer.hikari.HikariDataSource][0;39m
 HikariPool-1 - Starting...
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.zaxxer.hikari.pool.HikariPool][0;39m
 HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@23854b27
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.zaxxer.hikari.HikariDataSource][0;39m
 HikariPool-1 - Start completed.
[2024-12-20 11:33:08 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  A.feed_id AS feedId, A.contents, A.location
          , A.created_at AS createdAt
          , B.user_id AS writerUserId
          , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
          , B.pic AS writerPic
          , IF(C.feed_id IS NULL, 0 , 1) AS isLike
     FROM feed A
    INNER JOIN user B
       ON A.writer_user_id = B.user_id
     LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 5

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 0 msec}
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location  |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|
|76      |ÌîºÎìúÎÇ¥Ïö©ÌÖåÏä§Ìä∏  |Í∑∏Î¶ºÏª¥Ìì®ÌÑ∞ÏïÑÌä∏ÌïôÏõê |2024-12-19 11:46:59 |5       |1111     |9e2d2e13-79a7-481f-b221-26e228ce8a4d.jpg |0      |
|75      |asdf     |asdf      |2024-12-10 10:55:05 |19      |zxzx     |2f008281-bcf1-4873-812c-20ab707bf4c7     |0      |
|73      |         |          |2024-12-10 10:33:25 |9       |0        |445adb23-d27b-43c2-837a-3e70f0bfae01     |0      |
|72      |         |          |2024-12-10 10:06:53 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|71      |         |          |2024-12-10 10:04:30 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|70      |ÎßåÏÇ≠       |          |2024-12-10 10:04:12 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|68      |aaaaa    |aaaaa     |2024-12-10 09:50:56 |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |0      |
|67      |         |          |2024-12-09 16:52:00 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|66      |         |          |2024-12-09 16:45:57 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|65      |         |          |2024-12-09 16:38:08 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|64      |         |          |2024-12-09 16:38:04 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|63      |         |          |2024-12-09 16:37:59 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|62      |Îãà ÎØ∏Îûò
ÎÇ®Ìé∏  |          |2024-12-09 16:27:39 |17      |ddd      |null                                     |0      |
|61      |         |          |2024-12-09 16:26:51 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|60      |         |          |2024-12-09 16:19:37 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|59      |         |          |2024-12-09 16:19:21 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|58      |         |          |2024-12-09 16:19:10 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|57      |„Öã„Öã       |          |2024-12-09 16:07:37 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|56      |Î™ÖÎ∞ïÏ®©      |          |2024-12-09 16:06:14 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|55      |Í∑ºÌòúÏ∞°      |          |2024-12-09 16:06:06 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-20 11:33:08 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 76
 {executed in 0 msec}
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6d1cd1f5-8f13-4d99-9665-4dbab9b47fb7.png |
|fe728007-d85c-4ab7-8577-58a4c81ff176.gif |
|-----------------------------------------|

[2024-12-20 11:33:08 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 76
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:33:08 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 75
 {executed in 0 msec}
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a6fb41e-8434-4c72-8139-1169c075b2e8.png |
|-----------------------------------------|

[2024-12-20 11:33:08 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 75
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|----------------|-----------------|--------|---------|-----------------------------------------|
|feed_comment_id |comment          |user_id |writernm |pic                                      |
|----------------|-----------------|--------|---------|-----------------------------------------|
|106             |„Öá„Ñ¥„Ñª„Ñ¥„Öá„Ñª„Ñ¥„Öá„Ñπ„Ñ¥„Öá„Ñπ„Ñ¥„Öá„Ñª„Ñ¥ |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|105             |„Öá„Ñª„Öá„Ñª„Ñ¥„Öá„Ñª„Ñ¥„Öá„Ñπ„Ñ¥„Öá„Ñπ    |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|----------------|-----------------|--------|---------|-----------------------------------------|

[2024-12-20 11:33:08 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 73
 {executed in 1 msec}
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b53d82b3-0379-49c9-9c85-cb9c403c6523.jpg |
|-----------------------------------------|

[2024-12-20 11:33:08 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 73
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|104             |ÏåâÍ≤åÏù¥ÎÑ§    |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|103             |Í≤åÏù¥Í≤åÏù¥Ïïº   |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|102             |‚ô°       |9       |0        |445adb23-d27b-43c2-837a-3e70f0bfae01     |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-20 11:33:08 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 72
 {executed in 0 msec}
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|74f8b9ea-6e30-48e1-983a-3d09b7dbabea.gif |
|-----------------------------------------|

[2024-12-20 11:33:08 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 72
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:33:08 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 71
 {executed in 0 msec}
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2d1c8d65-5c08-4f78-96df-1fb6349d58d0.gif |
|-----------------------------------------|

[2024-12-20 11:33:08 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 71
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:33:08 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 70
 {executed in 0 msec}
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|87f5ba66-f8e4-41ca-a7ec-1d394b7ae5f7.jpg |
|-----------------------------------------|

[2024-12-20 11:33:08 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 70
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|101             |Î≥¥Ïó¨Ï§ò     |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-20 11:33:08 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|62d4ef6f-50e4-406f-ae1e-d1f64060366a.jpg |
|-----------------------------------------|

[2024-12-20 11:33:08 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 68
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:33:08 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5e5df70e-01d4-4b33-9e87-00e6a716008d.gif |
|-----------------------------------------|

[2024-12-20 11:33:08 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 67
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|----------------|----------|--------|---------|----|
|feed_comment_id |comment   |user_id |writernm |pic |
|----------------|----------|--------|---------|----|
|100             |Í∞úÏ∂î Î∞ïÍ≥† Í∞ëÎãàÎã§ |17      |ddd      |null|
|----------------|----------|--------|---------|----|

[2024-12-20 11:33:08 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 66
 {executed in 0 msec}
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2b6887e5-7070-4f39-a5db-bc4d35bb51fa.gif |
|-----------------------------------------|

[2024-12-20 11:33:08 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 66
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|----------------|-------------|--------|---------|----|
|feed_comment_id |comment      |user_id |writernm |pic |
|----------------|-------------|--------|---------|----|
|99              |ÏàòÏòÅÏïÑ Í¥ÄÎ¶¨ ÏïàÌïòÎÉê?  |17      |ddd      |null|
|98              |Ïó¨ ÌîºÎìú Í∞ú Ï≥ê ÎçîÎüΩÎÑ§ |17      |ddd      |null|
|----------------|-------------|--------|---------|----|

[2024-12-20 11:33:08 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 65
 {executed in 0 msec}
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0b2c055a-2426-4dbc-8f83-403ecd3fa464.gif |
|-----------------------------------------|

[2024-12-20 11:33:08 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 65
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:33:08 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 64
 {executed in 0 msec}
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d252f5fe-6aa1-4212-b558-caedfb9d59c5.gif |
|-----------------------------------------|

[2024-12-20 11:33:08 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 64
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:33:08 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 63
 {executed in 0 msec}
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|86cea73b-80b4-4501-aaeb-4db5007ded5f.gif |
|-----------------------------------------|

[2024-12-20 11:33:08 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 63
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:33:08 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 62
 {executed in 0 msec}
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|943ec3db-6b2f-4d8a-a1d9-cdfa7b2fe921.jpeg |
|------------------------------------------|

[2024-12-20 11:33:08 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 62
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:33:08 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 61
 {executed in 0 msec}
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bb7c519a-0113-4137-ada5-4bfa9df4b5d7.gif |
|-----------------------------------------|

[2024-12-20 11:33:08 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 61
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:33:08 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|282ad40c-d6c6-4183-8781-2cd3a5d80ade.gif |
|-----------------------------------------|

[2024-12-20 11:33:08 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 60
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:33:08 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 59
 {executed in 0 msec}
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|261ecdff-f966-4797-bc07-75a9eb1a5eee.gif |
|-----------------------------------------|

[2024-12-20 11:33:08 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 59
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:33:08 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 58
 {executed in 0 msec}
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|68c097ba-aa57-4002-a3bd-774851007b2a.gif |
|-----------------------------------------|

[2024-12-20 11:33:08 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 58
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:33:08 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 57
 {executed in 0 msec}
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3298dc0e-3231-4773-982a-47e30f2531e5.jpg |
|f5512946-3498-437e-ac4c-28c8a06fc9f0.jpg |
|-----------------------------------------|

[2024-12-20 11:33:08 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 57
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|----------------|---------|--------|---------|-------------------------------------|
|feed_comment_id |comment  |user_id |writernm |pic                                  |
|----------------|---------|--------|---------|-------------------------------------|
|97              |„Ñ∑„Ñ∑;; ÎÖ∏ÏïåÎùº |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743 |
|----------------|---------|--------|---------|-------------------------------------|

[2024-12-20 11:33:08 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 56
 {executed in 0 msec}
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f661e26c-8b44-49d5-a944-cceeea6116a7.jpg |
|-----------------------------------------|

[2024-12-20 11:33:08 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 56
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:33:08 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 55
 {executed in 0 msec}
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dc7ee72b-960a-431b-b021-bdfc625c097b.jpg |
|-----------------------------------------|

[2024-12-20 11:33:08 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 55
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:08 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MDY5NCwiZXhwIjoxNzM0NjY2Njk0LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6NSxcInJvbGVzXCI6W1wiUk9MRV9VU0VSXCIsXCJST0xFX0FETUlOXCJdfSJ9.3U3kIU-XWtWkrUs6854bkWabnaS_fKnPC8tdI33KJB1xUejpgRVUuVNnBAWt2erd
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MDY5NCwiZXhwIjoxNzM0NjY2Njk0LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6NSxcInJvbGVzXCI6W1wiUk9MRV9VU0VSXCIsXCJST0xFX0FETUlOXCJdfSJ9.3U3kIU-XWtWkrUs6854bkWabnaS_fKnPC8tdI33KJB1xUejpgRVUuVNnBAWt2erd
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.feed.model.FeedGetReq][0;39m
 page: 1, size: null, profileUserId: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.feed.FeedController][0;39m
 FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=0, profileUserId=null)
[2024-12-20 11:33:11 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  A.feed_id AS feedId, A.contents, A.location
          , A.created_at AS createdAt
          , B.user_id AS writerUserId
          , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
          , B.pic AS writerPic
          , IF(C.feed_id IS NULL, 0 , 1) AS isLike
     FROM feed A
    INNER JOIN user B
       ON A.writer_user_id = B.user_id
     LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 5

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 1 msec}
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location  |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|
|76      |ÌîºÎìúÎÇ¥Ïö©ÌÖåÏä§Ìä∏  |Í∑∏Î¶ºÏª¥Ìì®ÌÑ∞ÏïÑÌä∏ÌïôÏõê |2024-12-19 11:46:59 |5       |1111     |9e2d2e13-79a7-481f-b221-26e228ce8a4d.jpg |0      |
|75      |asdf     |asdf      |2024-12-10 10:55:05 |19      |zxzx     |2f008281-bcf1-4873-812c-20ab707bf4c7     |0      |
|73      |         |          |2024-12-10 10:33:25 |9       |0        |445adb23-d27b-43c2-837a-3e70f0bfae01     |0      |
|72      |         |          |2024-12-10 10:06:53 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|71      |         |          |2024-12-10 10:04:30 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|70      |ÎßåÏÇ≠       |          |2024-12-10 10:04:12 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|68      |aaaaa    |aaaaa     |2024-12-10 09:50:56 |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |0      |
|67      |         |          |2024-12-09 16:52:00 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|66      |         |          |2024-12-09 16:45:57 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|65      |         |          |2024-12-09 16:38:08 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|64      |         |          |2024-12-09 16:38:04 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|63      |         |          |2024-12-09 16:37:59 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|62      |Îãà ÎØ∏Îûò
ÎÇ®Ìé∏  |          |2024-12-09 16:27:39 |17      |ddd      |null                                     |0      |
|61      |         |          |2024-12-09 16:26:51 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|60      |         |          |2024-12-09 16:19:37 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|59      |         |          |2024-12-09 16:19:21 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|58      |         |          |2024-12-09 16:19:10 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|57      |„Öã„Öã       |          |2024-12-09 16:07:37 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|56      |Î™ÖÎ∞ïÏ®©      |          |2024-12-09 16:06:14 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|55      |Í∑ºÌòúÏ∞°      |          |2024-12-09 16:06:06 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:11 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 76
 {executed in 0 msec}
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6d1cd1f5-8f13-4d99-9665-4dbab9b47fb7.png |
|fe728007-d85c-4ab7-8577-58a4c81ff176.gif |
|-----------------------------------------|

[2024-12-20 11:33:11 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 76
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:33:11 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 75
 {executed in 0 msec}
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a6fb41e-8434-4c72-8139-1169c075b2e8.png |
|-----------------------------------------|

[2024-12-20 11:33:11 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 75
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|----------------|-----------------|--------|---------|-----------------------------------------|
|feed_comment_id |comment          |user_id |writernm |pic                                      |
|----------------|-----------------|--------|---------|-----------------------------------------|
|106             |„Öá„Ñ¥„Ñª„Ñ¥„Öá„Ñª„Ñ¥„Öá„Ñπ„Ñ¥„Öá„Ñπ„Ñ¥„Öá„Ñª„Ñ¥ |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|105             |„Öá„Ñª„Öá„Ñª„Ñ¥„Öá„Ñª„Ñ¥„Öá„Ñπ„Ñ¥„Öá„Ñπ    |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|----------------|-----------------|--------|---------|-----------------------------------------|

[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:11 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 73
 {executed in 0 msec}
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b53d82b3-0379-49c9-9c85-cb9c403c6523.jpg |
|-----------------------------------------|

[2024-12-20 11:33:11 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 73
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|104             |ÏåâÍ≤åÏù¥ÎÑ§    |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|103             |Í≤åÏù¥Í≤åÏù¥Ïïº   |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|102             |‚ô°       |9       |0        |445adb23-d27b-43c2-837a-3e70f0bfae01     |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-20 11:33:11 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 72
 {executed in 1 msec}
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|74f8b9ea-6e30-48e1-983a-3d09b7dbabea.gif |
|-----------------------------------------|

[2024-12-20 11:33:11 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 72
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:33:11 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 71
 {executed in 0 msec}
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2d1c8d65-5c08-4f78-96df-1fb6349d58d0.gif |
|-----------------------------------------|

[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:11 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 71
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:33:11 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 70
 {executed in 1 msec}
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|87f5ba66-f8e4-41ca-a7ec-1d394b7ae5f7.jpg |
|-----------------------------------------|

[2024-12-20 11:33:11 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 70
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|101             |Î≥¥Ïó¨Ï§ò     |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-20 11:33:11 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 1 msec}
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|62d4ef6f-50e4-406f-ae1e-d1f64060366a.jpg |
|-----------------------------------------|

[2024-12-20 11:33:11 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 68
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:33:11 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5e5df70e-01d4-4b33-9e87-00e6a716008d.gif |
|-----------------------------------------|

[2024-12-20 11:33:11 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 67
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|----------------|----------|--------|---------|----|
|feed_comment_id |comment   |user_id |writernm |pic |
|----------------|----------|--------|---------|----|
|100             |Í∞úÏ∂î Î∞ïÍ≥† Í∞ëÎãàÎã§ |17      |ddd      |null|
|----------------|----------|--------|---------|----|

[2024-12-20 11:33:11 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 66
 {executed in 0 msec}
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2b6887e5-7070-4f39-a5db-bc4d35bb51fa.gif |
|-----------------------------------------|

[2024-12-20 11:33:11 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 66
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|----------------|-------------|--------|---------|----|
|feed_comment_id |comment      |user_id |writernm |pic |
|----------------|-------------|--------|---------|----|
|99              |ÏàòÏòÅÏïÑ Í¥ÄÎ¶¨ ÏïàÌïòÎÉê?  |17      |ddd      |null|
|98              |Ïó¨ ÌîºÎìú Í∞ú Ï≥ê ÎçîÎüΩÎÑ§ |17      |ddd      |null|
|----------------|-------------|--------|---------|----|

[2024-12-20 11:33:11 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 65
 {executed in 1 msec}
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0b2c055a-2426-4dbc-8f83-403ecd3fa464.gif |
|-----------------------------------------|

[2024-12-20 11:33:11 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 65
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:33:11 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 64
 {executed in 0 msec}
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d252f5fe-6aa1-4212-b558-caedfb9d59c5.gif |
|-----------------------------------------|

[2024-12-20 11:33:11 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 64
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:33:11 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 63
 {executed in 0 msec}
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|86cea73b-80b4-4501-aaeb-4db5007ded5f.gif |
|-----------------------------------------|

[2024-12-20 11:33:11 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 63
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:33:11 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 62
 {executed in 0 msec}
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|943ec3db-6b2f-4d8a-a1d9-cdfa7b2fe921.jpeg |
|------------------------------------------|

[2024-12-20 11:33:11 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 62
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:33:11 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 61
 {executed in 0 msec}
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bb7c519a-0113-4137-ada5-4bfa9df4b5d7.gif |
|-----------------------------------------|

[2024-12-20 11:33:11 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 61
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:33:11 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|282ad40c-d6c6-4183-8781-2cd3a5d80ade.gif |
|-----------------------------------------|

[2024-12-20 11:33:11 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 60
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:33:11 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 59
 {executed in 0 msec}
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|261ecdff-f966-4797-bc07-75a9eb1a5eee.gif |
|-----------------------------------------|

[2024-12-20 11:33:11 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 59
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:33:11 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 58
 {executed in 0 msec}
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|68c097ba-aa57-4002-a3bd-774851007b2a.gif |
|-----------------------------------------|

[2024-12-20 11:33:11 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 58
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:33:11 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 57
 {executed in 0 msec}
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3298dc0e-3231-4773-982a-47e30f2531e5.jpg |
|f5512946-3498-437e-ac4c-28c8a06fc9f0.jpg |
|-----------------------------------------|

[2024-12-20 11:33:11 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 57
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|----------------|---------|--------|---------|-------------------------------------|
|feed_comment_id |comment  |user_id |writernm |pic                                  |
|----------------|---------|--------|---------|-------------------------------------|
|97              |„Ñ∑„Ñ∑;; ÎÖ∏ÏïåÎùº |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743 |
|----------------|---------|--------|---------|-------------------------------------|

[2024-12-20 11:33:11 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 56
 {executed in 0 msec}
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f661e26c-8b44-49d5-a944-cceeea6116a7.jpg |
|-----------------------------------------|

[2024-12-20 11:33:11 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 56
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:33:11 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 55
 {executed in 0 msec}
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dc7ee72b-960a-431b-b021-bdfc625c097b.jpg |
|-----------------------------------------|

[2024-12-20 11:33:11 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 55
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:33:11 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:34:33 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:34:33 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:34:33 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:34:33 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:34:33 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:34:33 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:34:33 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:34:33 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:34:33 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:34:33 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:34:33 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:34:33 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:34:33 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:34:33 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:34:33 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:34:33 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:34:33 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:34:33 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:34:33 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:34:33 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:34:33 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:34:33 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:34:33 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:34:33 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:35:44 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:35:44 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:35:44 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:35:44 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:35:44 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:35:44 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:35:44 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:35:44 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:35:44 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:35:44 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:35:44 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:35:44 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MDY5NCwiZXhwIjoxNzM0NjY2Njk0LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6NSxcInJvbGVzXCI6W1wiUk9MRV9VU0VSXCIsXCJST0xFX0FETUlOXCJdfSJ9.3U3kIU-XWtWkrUs6854bkWabnaS_fKnPC8tdI33KJB1xUejpgRVUuVNnBAWt2erd
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MDY5NCwiZXhwIjoxNzM0NjY2Njk0LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6NSxcInJvbGVzXCI6W1wiUk9MRV9VU0VSXCIsXCJST0xFX0FETUlOXCJdfSJ9.3U3kIU-XWtWkrUs6854bkWabnaS_fKnPC8tdI33KJB1xUejpgRVUuVNnBAWt2erd
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.feed.model.FeedGetReq][0;39m
 page: 1, size: null, profileUserId: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.feed.FeedController][0;39m
 FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=0, profileUserId=null)
[2024-12-20 11:35:45 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  A.feed_id AS feedId, A.contents, A.location
          , A.created_at AS createdAt
          , B.user_id AS writerUserId
          , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
          , B.pic AS writerPic
          , IF(C.feed_id IS NULL, 0 , 1) AS isLike
     FROM feed A
    INNER JOIN user B
       ON A.writer_user_id = B.user_id
     LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 5

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 1 msec}
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location  |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|
|76      |ÌîºÎìúÎÇ¥Ïö©ÌÖåÏä§Ìä∏  |Í∑∏Î¶ºÏª¥Ìì®ÌÑ∞ÏïÑÌä∏ÌïôÏõê |2024-12-19 11:46:59 |5       |1111     |9e2d2e13-79a7-481f-b221-26e228ce8a4d.jpg |0      |
|75      |asdf     |asdf      |2024-12-10 10:55:05 |19      |zxzx     |2f008281-bcf1-4873-812c-20ab707bf4c7     |0      |
|73      |         |          |2024-12-10 10:33:25 |9       |0        |445adb23-d27b-43c2-837a-3e70f0bfae01     |0      |
|72      |         |          |2024-12-10 10:06:53 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|71      |         |          |2024-12-10 10:04:30 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|70      |ÎßåÏÇ≠       |          |2024-12-10 10:04:12 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|68      |aaaaa    |aaaaa     |2024-12-10 09:50:56 |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |0      |
|67      |         |          |2024-12-09 16:52:00 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|66      |         |          |2024-12-09 16:45:57 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|65      |         |          |2024-12-09 16:38:08 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|64      |         |          |2024-12-09 16:38:04 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|63      |         |          |2024-12-09 16:37:59 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|62      |Îãà ÎØ∏Îûò
ÎÇ®Ìé∏  |          |2024-12-09 16:27:39 |17      |ddd      |null                                     |0      |
|61      |         |          |2024-12-09 16:26:51 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|60      |         |          |2024-12-09 16:19:37 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|59      |         |          |2024-12-09 16:19:21 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|58      |         |          |2024-12-09 16:19:10 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|57      |„Öã„Öã       |          |2024-12-09 16:07:37 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|56      |Î™ÖÎ∞ïÏ®©      |          |2024-12-09 16:06:14 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|55      |Í∑ºÌòúÏ∞°      |          |2024-12-09 16:06:06 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-20 11:35:45 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 76
 {executed in 0 msec}
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6d1cd1f5-8f13-4d99-9665-4dbab9b47fb7.png |
|fe728007-d85c-4ab7-8577-58a4c81ff176.gif |
|-----------------------------------------|

[2024-12-20 11:35:45 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 76
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:35:45 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 75
 {executed in 0 msec}
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a6fb41e-8434-4c72-8139-1169c075b2e8.png |
|-----------------------------------------|

[2024-12-20 11:35:45 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 75
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|----------------|-----------------|--------|---------|-----------------------------------------|
|feed_comment_id |comment          |user_id |writernm |pic                                      |
|----------------|-----------------|--------|---------|-----------------------------------------|
|106             |„Öá„Ñ¥„Ñª„Ñ¥„Öá„Ñª„Ñ¥„Öá„Ñπ„Ñ¥„Öá„Ñπ„Ñ¥„Öá„Ñª„Ñ¥ |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|105             |„Öá„Ñª„Öá„Ñª„Ñ¥„Öá„Ñª„Ñ¥„Öá„Ñπ„Ñ¥„Öá„Ñπ    |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|----------------|-----------------|--------|---------|-----------------------------------------|

[2024-12-20 11:35:45 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 73
 {executed in 1 msec}
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b53d82b3-0379-49c9-9c85-cb9c403c6523.jpg |
|-----------------------------------------|

[2024-12-20 11:35:45 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 73
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|104             |ÏåâÍ≤åÏù¥ÎÑ§    |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|103             |Í≤åÏù¥Í≤åÏù¥Ïïº   |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|102             |‚ô°       |9       |0        |445adb23-d27b-43c2-837a-3e70f0bfae01     |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-20 11:35:45 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 72
 {executed in 0 msec}
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|74f8b9ea-6e30-48e1-983a-3d09b7dbabea.gif |
|-----------------------------------------|

[2024-12-20 11:35:45 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 72
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:35:45 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 71
 {executed in 0 msec}
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2d1c8d65-5c08-4f78-96df-1fb6349d58d0.gif |
|-----------------------------------------|

[2024-12-20 11:35:45 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 71
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:35:45 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 70
 {executed in 0 msec}
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|87f5ba66-f8e4-41ca-a7ec-1d394b7ae5f7.jpg |
|-----------------------------------------|

[2024-12-20 11:35:45 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 70
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|101             |Î≥¥Ïó¨Ï§ò     |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-20 11:35:45 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|62d4ef6f-50e4-406f-ae1e-d1f64060366a.jpg |
|-----------------------------------------|

[2024-12-20 11:35:45 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 68
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:35:45 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5e5df70e-01d4-4b33-9e87-00e6a716008d.gif |
|-----------------------------------------|

[2024-12-20 11:35:45 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 67
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|----------------|----------|--------|---------|----|
|feed_comment_id |comment   |user_id |writernm |pic |
|----------------|----------|--------|---------|----|
|100             |Í∞úÏ∂î Î∞ïÍ≥† Í∞ëÎãàÎã§ |17      |ddd      |null|
|----------------|----------|--------|---------|----|

[2024-12-20 11:35:45 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 66
 {executed in 0 msec}
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2b6887e5-7070-4f39-a5db-bc4d35bb51fa.gif |
|-----------------------------------------|

[2024-12-20 11:35:45 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 66
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|----------------|-------------|--------|---------|----|
|feed_comment_id |comment      |user_id |writernm |pic |
|----------------|-------------|--------|---------|----|
|99              |ÏàòÏòÅÏïÑ Í¥ÄÎ¶¨ ÏïàÌïòÎÉê?  |17      |ddd      |null|
|98              |Ïó¨ ÌîºÎìú Í∞ú Ï≥ê ÎçîÎüΩÎÑ§ |17      |ddd      |null|
|----------------|-------------|--------|---------|----|

[2024-12-20 11:35:45 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 65
 {executed in 0 msec}
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0b2c055a-2426-4dbc-8f83-403ecd3fa464.gif |
|-----------------------------------------|

[2024-12-20 11:35:45 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 65
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:35:45 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 64
 {executed in 1 msec}
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d252f5fe-6aa1-4212-b558-caedfb9d59c5.gif |
|-----------------------------------------|

[2024-12-20 11:35:45 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 64
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:35:45 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 63
 {executed in 0 msec}
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|86cea73b-80b4-4501-aaeb-4db5007ded5f.gif |
|-----------------------------------------|

[2024-12-20 11:35:45 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 63
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:35:45 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 62
 {executed in 0 msec}
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|943ec3db-6b2f-4d8a-a1d9-cdfa7b2fe921.jpeg |
|------------------------------------------|

[2024-12-20 11:35:45 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 62
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:35:45 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 61
 {executed in 0 msec}
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bb7c519a-0113-4137-ada5-4bfa9df4b5d7.gif |
|-----------------------------------------|

[2024-12-20 11:35:45 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 61
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:35:45 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|282ad40c-d6c6-4183-8781-2cd3a5d80ade.gif |
|-----------------------------------------|

[2024-12-20 11:35:45 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 60
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:35:45 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 59
 {executed in 0 msec}
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|261ecdff-f966-4797-bc07-75a9eb1a5eee.gif |
|-----------------------------------------|

[2024-12-20 11:35:45 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 59
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:35:45 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 58
 {executed in 0 msec}
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|68c097ba-aa57-4002-a3bd-774851007b2a.gif |
|-----------------------------------------|

[2024-12-20 11:35:45 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 58
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:35:45 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 57
 {executed in 0 msec}
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3298dc0e-3231-4773-982a-47e30f2531e5.jpg |
|f5512946-3498-437e-ac4c-28c8a06fc9f0.jpg |
|-----------------------------------------|

[2024-12-20 11:35:45 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 57
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|----------------|---------|--------|---------|-------------------------------------|
|feed_comment_id |comment  |user_id |writernm |pic                                  |
|----------------|---------|--------|---------|-------------------------------------|
|97              |„Ñ∑„Ñ∑;; ÎÖ∏ÏïåÎùº |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743 |
|----------------|---------|--------|---------|-------------------------------------|

[2024-12-20 11:35:45 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 56
 {executed in 0 msec}
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f661e26c-8b44-49d5-a944-cceeea6116a7.jpg |
|-----------------------------------------|

[2024-12-20 11:35:45 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 56
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:35:45 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 55
 {executed in 0 msec}
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dc7ee72b-960a-431b-b021-bdfc625c097b.jpg |
|-----------------------------------------|

[2024-12-20 11:35:45 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 55
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:35:45 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:35:46 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:35:46 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:35:46 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:35:46 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:35:46 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:35:46 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:35:46 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:35:46 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:35:46 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:35:46 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:35:46 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:35:46 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:35:46 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:35:46 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:35:46 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:35:46 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:35:46 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:35:46 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:35:46 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:35:46 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:35:46 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:35:47 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:35:47 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:35:47 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:35:47 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:35:47 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:35:47 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:35:47 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[org.springdoc.api.AbstractOpenApiResource][0;39m
 Init duration for springdoc-openapi is: 193 ms
[2024-12-20 11:36:09 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:36:09 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:36:09 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:36:09 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id AS userId,
        IFNULL(nick_name,uid) AS nickName, pic, upw
        FROM user
        WHERE uid = '1111'
 {executed in 0 msec}
[2024-12-20 11:36:09 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|--------|---------|-----------------------------------------|-------------------------------------------------------------|
|user_id |nickname |pic                                      |upw                                                          |
|--------|---------|-----------------------------------------|-------------------------------------------------------------|
|5       |1111     |9e2d2e13-79a7-481f-b221-26e228ce8a4d.jpg |$2a$10$eH60DKexA0FC5txA3eiptOQNf6ey3QLAaqnrlS0CsZFY3JnfM6iwu |
|--------|---------|-----------------------------------------|-------------------------------------------------------------|

[2024-12-20 11:36:25 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:36:25 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjE2OSwiZXhwIjoxNzM0NjY4MTY5LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6NSxcInJvbGVzXCI6W1wiUk9MRV9VU0VSXCIsXCJST0xFX0FETUlOXCJdfSJ9.8OEO7gdZH8-hIeRN54K6EoLmoVDvsbUkO7E6HH2HeZINW2H3t1cjrz339Qvv_yFq
[2024-12-20 11:36:25 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjE2OSwiZXhwIjoxNzM0NjY4MTY5LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6NSxcInJvbGVzXCI6W1wiUk9MRV9VU0VSXCIsXCJST0xFX0FETUlOXCJdfSJ9.8OEO7gdZH8-hIeRN54K6EoLmoVDvsbUkO7E6HH2HeZINW2H3t1cjrz339Qvv_yFq
[2024-12-20 11:36:25 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.feed.model.FeedGetReq][0;39m
 page: 1, size: 30, profileUserId: 5
[2024-12-20 11:36:25 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.feed.FeedController][0;39m
 FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=30, startIdx=0), signedUserId=0, profileUserId=5)
[2024-12-20 11:36:25 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  A.feed_id AS feedId, A.contents, A.location
          , A.created_at AS createdAt
          , B.user_id AS writerUserId
          , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
          , B.pic AS writerPic
          , IF(C.feed_id IS NULL, 0 , 1) AS isLike
     FROM feed A
    INNER JOIN user B
       ON A.writer_user_id = B.user_id
     LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 5

            WHERE A.writer_user_id = 5

    ORDER BY A.feed_id DESC
    LIMIT 0, 30
 {executed in 1 msec}
[2024-12-20 11:36:25 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location  |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|
|76      |ÌîºÎìúÎÇ¥Ïö©ÌÖåÏä§Ìä∏  |Í∑∏Î¶ºÏª¥Ìì®ÌÑ∞ÏïÑÌä∏ÌïôÏõê |2024-12-19 11:46:59 |5       |1111     |9e2d2e13-79a7-481f-b221-26e228ce8a4d.jpg |0      |
|6       |djkjaldf |dfadfasd  |2024-11-29 15:41:58 |5       |1111     |9e2d2e13-79a7-481f-b221-26e228ce8a4d.jpg |1      |
|5       |djkjaldf |dfadfasd  |2024-11-29 14:54:50 |5       |1111     |9e2d2e13-79a7-481f-b221-26e228ce8a4d.jpg |1      |
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-20 11:36:25 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 76
 {executed in 0 msec}
[2024-12-20 11:36:25 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6d1cd1f5-8f13-4d99-9665-4dbab9b47fb7.png |
|fe728007-d85c-4ab7-8577-58a4c81ff176.gif |
|-----------------------------------------|

[2024-12-20 11:36:25 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 76
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:36:25 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:36:25 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 6
 {executed in 0 msec}
[2024-12-20 11:36:25 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3d9f859a-1ddd-4b62-bc37-4fa095a5ac3f.jpg |
|-----------------------------------------|

[2024-12-20 11:36:25 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 6
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:36:25 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|94              |„ÖÅ„Öá„Ñª„Ñ¥„Öá   |5       |1111     |9e2d2e13-79a7-481f-b221-26e228ce8a4d.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-20 11:36:25 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 5
 {executed in 0 msec}
[2024-12-20 11:36:25 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1d4b97f1-520d-424c-81ad-338f278b445a.jpg |
|-----------------------------------------|

[2024-12-20 11:36:25 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 5
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:36:25 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|95              |ÎÄ®Ïö∞      |5       |1111     |9e2d2e13-79a7-481f-b221-26e228ce8a4d.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-20 11:43:15 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:43:15 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:43:15 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:43:15 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:43:15 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:43:15 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:43:15 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:43:15 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:43:15 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:43:15 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:43:15 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:43:15 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:43:15 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:43:15 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:43:15 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:43:15 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:43:15 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:43:15 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:43:15 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:43:15 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:43:15 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:43:19 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:43:19 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:43:19 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:43:19 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id AS userId,
        IFNULL(nick_name,uid) AS nickName, pic, upw
        FROM user
        WHERE uid = '1'
 {executed in 1 msec}
[2024-12-20 11:43:19 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|--------|---------|-------------------------------------|-------------------------------------------------------------|
|user_id |nickname |pic                                  |upw                                                          |
|--------|---------|-------------------------------------|-------------------------------------------------------------|
|18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c |$2a$10$JG1wwP4KEQYMRc448quKou3z/Ai8kMm8w1khsMD9gkZTA0p.ojWfq |
|--------|---------|-------------------------------------|-------------------------------------------------------------|

[2024-12-20 11:43:28 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:43:28 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:43:28 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:43:28 [31mERROR[0;39mhttp-nio-8080-exec-5] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:43:29 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:43:29 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:43:29 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:43:29 [31mERROR[0;39mhttp-nio-8080-exec-4] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:43:30 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:43:30 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:43:30 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:43:30 [31mERROR[0;39mhttp-nio-8080-exec-3] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:43:30 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:43:30 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:43:30 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:43:30 [31mERROR[0;39mhttp-nio-8080-exec-2] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:43:30 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:43:30 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:43:30 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:43:30 [31mERROR[0;39mhttp-nio-8080-exec-6] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:43:30 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:43:30 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:43:30 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:43:30 [31mERROR[0;39mhttp-nio-8080-exec-8] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:43:30 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:43:30 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:43:30 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:43:30 [31mERROR[0;39mhttp-nio-8080-exec-10] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:43:31 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:43:31 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:43:31 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:43:31 [31mERROR[0;39mhttp-nio-8080-exec-9] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:43:31 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:43:31 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:43:31 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:43:31 [31mERROR[0;39mhttp-nio-8080-exec-1] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:43:31 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:43:31 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:43:31 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:43:31 [31mERROR[0;39mhttp-nio-8080-exec-7] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:43:31 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:43:31 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:43:31 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:43:31 [31mERROR[0;39mhttp-nio-8080-exec-5] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:43:31 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:43:31 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:43:31 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:43:31 [31mERROR[0;39mhttp-nio-8080-exec-4] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:43:33 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:43:33 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:43:33 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:43:33 [31mERROR[0;39mhttp-nio-8080-exec-3] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:43:33 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:43:33 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:43:33 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:43:33 [31mERROR[0;39mhttp-nio-8080-exec-2] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:43:36 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:43:36 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:43:36 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:43:36 [31mERROR[0;39mhttp-nio-8080-exec-6] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:43:44 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:43:44 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:43:44 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:43:44 [31mERROR[0;39mhttp-nio-8080-exec-8] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:43:50 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:43:50 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:43:50 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:43:50 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:43:50 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:43:50 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:43:50 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:43:50 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:43:50 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:43:50 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:43:50 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:43:50 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:43:50 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:43:50 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:43:50 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:43:52 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:43:52 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:43:52 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:43:52 [31mERROR[0;39mhttp-nio-8080-exec-4] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at jdk.internal.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:43:53 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:43:53 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:43:53 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:43:53 [33mWARN [0;39mhttp-nio-8080-exec-3] [[36m[org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver][0;39m
 Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]
[2024-12-20 11:44:47 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:44:47 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MDY5NCwiZXhwIjoxNzM0NjY2Njk0LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6NSxcInJvbGVzXCI6W1wiUk9MRV9VU0VSXCIsXCJST0xFX0FETUlOXCJdfSJ9.3U3kIU-XWtWkrUs6854bkWabnaS_fKnPC8tdI33KJB1xUejpgRVUuVNnBAWt2erd
[2024-12-20 11:44:47 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MDY5NCwiZXhwIjoxNzM0NjY2Njk0LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6NSxcInJvbGVzXCI6W1wiUk9MRV9VU0VSXCIsXCJST0xFX0FETUlOXCJdfSJ9.3U3kIU-XWtWkrUs6854bkWabnaS_fKnPC8tdI33KJB1xUejpgRVUuVNnBAWt2erd
[2024-12-20 11:44:47 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user
        SET uid = '7777',
        upw = '$2a$10$G.Uc58fZxR8AB2b/rWby1u49XTOdDkIRXjzyY0x7q9QDmrMZB/oz2',
        nick_name = NULL,
        pic = NULL
 {executed in 3 msec}
[2024-12-20 11:44:47 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO user
        SET uid = '7777',
        upw = '$2a$10$G.Uc58fZxR8AB2b/rWby1u49XTOdDkIRXjzyY0x7q9QDmrMZB/oz2',
        nick_name = NULL,
        pic = NULL
 {executed in 0 msec}
[2024-12-20 11:44:47 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|----------|
|insert_id |
|----------|
|32        |
|----------|

[2024-12-20 11:44:52 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:44:52 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MDY5NCwiZXhwIjoxNzM0NjY2Njk0LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6NSxcInJvbGVzXCI6W1wiUk9MRV9VU0VSXCIsXCJST0xFX0FETUlOXCJdfSJ9.3U3kIU-XWtWkrUs6854bkWabnaS_fKnPC8tdI33KJB1xUejpgRVUuVNnBAWt2erd
[2024-12-20 11:44:52 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MDY5NCwiZXhwIjoxNzM0NjY2Njk0LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6NSxcInJvbGVzXCI6W1wiUk9MRV9VU0VSXCIsXCJST0xFX0FETUlOXCJdfSJ9.3U3kIU-XWtWkrUs6854bkWabnaS_fKnPC8tdI33KJB1xUejpgRVUuVNnBAWt2erd
[2024-12-20 11:44:52 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id AS userId,
        IFNULL(nick_name,uid) AS nickName, pic, upw
        FROM user
        WHERE uid = '7777'
 {executed in 0 msec}
[2024-12-20 11:44:52 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|--------|---------|----|-------------------------------------------------------------|
|user_id |nickname |pic |upw                                                          |
|--------|---------|----|-------------------------------------------------------------|
|32      |7777     |null|$2a$10$G.Uc58fZxR8AB2b/rWby1u49XTOdDkIRXjzyY0x7q9QDmrMZB/oz2 |
|--------|---------|----|-------------------------------------------------------------|

[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjY5MiwiZXhwIjoxNzM0NjY4NjkyLCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzIsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.zlGk8LXxZmGqsAXN_iGixJAxawVRh1OPxN9UCND2ZUSr_PCkczqPexp-XwcDqbmw
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjY5MiwiZXhwIjoxNzM0NjY4NjkyLCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzIsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.zlGk8LXxZmGqsAXN_iGixJAxawVRh1OPxN9UCND2ZUSr_PCkczqPexp-XwcDqbmw
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.feed.model.FeedGetReq][0;39m
 page: 1, size: null, profileUserId: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.feed.FeedController][0;39m
 FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=0, profileUserId=null)
[2024-12-20 11:44:53 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  A.feed_id AS feedId, A.contents, A.location
          , A.created_at AS createdAt
          , B.user_id AS writerUserId
          , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
          , B.pic AS writerPic
          , IF(C.feed_id IS NULL, 0 , 1) AS isLike
     FROM feed A
    INNER JOIN user B
       ON A.writer_user_id = B.user_id
     LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 32

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 1 msec}
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location  |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|
|76      |ÌîºÎìúÎÇ¥Ïö©ÌÖåÏä§Ìä∏  |Í∑∏Î¶ºÏª¥Ìì®ÌÑ∞ÏïÑÌä∏ÌïôÏõê |2024-12-19 11:46:59 |5       |1111     |9e2d2e13-79a7-481f-b221-26e228ce8a4d.jpg |0      |
|75      |asdf     |asdf      |2024-12-10 10:55:05 |19      |zxzx     |2f008281-bcf1-4873-812c-20ab707bf4c7     |0      |
|73      |         |          |2024-12-10 10:33:25 |9       |0        |445adb23-d27b-43c2-837a-3e70f0bfae01     |0      |
|72      |         |          |2024-12-10 10:06:53 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|71      |         |          |2024-12-10 10:04:30 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|70      |ÎßåÏÇ≠       |          |2024-12-10 10:04:12 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|68      |aaaaa    |aaaaa     |2024-12-10 09:50:56 |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |0      |
|67      |         |          |2024-12-09 16:52:00 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|66      |         |          |2024-12-09 16:45:57 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|65      |         |          |2024-12-09 16:38:08 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|64      |         |          |2024-12-09 16:38:04 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|63      |         |          |2024-12-09 16:37:59 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|62      |Îãà ÎØ∏Îûò
ÎÇ®Ìé∏  |          |2024-12-09 16:27:39 |17      |ddd      |null                                     |0      |
|61      |         |          |2024-12-09 16:26:51 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|60      |         |          |2024-12-09 16:19:37 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|59      |         |          |2024-12-09 16:19:21 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|58      |         |          |2024-12-09 16:19:10 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|57      |„Öã„Öã       |          |2024-12-09 16:07:37 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|56      |Î™ÖÎ∞ïÏ®©      |          |2024-12-09 16:06:14 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|55      |Í∑ºÌòúÏ∞°      |          |2024-12-09 16:06:06 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-20 11:44:53 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 76
 {executed in 0 msec}
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6d1cd1f5-8f13-4d99-9665-4dbab9b47fb7.png |
|fe728007-d85c-4ab7-8577-58a4c81ff176.gif |
|-----------------------------------------|

[2024-12-20 11:44:53 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 76
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:44:53 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 75
 {executed in 0 msec}
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a6fb41e-8434-4c72-8139-1169c075b2e8.png |
|-----------------------------------------|

[2024-12-20 11:44:53 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 75
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|----------------|-----------------|--------|---------|-----------------------------------------|
|feed_comment_id |comment          |user_id |writernm |pic                                      |
|----------------|-----------------|--------|---------|-----------------------------------------|
|106             |„Öá„Ñ¥„Ñª„Ñ¥„Öá„Ñª„Ñ¥„Öá„Ñπ„Ñ¥„Öá„Ñπ„Ñ¥„Öá„Ñª„Ñ¥ |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|105             |„Öá„Ñª„Öá„Ñª„Ñ¥„Öá„Ñª„Ñ¥„Öá„Ñπ„Ñ¥„Öá„Ñπ    |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|----------------|-----------------|--------|---------|-----------------------------------------|

[2024-12-20 11:44:53 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 73
 {executed in 0 msec}
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b53d82b3-0379-49c9-9c85-cb9c403c6523.jpg |
|-----------------------------------------|

[2024-12-20 11:44:53 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 73
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|104             |ÏåâÍ≤åÏù¥ÎÑ§    |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|103             |Í≤åÏù¥Í≤åÏù¥Ïïº   |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|102             |‚ô°       |9       |0        |445adb23-d27b-43c2-837a-3e70f0bfae01     |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-20 11:44:53 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 72
 {executed in 0 msec}
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|74f8b9ea-6e30-48e1-983a-3d09b7dbabea.gif |
|-----------------------------------------|

[2024-12-20 11:44:53 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 72
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:44:53 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 71
 {executed in 0 msec}
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2d1c8d65-5c08-4f78-96df-1fb6349d58d0.gif |
|-----------------------------------------|

[2024-12-20 11:44:53 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 71
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:44:53 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 70
 {executed in 0 msec}
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|87f5ba66-f8e4-41ca-a7ec-1d394b7ae5f7.jpg |
|-----------------------------------------|

[2024-12-20 11:44:53 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 70
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|101             |Î≥¥Ïó¨Ï§ò     |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-20 11:44:53 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|62d4ef6f-50e4-406f-ae1e-d1f64060366a.jpg |
|-----------------------------------------|

[2024-12-20 11:44:53 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 68
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:44:53 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5e5df70e-01d4-4b33-9e87-00e6a716008d.gif |
|-----------------------------------------|

[2024-12-20 11:44:53 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 67
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|----------------|----------|--------|---------|----|
|feed_comment_id |comment   |user_id |writernm |pic |
|----------------|----------|--------|---------|----|
|100             |Í∞úÏ∂î Î∞ïÍ≥† Í∞ëÎãàÎã§ |17      |ddd      |null|
|----------------|----------|--------|---------|----|

[2024-12-20 11:44:53 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 66
 {executed in 0 msec}
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2b6887e5-7070-4f39-a5db-bc4d35bb51fa.gif |
|-----------------------------------------|

[2024-12-20 11:44:53 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 66
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|----------------|-------------|--------|---------|----|
|feed_comment_id |comment      |user_id |writernm |pic |
|----------------|-------------|--------|---------|----|
|99              |ÏàòÏòÅÏïÑ Í¥ÄÎ¶¨ ÏïàÌïòÎÉê?  |17      |ddd      |null|
|98              |Ïó¨ ÌîºÎìú Í∞ú Ï≥ê ÎçîÎüΩÎÑ§ |17      |ddd      |null|
|----------------|-------------|--------|---------|----|

[2024-12-20 11:44:53 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 65
 {executed in 0 msec}
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0b2c055a-2426-4dbc-8f83-403ecd3fa464.gif |
|-----------------------------------------|

[2024-12-20 11:44:53 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 65
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:44:53 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 64
 {executed in 0 msec}
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d252f5fe-6aa1-4212-b558-caedfb9d59c5.gif |
|-----------------------------------------|

[2024-12-20 11:44:53 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 64
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:44:53 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 63
 {executed in 0 msec}
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|86cea73b-80b4-4501-aaeb-4db5007ded5f.gif |
|-----------------------------------------|

[2024-12-20 11:44:53 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 63
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:44:53 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 62
 {executed in 0 msec}
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|943ec3db-6b2f-4d8a-a1d9-cdfa7b2fe921.jpeg |
|------------------------------------------|

[2024-12-20 11:44:53 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 62
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:44:53 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 61
 {executed in 0 msec}
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bb7c519a-0113-4137-ada5-4bfa9df4b5d7.gif |
|-----------------------------------------|

[2024-12-20 11:44:53 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 61
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:44:53 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|282ad40c-d6c6-4183-8781-2cd3a5d80ade.gif |
|-----------------------------------------|

[2024-12-20 11:44:53 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 60
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:44:53 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 59
 {executed in 0 msec}
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|261ecdff-f966-4797-bc07-75a9eb1a5eee.gif |
|-----------------------------------------|

[2024-12-20 11:44:53 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 59
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:44:53 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 58
 {executed in 0 msec}
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|68c097ba-aa57-4002-a3bd-774851007b2a.gif |
|-----------------------------------------|

[2024-12-20 11:44:53 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 58
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:44:53 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 57
 {executed in 0 msec}
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3298dc0e-3231-4773-982a-47e30f2531e5.jpg |
|f5512946-3498-437e-ac4c-28c8a06fc9f0.jpg |
|-----------------------------------------|

[2024-12-20 11:44:53 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 57
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|----------------|---------|--------|---------|-------------------------------------|
|feed_comment_id |comment  |user_id |writernm |pic                                  |
|----------------|---------|--------|---------|-------------------------------------|
|97              |„Ñ∑„Ñ∑;; ÎÖ∏ÏïåÎùº |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743 |
|----------------|---------|--------|---------|-------------------------------------|

[2024-12-20 11:44:53 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 56
 {executed in 1 msec}
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f661e26c-8b44-49d5-a944-cceeea6116a7.jpg |
|-----------------------------------------|

[2024-12-20 11:44:53 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 56
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:44:53 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 55
 {executed in 1 msec}
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dc7ee72b-960a-431b-b021-bdfc625c097b.jpg |
|-----------------------------------------|

[2024-12-20 11:44:53 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 55
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:44:53 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:03 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:45:03 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:03 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:03 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:45:03 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:03 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:03 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:45:03 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:03 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:03 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:45:03 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:03 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:11 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:45:11 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:11 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:11 [31mERROR[0;39mhttp-nio-8080-exec-6] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at jdk.internal.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:45:12 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:45:12 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:12 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:12 [31mERROR[0;39mhttp-nio-8080-exec-1] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at jdk.internal.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:45:12 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:45:12 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:12 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:12 [31mERROR[0;39mhttp-nio-8080-exec-7] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at jdk.internal.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:45:12 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:45:12 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:12 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:12 [31mERROR[0;39mhttp-nio-8080-exec-8] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at jdk.internal.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:45:12 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:45:12 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:12 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:12 [31mERROR[0;39mhttp-nio-8080-exec-5] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at jdk.internal.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:45:12 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:45:12 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:12 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:12 [31mERROR[0;39mhttp-nio-8080-exec-4] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at jdk.internal.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:45:13 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:45:13 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:13 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:13 [31mERROR[0;39mhttp-nio-8080-exec-10] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at jdk.internal.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:45:13 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:45:13 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:13 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:13 [31mERROR[0;39mhttp-nio-8080-exec-3] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at jdk.internal.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:45:27 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:45:27 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjY5MiwiZXhwIjoxNzM0NjY4NjkyLCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzIsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.zlGk8LXxZmGqsAXN_iGixJAxawVRh1OPxN9UCND2ZUSr_PCkczqPexp-XwcDqbmw
[2024-12-20 11:45:27 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjY5MiwiZXhwIjoxNzM0NjY4NjkyLCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzIsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.zlGk8LXxZmGqsAXN_iGixJAxawVRh1OPxN9UCND2ZUSr_PCkczqPexp-XwcDqbmw
[2024-12-20 11:45:27 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user
        SET uid = '8888',
        upw = '$2a$10$ytZicVJixHb/lrsJMh0N4eqw18mXgmM.fuOhQgTINyJpmnQAnfNQW',
        nick_name = NULL,
        pic = NULL
 {executed in 3 msec}
[2024-12-20 11:45:27 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO user
        SET uid = '8888',
        upw = '$2a$10$ytZicVJixHb/lrsJMh0N4eqw18mXgmM.fuOhQgTINyJpmnQAnfNQW',
        nick_name = NULL,
        pic = NULL
 {executed in 0 msec}
[2024-12-20 11:45:27 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|----------|
|insert_id |
|----------|
|33        |
|----------|

[2024-12-20 11:45:33 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:45:33 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:33 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:33 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:45:33 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:33 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:33 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:45:33 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:33 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:33 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:45:33 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:33 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjY5MiwiZXhwIjoxNzM0NjY4NjkyLCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzIsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.zlGk8LXxZmGqsAXN_iGixJAxawVRh1OPxN9UCND2ZUSr_PCkczqPexp-XwcDqbmw
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjY5MiwiZXhwIjoxNzM0NjY4NjkyLCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzIsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.zlGk8LXxZmGqsAXN_iGixJAxawVRh1OPxN9UCND2ZUSr_PCkczqPexp-XwcDqbmw
[2024-12-20 11:45:36 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id AS userId,
        IFNULL(nick_name,uid) AS nickName, pic, upw
        FROM user
        WHERE uid = '8888'
 {executed in 0 msec}
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|--------|---------|----|-------------------------------------------------------------|
|user_id |nickname |pic |upw                                                          |
|--------|---------|----|-------------------------------------------------------------|
|33      |8888     |null|$2a$10$ytZicVJixHb/lrsJMh0N4eqw18mXgmM.fuOhQgTINyJpmnQAnfNQW |
|--------|---------|----|-------------------------------------------------------------|

[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjczNiwiZXhwIjoxNzM0NjY4NzM2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.hfEP02CAnoMy9EUQv_rAxDrbWnJeS6Wzs6HVOJnPkxOlizBpsnN8_Ra89WGdUlRN
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjczNiwiZXhwIjoxNzM0NjY4NzM2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.hfEP02CAnoMy9EUQv_rAxDrbWnJeS6Wzs6HVOJnPkxOlizBpsnN8_Ra89WGdUlRN
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.feed.model.FeedGetReq][0;39m
 page: 1, size: null, profileUserId: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.feed.FeedController][0;39m
 FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=0, profileUserId=null)
[2024-12-20 11:45:36 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  A.feed_id AS feedId, A.contents, A.location
          , A.created_at AS createdAt
          , B.user_id AS writerUserId
          , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
          , B.pic AS writerPic
          , IF(C.feed_id IS NULL, 0 , 1) AS isLike
     FROM feed A
    INNER JOIN user B
       ON A.writer_user_id = B.user_id
     LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 33

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 0 msec}
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location  |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|
|76      |ÌîºÎìúÎÇ¥Ïö©ÌÖåÏä§Ìä∏  |Í∑∏Î¶ºÏª¥Ìì®ÌÑ∞ÏïÑÌä∏ÌïôÏõê |2024-12-19 11:46:59 |5       |1111     |9e2d2e13-79a7-481f-b221-26e228ce8a4d.jpg |0      |
|75      |asdf     |asdf      |2024-12-10 10:55:05 |19      |zxzx     |2f008281-bcf1-4873-812c-20ab707bf4c7     |0      |
|73      |         |          |2024-12-10 10:33:25 |9       |0        |445adb23-d27b-43c2-837a-3e70f0bfae01     |0      |
|72      |         |          |2024-12-10 10:06:53 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|71      |         |          |2024-12-10 10:04:30 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|70      |ÎßåÏÇ≠       |          |2024-12-10 10:04:12 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|68      |aaaaa    |aaaaa     |2024-12-10 09:50:56 |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |0      |
|67      |         |          |2024-12-09 16:52:00 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|66      |         |          |2024-12-09 16:45:57 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|65      |         |          |2024-12-09 16:38:08 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|64      |         |          |2024-12-09 16:38:04 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|63      |         |          |2024-12-09 16:37:59 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|62      |Îãà ÎØ∏Îûò
ÎÇ®Ìé∏  |          |2024-12-09 16:27:39 |17      |ddd      |null                                     |0      |
|61      |         |          |2024-12-09 16:26:51 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|60      |         |          |2024-12-09 16:19:37 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|59      |         |          |2024-12-09 16:19:21 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|58      |         |          |2024-12-09 16:19:10 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|57      |„Öã„Öã       |          |2024-12-09 16:07:37 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|56      |Î™ÖÎ∞ïÏ®©      |          |2024-12-09 16:06:14 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|55      |Í∑ºÌòúÏ∞°      |          |2024-12-09 16:06:06 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-20 11:45:36 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 76
 {executed in 0 msec}
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6d1cd1f5-8f13-4d99-9665-4dbab9b47fb7.png |
|fe728007-d85c-4ab7-8577-58a4c81ff176.gif |
|-----------------------------------------|

[2024-12-20 11:45:36 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 76
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:45:36 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 75
 {executed in 0 msec}
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a6fb41e-8434-4c72-8139-1169c075b2e8.png |
|-----------------------------------------|

[2024-12-20 11:45:36 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 75
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|----------------|-----------------|--------|---------|-----------------------------------------|
|feed_comment_id |comment          |user_id |writernm |pic                                      |
|----------------|-----------------|--------|---------|-----------------------------------------|
|106             |„Öá„Ñ¥„Ñª„Ñ¥„Öá„Ñª„Ñ¥„Öá„Ñπ„Ñ¥„Öá„Ñπ„Ñ¥„Öá„Ñª„Ñ¥ |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|105             |„Öá„Ñª„Öá„Ñª„Ñ¥„Öá„Ñª„Ñ¥„Öá„Ñπ„Ñ¥„Öá„Ñπ    |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|----------------|-----------------|--------|---------|-----------------------------------------|

[2024-12-20 11:45:36 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 73
 {executed in 1 msec}
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b53d82b3-0379-49c9-9c85-cb9c403c6523.jpg |
|-----------------------------------------|

[2024-12-20 11:45:36 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 73
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|104             |ÏåâÍ≤åÏù¥ÎÑ§    |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|103             |Í≤åÏù¥Í≤åÏù¥Ïïº   |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|102             |‚ô°       |9       |0        |445adb23-d27b-43c2-837a-3e70f0bfae01     |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-20 11:45:36 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 72
 {executed in 0 msec}
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|74f8b9ea-6e30-48e1-983a-3d09b7dbabea.gif |
|-----------------------------------------|

[2024-12-20 11:45:36 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 72
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:45:36 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 71
 {executed in 0 msec}
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2d1c8d65-5c08-4f78-96df-1fb6349d58d0.gif |
|-----------------------------------------|

[2024-12-20 11:45:36 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 71
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:45:36 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 70
 {executed in 0 msec}
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|87f5ba66-f8e4-41ca-a7ec-1d394b7ae5f7.jpg |
|-----------------------------------------|

[2024-12-20 11:45:36 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 70
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|101             |Î≥¥Ïó¨Ï§ò     |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-20 11:45:36 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|62d4ef6f-50e4-406f-ae1e-d1f64060366a.jpg |
|-----------------------------------------|

[2024-12-20 11:45:36 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 68
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:45:36 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5e5df70e-01d4-4b33-9e87-00e6a716008d.gif |
|-----------------------------------------|

[2024-12-20 11:45:36 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 67
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|----------------|----------|--------|---------|----|
|feed_comment_id |comment   |user_id |writernm |pic |
|----------------|----------|--------|---------|----|
|100             |Í∞úÏ∂î Î∞ïÍ≥† Í∞ëÎãàÎã§ |17      |ddd      |null|
|----------------|----------|--------|---------|----|

[2024-12-20 11:45:36 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 66
 {executed in 1 msec}
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2b6887e5-7070-4f39-a5db-bc4d35bb51fa.gif |
|-----------------------------------------|

[2024-12-20 11:45:36 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 66
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|----------------|-------------|--------|---------|----|
|feed_comment_id |comment      |user_id |writernm |pic |
|----------------|-------------|--------|---------|----|
|99              |ÏàòÏòÅÏïÑ Í¥ÄÎ¶¨ ÏïàÌïòÎÉê?  |17      |ddd      |null|
|98              |Ïó¨ ÌîºÎìú Í∞ú Ï≥ê ÎçîÎüΩÎÑ§ |17      |ddd      |null|
|----------------|-------------|--------|---------|----|

[2024-12-20 11:45:36 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 65
 {executed in 0 msec}
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0b2c055a-2426-4dbc-8f83-403ecd3fa464.gif |
|-----------------------------------------|

[2024-12-20 11:45:36 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 65
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:45:36 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 64
 {executed in 0 msec}
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d252f5fe-6aa1-4212-b558-caedfb9d59c5.gif |
|-----------------------------------------|

[2024-12-20 11:45:36 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 64
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:45:36 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 63
 {executed in 1 msec}
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|86cea73b-80b4-4501-aaeb-4db5007ded5f.gif |
|-----------------------------------------|

[2024-12-20 11:45:36 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 63
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:45:36 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 62
 {executed in 1 msec}
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|943ec3db-6b2f-4d8a-a1d9-cdfa7b2fe921.jpeg |
|------------------------------------------|

[2024-12-20 11:45:36 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 62
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:45:36 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 61
 {executed in 0 msec}
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bb7c519a-0113-4137-ada5-4bfa9df4b5d7.gif |
|-----------------------------------------|

[2024-12-20 11:45:36 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 61
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:45:36 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|282ad40c-d6c6-4183-8781-2cd3a5d80ade.gif |
|-----------------------------------------|

[2024-12-20 11:45:36 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 60
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:45:36 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 59
 {executed in 0 msec}
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|261ecdff-f966-4797-bc07-75a9eb1a5eee.gif |
|-----------------------------------------|

[2024-12-20 11:45:36 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 59
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:45:36 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 58
 {executed in 0 msec}
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|68c097ba-aa57-4002-a3bd-774851007b2a.gif |
|-----------------------------------------|

[2024-12-20 11:45:36 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 58
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:45:36 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 57
 {executed in 0 msec}
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3298dc0e-3231-4773-982a-47e30f2531e5.jpg |
|f5512946-3498-437e-ac4c-28c8a06fc9f0.jpg |
|-----------------------------------------|

[2024-12-20 11:45:36 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 57
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|----------------|---------|--------|---------|-------------------------------------|
|feed_comment_id |comment  |user_id |writernm |pic                                  |
|----------------|---------|--------|---------|-------------------------------------|
|97              |„Ñ∑„Ñ∑;; ÎÖ∏ÏïåÎùº |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743 |
|----------------|---------|--------|---------|-------------------------------------|

[2024-12-20 11:45:36 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 56
 {executed in 0 msec}
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f661e26c-8b44-49d5-a944-cceeea6116a7.jpg |
|-----------------------------------------|

[2024-12-20 11:45:36 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 56
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:45:36 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 55
 {executed in 0 msec}
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dc7ee72b-960a-431b-b021-bdfc625c097b.jpg |
|-----------------------------------------|

[2024-12-20 11:45:36 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 55
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:36 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:44 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:45:44 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:44 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:44 [31mERROR[0;39mhttp-nio-8080-exec-8] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at jdk.internal.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:45:48 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:45:48 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:48 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:48 [31mERROR[0;39mhttp-nio-8080-exec-3] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at jdk.internal.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:45:48 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:45:48 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:48 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:48 [31mERROR[0;39mhttp-nio-8080-exec-9] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at jdk.internal.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:45:48 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:45:48 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:48 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:48 [31mERROR[0;39mhttp-nio-8080-exec-6] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at jdk.internal.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:45:48 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:45:48 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:48 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:48 [31mERROR[0;39mhttp-nio-8080-exec-2] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at jdk.internal.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:45:48 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:45:48 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:48 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:48 [31mERROR[0;39mhttp-nio-8080-exec-1] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at jdk.internal.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:45:48 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:45:48 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:48 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:48 [31mERROR[0;39mhttp-nio-8080-exec-4] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at jdk.internal.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:45:49 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:45:49 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:49 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:49 [31mERROR[0;39mhttp-nio-8080-exec-10] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at jdk.internal.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:45:49 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:45:49 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:49 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:49 [31mERROR[0;39mhttp-nio-8080-exec-7] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at jdk.internal.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:45:49 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:45:49 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:49 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:49 [31mERROR[0;39mhttp-nio-8080-exec-5] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at jdk.internal.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:45:49 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:45:49 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:49 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:49 [31mERROR[0;39mhttp-nio-8080-exec-8] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at jdk.internal.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:45:49 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:45:49 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:49 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:49 [31mERROR[0;39mhttp-nio-8080-exec-3] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at jdk.internal.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:45:49 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:45:49 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:49 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:49 [31mERROR[0;39mhttp-nio-8080-exec-9] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at jdk.internal.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:45:50 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:45:50 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:50 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:50 [31mERROR[0;39mhttp-nio-8080-exec-6] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at jdk.internal.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:45:50 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:45:50 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:50 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:50 [31mERROR[0;39mhttp-nio-8080-exec-2] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at jdk.internal.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:45:50 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:45:50 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:50 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:50 [31mERROR[0;39mhttp-nio-8080-exec-1] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at jdk.internal.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:45:50 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:45:50 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:50 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:50 [31mERROR[0;39mhttp-nio-8080-exec-4] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at jdk.internal.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:45:51 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:45:51 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:51 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:51 [31mERROR[0;39mhttp-nio-8080-exec-10] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at jdk.internal.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:45:51 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:45:51 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:51 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:51 [31mERROR[0;39mhttp-nio-8080-exec-7] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at jdk.internal.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:45:51 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:45:51 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:51 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:51 [31mERROR[0;39mhttp-nio-8080-exec-5] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at jdk.internal.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:45:51 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:45:51 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:51 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:51 [31mERROR[0;39mhttp-nio-8080-exec-8] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at jdk.internal.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:45:52 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:45:52 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:52 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:52 [31mERROR[0;39mhttp-nio-8080-exec-3] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at jdk.internal.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:45:52 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:45:52 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:52 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:52 [31mERROR[0;39mhttp-nio-8080-exec-9] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at jdk.internal.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:45:52 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:45:52 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:52 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:52 [31mERROR[0;39mhttp-nio-8080-exec-6] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at jdk.internal.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:45:52 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:45:52 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:52 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:52 [31mERROR[0;39mhttp-nio-8080-exec-2] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at jdk.internal.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:45:52 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:45:52 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:52 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:52 [31mERROR[0;39mhttp-nio-8080-exec-1] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at jdk.internal.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:45:52 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:45:52 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:52 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:52 [31mERROR[0;39mhttp-nio-8080-exec-4] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at jdk.internal.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:45:53 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:45:53 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:53 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:53 [31mERROR[0;39mhttp-nio-8080-exec-10] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at jdk.internal.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:45:53 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:45:53 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:53 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:53 [31mERROR[0;39mhttp-nio-8080-exec-7] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at jdk.internal.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:45:53 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:45:53 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:53 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:53 [31mERROR[0;39mhttp-nio-8080-exec-5] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at jdk.internal.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:45:53 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:45:53 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:53 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:53 [31mERROR[0;39mhttp-nio-8080-exec-8] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at jdk.internal.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:45:53 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:45:53 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:53 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:53 [31mERROR[0;39mhttp-nio-8080-exec-3] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at jdk.internal.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:45:53 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:45:53 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:53 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:53 [31mERROR[0;39mhttp-nio-8080-exec-9] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at jdk.internal.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:45:54 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:45:54 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:54 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:54 [31mERROR[0;39mhttp-nio-8080-exec-6] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at jdk.internal.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:45:54 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:45:54 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:54 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:54 [31mERROR[0;39mhttp-nio-8080-exec-2] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at jdk.internal.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:45:54 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:45:54 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:54 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:54 [31mERROR[0;39mhttp-nio-8080-exec-1] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at jdk.internal.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:45:54 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:45:54 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:54 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:54 [31mERROR[0;39mhttp-nio-8080-exec-4] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at jdk.internal.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:45:54 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:45:54 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:54 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:54 [31mERROR[0;39mhttp-nio-8080-exec-10] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at jdk.internal.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:45:55 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:45:55 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:55 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:55 [31mERROR[0;39mhttp-nio-8080-exec-7] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at jdk.internal.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:45:55 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:45:55 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:55 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:55 [31mERROR[0;39mhttp-nio-8080-exec-5] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at jdk.internal.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:45:55 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:45:55 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:55 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:55 [31mERROR[0;39mhttp-nio-8080-exec-8] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at jdk.internal.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:45:55 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:45:55 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:55 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:55 [31mERROR[0;39mhttp-nio-8080-exec-3] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at jdk.internal.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:45:55 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:45:55 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:45:55 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:45:55 [31mERROR[0;39mhttp-nio-8080-exec-9] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class com.green.greengram.config.security.MyUserDetails (java.lang.String is in module java.base of loader 'bootstrap'; com.green.greengram.config.security.MyUserDetails is in unnamed module of loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader @37143f9)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUser(AuthenticationFacade.java:13)
	at com.green.greengram.config.security.AuthenticationFacade.getSignedUserId(AuthenticationFacade.java:19)
	at com.green.greengram.user.UserService.postSignUp(UserService.java:33)
	at com.green.greengram.user.UserController.postSignUp(UserController.java:26)
	at jdk.internal.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:46:26 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:46:26 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:46:26 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:46:26 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id AS userId,
        IFNULL(nick_name,uid) AS nickName, pic, upw
        FROM user
        WHERE uid = '8888'
 {executed in 0 msec}
[2024-12-20 11:46:26 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|--------|---------|----|-------------------------------------------------------------|
|user_id |nickname |pic |upw                                                          |
|--------|---------|----|-------------------------------------------------------------|
|33      |8888     |null|$2a$10$ytZicVJixHb/lrsJMh0N4eqw18mXgmM.fuOhQgTINyJpmnQAnfNQW |
|--------|---------|----|-------------------------------------------------------------|

[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2Mjc4NiwiZXhwIjoxNzM0NjY4Nzg2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.WrxtnencxKh9Po1z1P3VliJ03yC2T_OO54VBNjmG4UBIcdS-g8JYvESgQExpZOi6
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2Mjc4NiwiZXhwIjoxNzM0NjY4Nzg2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.WrxtnencxKh9Po1z1P3VliJ03yC2T_OO54VBNjmG4UBIcdS-g8JYvESgQExpZOi6
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.feed.model.FeedGetReq][0;39m
 page: 1, size: null, profileUserId: null
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.feed.FeedController][0;39m
 FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=0, profileUserId=null)
[2024-12-20 11:46:27 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  A.feed_id AS feedId, A.contents, A.location
          , A.created_at AS createdAt
          , B.user_id AS writerUserId
          , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
          , B.pic AS writerPic
          , IF(C.feed_id IS NULL, 0 , 1) AS isLike
     FROM feed A
    INNER JOIN user B
       ON A.writer_user_id = B.user_id
     LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 33

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 0 msec}
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location  |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|
|76      |ÌîºÎìúÎÇ¥Ïö©ÌÖåÏä§Ìä∏  |Í∑∏Î¶ºÏª¥Ìì®ÌÑ∞ÏïÑÌä∏ÌïôÏõê |2024-12-19 11:46:59 |5       |1111     |9e2d2e13-79a7-481f-b221-26e228ce8a4d.jpg |0      |
|75      |asdf     |asdf      |2024-12-10 10:55:05 |19      |zxzx     |2f008281-bcf1-4873-812c-20ab707bf4c7     |0      |
|73      |         |          |2024-12-10 10:33:25 |9       |0        |445adb23-d27b-43c2-837a-3e70f0bfae01     |0      |
|72      |         |          |2024-12-10 10:06:53 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|71      |         |          |2024-12-10 10:04:30 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|70      |ÎßåÏÇ≠       |          |2024-12-10 10:04:12 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|68      |aaaaa    |aaaaa     |2024-12-10 09:50:56 |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |0      |
|67      |         |          |2024-12-09 16:52:00 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|66      |         |          |2024-12-09 16:45:57 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|65      |         |          |2024-12-09 16:38:08 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|64      |         |          |2024-12-09 16:38:04 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|63      |         |          |2024-12-09 16:37:59 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|62      |Îãà ÎØ∏Îûò
ÎÇ®Ìé∏  |          |2024-12-09 16:27:39 |17      |ddd      |null                                     |0      |
|61      |         |          |2024-12-09 16:26:51 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|60      |         |          |2024-12-09 16:19:37 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|59      |         |          |2024-12-09 16:19:21 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|58      |         |          |2024-12-09 16:19:10 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|57      |„Öã„Öã       |          |2024-12-09 16:07:37 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|56      |Î™ÖÎ∞ïÏ®©      |          |2024-12-09 16:06:14 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|55      |Í∑ºÌòúÏ∞°      |          |2024-12-09 16:06:06 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-20 11:46:27 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 76
 {executed in 0 msec}
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6d1cd1f5-8f13-4d99-9665-4dbab9b47fb7.png |
|fe728007-d85c-4ab7-8577-58a4c81ff176.gif |
|-----------------------------------------|

[2024-12-20 11:46:27 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 76
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:46:27 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 75
 {executed in 0 msec}
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a6fb41e-8434-4c72-8139-1169c075b2e8.png |
|-----------------------------------------|

[2024-12-20 11:46:27 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 75
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|----------------|-----------------|--------|---------|-----------------------------------------|
|feed_comment_id |comment          |user_id |writernm |pic                                      |
|----------------|-----------------|--------|---------|-----------------------------------------|
|106             |„Öá„Ñ¥„Ñª„Ñ¥„Öá„Ñª„Ñ¥„Öá„Ñπ„Ñ¥„Öá„Ñπ„Ñ¥„Öá„Ñª„Ñ¥ |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|105             |„Öá„Ñª„Öá„Ñª„Ñ¥„Öá„Ñª„Ñ¥„Öá„Ñπ„Ñ¥„Öá„Ñπ    |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|----------------|-----------------|--------|---------|-----------------------------------------|

[2024-12-20 11:46:27 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 73
 {executed in 1 msec}
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b53d82b3-0379-49c9-9c85-cb9c403c6523.jpg |
|-----------------------------------------|

[2024-12-20 11:46:27 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 73
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|104             |ÏåâÍ≤åÏù¥ÎÑ§    |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|103             |Í≤åÏù¥Í≤åÏù¥Ïïº   |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|102             |‚ô°       |9       |0        |445adb23-d27b-43c2-837a-3e70f0bfae01     |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-20 11:46:27 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 72
 {executed in 0 msec}
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|74f8b9ea-6e30-48e1-983a-3d09b7dbabea.gif |
|-----------------------------------------|

[2024-12-20 11:46:27 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 72
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:46:27 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 71
 {executed in 1 msec}
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2d1c8d65-5c08-4f78-96df-1fb6349d58d0.gif |
|-----------------------------------------|

[2024-12-20 11:46:27 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 71
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:46:27 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 70
 {executed in 1 msec}
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|87f5ba66-f8e4-41ca-a7ec-1d394b7ae5f7.jpg |
|-----------------------------------------|

[2024-12-20 11:46:27 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 70
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|101             |Î≥¥Ïó¨Ï§ò     |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-20 11:46:27 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 1 msec}
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|62d4ef6f-50e4-406f-ae1e-d1f64060366a.jpg |
|-----------------------------------------|

[2024-12-20 11:46:27 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 68
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:46:27 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 1 msec}
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5e5df70e-01d4-4b33-9e87-00e6a716008d.gif |
|-----------------------------------------|

[2024-12-20 11:46:27 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 67
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|----------------|----------|--------|---------|----|
|feed_comment_id |comment   |user_id |writernm |pic |
|----------------|----------|--------|---------|----|
|100             |Í∞úÏ∂î Î∞ïÍ≥† Í∞ëÎãàÎã§ |17      |ddd      |null|
|----------------|----------|--------|---------|----|

[2024-12-20 11:46:27 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 66
 {executed in 1 msec}
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2b6887e5-7070-4f39-a5db-bc4d35bb51fa.gif |
|-----------------------------------------|

[2024-12-20 11:46:27 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 66
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|----------------|-------------|--------|---------|----|
|feed_comment_id |comment      |user_id |writernm |pic |
|----------------|-------------|--------|---------|----|
|99              |ÏàòÏòÅÏïÑ Í¥ÄÎ¶¨ ÏïàÌïòÎÉê?  |17      |ddd      |null|
|98              |Ïó¨ ÌîºÎìú Í∞ú Ï≥ê ÎçîÎüΩÎÑ§ |17      |ddd      |null|
|----------------|-------------|--------|---------|----|

[2024-12-20 11:46:27 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 65
 {executed in 1 msec}
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0b2c055a-2426-4dbc-8f83-403ecd3fa464.gif |
|-----------------------------------------|

[2024-12-20 11:46:27 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 65
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:46:27 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 64
 {executed in 1 msec}
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d252f5fe-6aa1-4212-b558-caedfb9d59c5.gif |
|-----------------------------------------|

[2024-12-20 11:46:27 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 64
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:46:27 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 63
 {executed in 0 msec}
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|86cea73b-80b4-4501-aaeb-4db5007ded5f.gif |
|-----------------------------------------|

[2024-12-20 11:46:27 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 63
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:46:27 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 62
 {executed in 0 msec}
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|943ec3db-6b2f-4d8a-a1d9-cdfa7b2fe921.jpeg |
|------------------------------------------|

[2024-12-20 11:46:27 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 62
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:46:27 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 61
 {executed in 0 msec}
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bb7c519a-0113-4137-ada5-4bfa9df4b5d7.gif |
|-----------------------------------------|

[2024-12-20 11:46:27 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 61
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:46:27 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|282ad40c-d6c6-4183-8781-2cd3a5d80ade.gif |
|-----------------------------------------|

[2024-12-20 11:46:27 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 60
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:46:27 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 59
 {executed in 0 msec}
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|261ecdff-f966-4797-bc07-75a9eb1a5eee.gif |
|-----------------------------------------|

[2024-12-20 11:46:27 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 59
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:46:27 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 58
 {executed in 0 msec}
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|68c097ba-aa57-4002-a3bd-774851007b2a.gif |
|-----------------------------------------|

[2024-12-20 11:46:27 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 58
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:46:27 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 57
 {executed in 0 msec}
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3298dc0e-3231-4773-982a-47e30f2531e5.jpg |
|f5512946-3498-437e-ac4c-28c8a06fc9f0.jpg |
|-----------------------------------------|

[2024-12-20 11:46:27 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 57
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|----------------|---------|--------|---------|-------------------------------------|
|feed_comment_id |comment  |user_id |writernm |pic                                  |
|----------------|---------|--------|---------|-------------------------------------|
|97              |„Ñ∑„Ñ∑;; ÎÖ∏ÏïåÎùº |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743 |
|----------------|---------|--------|---------|-------------------------------------|

[2024-12-20 11:46:27 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 56
 {executed in 1 msec}
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f661e26c-8b44-49d5-a944-cceeea6116a7.jpg |
|-----------------------------------------|

[2024-12-20 11:46:27 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 56
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:46:27 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 55
 {executed in 0 msec}
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dc7ee72b-960a-431b-b021-bdfc625c097b.jpg |
|-----------------------------------------|

[2024-12-20 11:46:27 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 55
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:46:27 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:46:28 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:46:28 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:46:28 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:46:28 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:46:28 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:46:28 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:46:29 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:46:29 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:46:29 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:46:29 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:46:29 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:46:29 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:46:29 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:46:29 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:46:29 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:46:30 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:46:30 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:46:30 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:46:30 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:46:30 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:46:30 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:46:30 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:46:30 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:46:30 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:46:30 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:46:30 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:46:30 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:46:30 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:46:30 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:46:30 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:46:31 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:46:31 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:46:31 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:46:31 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:46:31 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:46:31 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:46:31 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:46:31 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:46:31 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:46:33 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:46:33 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2Mjc4NiwiZXhwIjoxNzM0NjY4Nzg2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.WrxtnencxKh9Po1z1P3VliJ03yC2T_OO54VBNjmG4UBIcdS-g8JYvESgQExpZOi6
[2024-12-20 11:46:33 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2Mjc4NiwiZXhwIjoxNzM0NjY4Nzg2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.WrxtnencxKh9Po1z1P3VliJ03yC2T_OO54VBNjmG4UBIcdS-g8JYvESgQExpZOi6
[2024-12-20 11:46:33 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.feed.FeedService][0;39m
 p:com.green.greengram.feed.model.FeedPostReq@5adfe533
[2024-12-20 11:46:33 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed
        SET writer_user_id = 33
        , contents = ''
        , location = ''
 {executed in 1 msec}
[2024-12-20 11:46:33 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed
        SET writer_user_id = 33
        , contents = ''
        , location = ''
 {executed in 0 msec}
[2024-12-20 11:46:33 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|----------|
|insert_id |
|----------|
|77        |
|----------|

[2024-12-20 11:46:33 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.feed.FeedService][0;39m
 p:com.green.greengram.feed.model.FeedPostReq@5adfe533
[2024-12-20 11:46:33 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_pic
        (feed_id, pic)
        VALUES
         (  
            77, 'f58fad2e-8a6a-4f42-a870-aecc10e5ea87.png'
         )
 {executed in 0 msec}
[2024-12-20 11:46:33 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:46:33 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:46:33 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:46:33 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:46:33 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:46:33 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:46:40 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:46:40 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2Mjc4NiwiZXhwIjoxNzM0NjY4Nzg2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.WrxtnencxKh9Po1z1P3VliJ03yC2T_OO54VBNjmG4UBIcdS-g8JYvESgQExpZOi6
[2024-12-20 11:46:40 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2Mjc4NiwiZXhwIjoxNzM0NjY4Nzg2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.WrxtnencxKh9Po1z1P3VliJ03yC2T_OO54VBNjmG4UBIcdS-g8JYvESgQExpZOi6
[2024-12-20 11:46:40 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.feed.FeedService][0;39m
 p:com.green.greengram.feed.model.FeedPostReq@5f848f08
[2024-12-20 11:46:40 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed
        SET writer_user_id = 33
        , contents = ''
        , location = ''
 {executed in 1 msec}
[2024-12-20 11:46:40 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed
        SET writer_user_id = 33
        , contents = ''
        , location = ''
 {executed in 0 msec}
[2024-12-20 11:46:40 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|----------|
|insert_id |
|----------|
|78        |
|----------|

[2024-12-20 11:46:40 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.feed.FeedService][0;39m
 p:com.green.greengram.feed.model.FeedPostReq@5f848f08
[2024-12-20 11:46:40 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_pic
        (feed_id, pic)
        VALUES
         (  
            78, '591159c2-eca7-4176-8701-001abeec2bb4.png'
         )
 {executed in 1 msec}
[2024-12-20 11:46:40 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:46:40 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:46:40 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:46:40 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:46:40 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:46:40 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:46:43 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:46:43 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2Mjc4NiwiZXhwIjoxNzM0NjY4Nzg2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.WrxtnencxKh9Po1z1P3VliJ03yC2T_OO54VBNjmG4UBIcdS-g8JYvESgQExpZOi6
[2024-12-20 11:46:43 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2Mjc4NiwiZXhwIjoxNzM0NjY4Nzg2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.WrxtnencxKh9Po1z1P3VliJ03yC2T_OO54VBNjmG4UBIcdS-g8JYvESgQExpZOi6
[2024-12-20 11:46:43 [33mWARN [0;39mhttp-nio-8080-exec-8] [[36m[org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver][0;39m
 Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.]
[2024-12-20 11:46:46 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:46:46 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2Mjc4NiwiZXhwIjoxNzM0NjY4Nzg2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.WrxtnencxKh9Po1z1P3VliJ03yC2T_OO54VBNjmG4UBIcdS-g8JYvESgQExpZOi6
[2024-12-20 11:46:46 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2Mjc4NiwiZXhwIjoxNzM0NjY4Nzg2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.WrxtnencxKh9Po1z1P3VliJ03yC2T_OO54VBNjmG4UBIcdS-g8JYvESgQExpZOi6
[2024-12-20 11:46:46 [33mWARN [0;39mhttp-nio-8080-exec-7] [[36m[org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver][0;39m
 Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.]
[2024-12-20 11:46:47 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:46:47 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2Mjc4NiwiZXhwIjoxNzM0NjY4Nzg2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.WrxtnencxKh9Po1z1P3VliJ03yC2T_OO54VBNjmG4UBIcdS-g8JYvESgQExpZOi6
[2024-12-20 11:46:47 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2Mjc4NiwiZXhwIjoxNzM0NjY4Nzg2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.WrxtnencxKh9Po1z1P3VliJ03yC2T_OO54VBNjmG4UBIcdS-g8JYvESgQExpZOi6
[2024-12-20 11:46:47 [33mWARN [0;39mhttp-nio-8080-exec-2] [[36m[org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver][0;39m
 Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.]
[2024-12-20 11:46:47 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:46:47 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2Mjc4NiwiZXhwIjoxNzM0NjY4Nzg2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.WrxtnencxKh9Po1z1P3VliJ03yC2T_OO54VBNjmG4UBIcdS-g8JYvESgQExpZOi6
[2024-12-20 11:46:47 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2Mjc4NiwiZXhwIjoxNzM0NjY4Nzg2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.WrxtnencxKh9Po1z1P3VliJ03yC2T_OO54VBNjmG4UBIcdS-g8JYvESgQExpZOi6
[2024-12-20 11:46:47 [33mWARN [0;39mhttp-nio-8080-exec-5] [[36m[org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver][0;39m
 Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.]
[2024-12-20 11:46:52 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:46:52 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2Mjc4NiwiZXhwIjoxNzM0NjY4Nzg2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.WrxtnencxKh9Po1z1P3VliJ03yC2T_OO54VBNjmG4UBIcdS-g8JYvESgQExpZOi6
[2024-12-20 11:46:52 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2Mjc4NiwiZXhwIjoxNzM0NjY4Nzg2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.WrxtnencxKh9Po1z1P3VliJ03yC2T_OO54VBNjmG4UBIcdS-g8JYvESgQExpZOi6
[2024-12-20 11:46:52 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.feed.FeedService][0;39m
 p:com.green.greengram.feed.model.FeedPostReq@613c9a59
[2024-12-20 11:46:52 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed
        SET writer_user_id = 33
        , contents = ''
        , location = ''
 {executed in 1 msec}
[2024-12-20 11:46:52 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed
        SET writer_user_id = 33
        , contents = ''
        , location = ''
 {executed in 0 msec}
[2024-12-20 11:46:52 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|----------|
|insert_id |
|----------|
|79        |
|----------|

[2024-12-20 11:46:52 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.feed.FeedService][0;39m
 p:com.green.greengram.feed.model.FeedPostReq@613c9a59
[2024-12-20 11:46:52 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_pic
        (feed_id, pic)
        VALUES
         (  
            79, 'f5cd589c-229a-4aaa-b362-9d9d8097c2b7.png'
         )
 {executed in 0 msec}
[2024-12-20 11:46:52 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:46:52 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:46:52 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:46:52 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:46:52 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:46:52 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:46:59 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:46:59 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2Mjc4NiwiZXhwIjoxNzM0NjY4Nzg2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.WrxtnencxKh9Po1z1P3VliJ03yC2T_OO54VBNjmG4UBIcdS-g8JYvESgQExpZOi6
[2024-12-20 11:46:59 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2Mjc4NiwiZXhwIjoxNzM0NjY4Nzg2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.WrxtnencxKh9Po1z1P3VliJ03yC2T_OO54VBNjmG4UBIcdS-g8JYvESgQExpZOi6
[2024-12-20 11:46:59 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.feed.FeedService][0;39m
 p:com.green.greengram.feed.model.FeedPostReq@3b8cd62
[2024-12-20 11:46:59 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed
        SET writer_user_id = 33
        , contents = ''
        , location = ''
 {executed in 1 msec}
[2024-12-20 11:46:59 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed
        SET writer_user_id = 33
        , contents = ''
        , location = ''
 {executed in 0 msec}
[2024-12-20 11:46:59 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|----------|
|insert_id |
|----------|
|80        |
|----------|

[2024-12-20 11:46:59 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.feed.FeedService][0;39m
 p:com.green.greengram.feed.model.FeedPostReq@3b8cd62
[2024-12-20 11:46:59 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_pic
        (feed_id, pic)
        VALUES
         (  
            80, 'ffacdf87-2f11-439e-89c0-611ad6e7828d.png'
         )
 {executed in 0 msec}
[2024-12-20 11:46:59 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:46:59 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:46:59 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:46:59 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:46:59 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:46:59 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2Mjc4NiwiZXhwIjoxNzM0NjY4Nzg2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.WrxtnencxKh9Po1z1P3VliJ03yC2T_OO54VBNjmG4UBIcdS-g8JYvESgQExpZOi6
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2Mjc4NiwiZXhwIjoxNzM0NjY4Nzg2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.WrxtnencxKh9Po1z1P3VliJ03yC2T_OO54VBNjmG4UBIcdS-g8JYvESgQExpZOi6
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.feed.model.FeedGetReq][0;39m
 page: 1, size: null, profileUserId: null
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.feed.FeedController][0;39m
 FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=0, profileUserId=null)
[2024-12-20 11:47:26 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  A.feed_id AS feedId, A.contents, A.location
          , A.created_at AS createdAt
          , B.user_id AS writerUserId
          , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
          , B.pic AS writerPic
          , IF(C.feed_id IS NULL, 0 , 1) AS isLike
     FROM feed A
    INNER JOIN user B
       ON A.writer_user_id = B.user_id
     LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 33

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 1 msec}
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location  |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|
|80      |         |          |2024-12-20 11:46:59 |33      |8888     |null                                     |0      |
|79      |         |          |2024-12-20 11:46:52 |33      |8888     |null                                     |0      |
|78      |         |          |2024-12-20 11:46:40 |33      |8888     |null                                     |0      |
|77      |         |          |2024-12-20 11:46:33 |33      |8888     |null                                     |0      |
|76      |ÌîºÎìúÎÇ¥Ïö©ÌÖåÏä§Ìä∏  |Í∑∏Î¶ºÏª¥Ìì®ÌÑ∞ÏïÑÌä∏ÌïôÏõê |2024-12-19 11:46:59 |5       |1111     |9e2d2e13-79a7-481f-b221-26e228ce8a4d.jpg |0      |
|75      |asdf     |asdf      |2024-12-10 10:55:05 |19      |zxzx     |2f008281-bcf1-4873-812c-20ab707bf4c7     |0      |
|73      |         |          |2024-12-10 10:33:25 |9       |0        |445adb23-d27b-43c2-837a-3e70f0bfae01     |0      |
|72      |         |          |2024-12-10 10:06:53 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|71      |         |          |2024-12-10 10:04:30 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|70      |ÎßåÏÇ≠       |          |2024-12-10 10:04:12 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|68      |aaaaa    |aaaaa     |2024-12-10 09:50:56 |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |0      |
|67      |         |          |2024-12-09 16:52:00 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|66      |         |          |2024-12-09 16:45:57 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|65      |         |          |2024-12-09 16:38:08 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|64      |         |          |2024-12-09 16:38:04 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|63      |         |          |2024-12-09 16:37:59 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|62      |Îãà ÎØ∏Îûò
ÎÇ®Ìé∏  |          |2024-12-09 16:27:39 |17      |ddd      |null                                     |0      |
|61      |         |          |2024-12-09 16:26:51 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|60      |         |          |2024-12-09 16:19:37 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|59      |         |          |2024-12-09 16:19:21 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-20 11:47:26 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 80
 {executed in 1 msec}
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ffacdf87-2f11-439e-89c0-611ad6e7828d.png |
|-----------------------------------------|

[2024-12-20 11:47:26 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 80
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:47:26 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 79
 {executed in 0 msec}
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f5cd589c-229a-4aaa-b362-9d9d8097c2b7.png |
|-----------------------------------------|

[2024-12-20 11:47:26 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 79
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:47:26 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 78
 {executed in 1 msec}
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|591159c2-eca7-4176-8701-001abeec2bb4.png |
|-----------------------------------------|

[2024-12-20 11:47:26 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 78
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:47:26 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 77
 {executed in 1 msec}
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f58fad2e-8a6a-4f42-a870-aecc10e5ea87.png |
|-----------------------------------------|

[2024-12-20 11:47:26 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 77
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:47:26 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 76
 {executed in 0 msec}
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6d1cd1f5-8f13-4d99-9665-4dbab9b47fb7.png |
|fe728007-d85c-4ab7-8577-58a4c81ff176.gif |
|-----------------------------------------|

[2024-12-20 11:47:26 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 76
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:47:26 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 75
 {executed in 0 msec}
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a6fb41e-8434-4c72-8139-1169c075b2e8.png |
|-----------------------------------------|

[2024-12-20 11:47:26 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 75
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|-----------------|--------|---------|-----------------------------------------|
|feed_comment_id |comment          |user_id |writernm |pic                                      |
|----------------|-----------------|--------|---------|-----------------------------------------|
|106             |„Öá„Ñ¥„Ñª„Ñ¥„Öá„Ñª„Ñ¥„Öá„Ñπ„Ñ¥„Öá„Ñπ„Ñ¥„Öá„Ñª„Ñ¥ |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|105             |„Öá„Ñª„Öá„Ñª„Ñ¥„Öá„Ñª„Ñ¥„Öá„Ñπ„Ñ¥„Öá„Ñπ    |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|----------------|-----------------|--------|---------|-----------------------------------------|

[2024-12-20 11:47:26 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 73
 {executed in 0 msec}
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b53d82b3-0379-49c9-9c85-cb9c403c6523.jpg |
|-----------------------------------------|

[2024-12-20 11:47:26 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 73
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|104             |ÏåâÍ≤åÏù¥ÎÑ§    |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|103             |Í≤åÏù¥Í≤åÏù¥Ïïº   |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|102             |‚ô°       |9       |0        |445adb23-d27b-43c2-837a-3e70f0bfae01     |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-20 11:47:26 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 72
 {executed in 1 msec}
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|74f8b9ea-6e30-48e1-983a-3d09b7dbabea.gif |
|-----------------------------------------|

[2024-12-20 11:47:26 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 72
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:47:26 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 71
 {executed in 0 msec}
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2d1c8d65-5c08-4f78-96df-1fb6349d58d0.gif |
|-----------------------------------------|

[2024-12-20 11:47:26 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 71
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:47:26 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 70
 {executed in 0 msec}
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|87f5ba66-f8e4-41ca-a7ec-1d394b7ae5f7.jpg |
|-----------------------------------------|

[2024-12-20 11:47:26 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 70
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|101             |Î≥¥Ïó¨Ï§ò     |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-20 11:47:26 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|62d4ef6f-50e4-406f-ae1e-d1f64060366a.jpg |
|-----------------------------------------|

[2024-12-20 11:47:26 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 68
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:47:26 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 1 msec}
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5e5df70e-01d4-4b33-9e87-00e6a716008d.gif |
|-----------------------------------------|

[2024-12-20 11:47:26 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 67
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|----------|--------|---------|----|
|feed_comment_id |comment   |user_id |writernm |pic |
|----------------|----------|--------|---------|----|
|100             |Í∞úÏ∂î Î∞ïÍ≥† Í∞ëÎãàÎã§ |17      |ddd      |null|
|----------------|----------|--------|---------|----|

[2024-12-20 11:47:26 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 66
 {executed in 1 msec}
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2b6887e5-7070-4f39-a5db-bc4d35bb51fa.gif |
|-----------------------------------------|

[2024-12-20 11:47:26 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 66
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|-------------|--------|---------|----|
|feed_comment_id |comment      |user_id |writernm |pic |
|----------------|-------------|--------|---------|----|
|99              |ÏàòÏòÅÏïÑ Í¥ÄÎ¶¨ ÏïàÌïòÎÉê?  |17      |ddd      |null|
|98              |Ïó¨ ÌîºÎìú Í∞ú Ï≥ê ÎçîÎüΩÎÑ§ |17      |ddd      |null|
|----------------|-------------|--------|---------|----|

[2024-12-20 11:47:26 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 65
 {executed in 1 msec}
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0b2c055a-2426-4dbc-8f83-403ecd3fa464.gif |
|-----------------------------------------|

[2024-12-20 11:47:26 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 65
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:47:26 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 64
 {executed in 0 msec}
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d252f5fe-6aa1-4212-b558-caedfb9d59c5.gif |
|-----------------------------------------|

[2024-12-20 11:47:26 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 64
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:47:26 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 63
 {executed in 0 msec}
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|86cea73b-80b4-4501-aaeb-4db5007ded5f.gif |
|-----------------------------------------|

[2024-12-20 11:47:26 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 63
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:47:26 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 62
 {executed in 0 msec}
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|943ec3db-6b2f-4d8a-a1d9-cdfa7b2fe921.jpeg |
|------------------------------------------|

[2024-12-20 11:47:26 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 62
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:47:26 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 61
 {executed in 0 msec}
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bb7c519a-0113-4137-ada5-4bfa9df4b5d7.gif |
|-----------------------------------------|

[2024-12-20 11:47:26 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 61
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:47:26 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 1 msec}
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|282ad40c-d6c6-4183-8781-2cd3a5d80ade.gif |
|-----------------------------------------|

[2024-12-20 11:47:26 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 60
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:47:26 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 59
 {executed in 0 msec}
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|261ecdff-f966-4797-bc07-75a9eb1a5eee.gif |
|-----------------------------------------|

[2024-12-20 11:47:26 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 59
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:26 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:27 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:27 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:27 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:27 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:27 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:27 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:27 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:27 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:27 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:27 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:27 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:27 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:27 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:27 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:27 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:28 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:28 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:28 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:29 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:29 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:29 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:31 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:31 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:31 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:31 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:31 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:31 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:31 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:31 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:31 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2Mjc4NiwiZXhwIjoxNzM0NjY4Nzg2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.WrxtnencxKh9Po1z1P3VliJ03yC2T_OO54VBNjmG4UBIcdS-g8JYvESgQExpZOi6
[2024-12-20 11:47:31 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2Mjc4NiwiZXhwIjoxNzM0NjY4Nzg2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.WrxtnencxKh9Po1z1P3VliJ03yC2T_OO54VBNjmG4UBIcdS-g8JYvESgQExpZOi6
[2024-12-20 11:47:31 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2Mjc4NiwiZXhwIjoxNzM0NjY4Nzg2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.WrxtnencxKh9Po1z1P3VliJ03yC2T_OO54VBNjmG4UBIcdS-g8JYvESgQExpZOi6
[2024-12-20 11:47:31 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2Mjc4NiwiZXhwIjoxNzM0NjY4Nzg2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.WrxtnencxKh9Po1z1P3VliJ03yC2T_OO54VBNjmG4UBIcdS-g8JYvESgQExpZOi6
[2024-12-20 11:47:31 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.feed.model.FeedGetReq][0;39m
 page: 1, size: null, profileUserId: 19
[2024-12-20 11:47:31 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.feed.FeedController][0;39m
 FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=0, profileUserId=19)
[2024-12-20 11:47:31 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.user.UserController][0;39m
 UserController > getUserInfo > p: UserInfoGetReq(signedUserId=0, profileUserId=19)
[2024-12-20 11:47:31 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:31 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:31 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:31 [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  A.feed_id AS feedId, A.contents, A.location
          , A.created_at AS createdAt
          , B.user_id AS writerUserId
          , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
          , B.pic AS writerPic
          , IF(C.feed_id IS NULL, 0 , 1) AS isLike
     FROM feed A
    INNER JOIN user B
       ON A.writer_user_id = B.user_id
     LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 33

            WHERE A.writer_user_id = 19

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 0 msec}
[2024-12-20 11:47:31 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[jdbc.resultsettable][0;39m
 
|--------|---------|---------|--------------------|--------|---------|-------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic                                  |islike |
|--------|---------|---------|--------------------|--------|---------|-------------------------------------|-------|
|75      |asdf     |asdf     |2024-12-10 10:55:05 |19      |zxzx     |2f008281-bcf1-4873-812c-20ab707bf4c7 |0      |
|--------|---------|---------|--------------------|--------|---------|-------------------------------------|-------|

[2024-12-20 11:47:31 [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 75
 {executed in 0 msec}
[2024-12-20 11:47:31 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a6fb41e-8434-4c72-8139-1169c075b2e8.png |
|-----------------------------------------|

[2024-12-20 11:47:31 [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 75
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:47:31 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[jdbc.resultsettable][0;39m
 
|----------------|-----------------|--------|---------|-----------------------------------------|
|feed_comment_id |comment          |user_id |writernm |pic                                      |
|----------------|-----------------|--------|---------|-----------------------------------------|
|106             |„Öá„Ñ¥„Ñª„Ñ¥„Öá„Ñª„Ñ¥„Öá„Ñπ„Ñ¥„Öá„Ñπ„Ñ¥„Öá„Ñª„Ñ¥ |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|105             |„Öá„Ñª„Öá„Ñª„Ñ¥„Öá„Ñª„Ñ¥„Öá„Ñπ„Ñ¥„Öá„Ñπ    |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|----------------|-----------------|--------|---------|-----------------------------------------|

[2024-12-20 11:47:31 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
         , IF(nick_name IS NULL, uid, nick_name) AS nickName
         , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
         , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
         , COUNT(DISTINCT F3.feed_id) AS feedCount
         , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
         , MAX(IF(F1.from_user_id = 33, 1, 0))
         + MAX(IF(F2.to_user_id = 33, 2, 0)) AS followState
    FROM user A
        LEFT JOIN user_follow F1
          ON A.user_id = F1.to_user_id
        LEFT JOIN user_follow F2
          ON A.user_id = F2.from_user_id
        LEFT JOIN feed F3
          ON A.user_id = F3.writer_user_id
        LEFT JOIN feed_like F4
          ON F3.feed_id = F4.feed_id
        WHERE A.user_id = 19
 {executed in 4 msec}
[2024-12-20 11:47:31 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|--------|-------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                  |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|19      |2f008281-bcf1-4873-812c-20ab707bf4c7 |2024-12-10 10:54:49 |zxzx     |0        |0         |1         |0               |0           |
|--------|-------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-20 11:47:31 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:31 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:31 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:31 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:31 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:31 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:31 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:31 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:31 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:31 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:31 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:31 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:31 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:31 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:31 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2Mjc4NiwiZXhwIjoxNzM0NjY4Nzg2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.WrxtnencxKh9Po1z1P3VliJ03yC2T_OO54VBNjmG4UBIcdS-g8JYvESgQExpZOi6
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2Mjc4NiwiZXhwIjoxNzM0NjY4Nzg2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.WrxtnencxKh9Po1z1P3VliJ03yC2T_OO54VBNjmG4UBIcdS-g8JYvESgQExpZOi6
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.feed.model.FeedGetReq][0;39m
 page: 1, size: null, profileUserId: null
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.feed.FeedController][0;39m
 FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=0, profileUserId=null)
[2024-12-20 11:47:35 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  A.feed_id AS feedId, A.contents, A.location
          , A.created_at AS createdAt
          , B.user_id AS writerUserId
          , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
          , B.pic AS writerPic
          , IF(C.feed_id IS NULL, 0 , 1) AS isLike
     FROM feed A
    INNER JOIN user B
       ON A.writer_user_id = B.user_id
     LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 33

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 1 msec}
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location  |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|
|80      |         |          |2024-12-20 11:46:59 |33      |8888     |null                                     |0      |
|79      |         |          |2024-12-20 11:46:52 |33      |8888     |null                                     |0      |
|78      |         |          |2024-12-20 11:46:40 |33      |8888     |null                                     |0      |
|77      |         |          |2024-12-20 11:46:33 |33      |8888     |null                                     |0      |
|76      |ÌîºÎìúÎÇ¥Ïö©ÌÖåÏä§Ìä∏  |Í∑∏Î¶ºÏª¥Ìì®ÌÑ∞ÏïÑÌä∏ÌïôÏõê |2024-12-19 11:46:59 |5       |1111     |9e2d2e13-79a7-481f-b221-26e228ce8a4d.jpg |0      |
|75      |asdf     |asdf      |2024-12-10 10:55:05 |19      |zxzx     |2f008281-bcf1-4873-812c-20ab707bf4c7     |0      |
|73      |         |          |2024-12-10 10:33:25 |9       |0        |445adb23-d27b-43c2-837a-3e70f0bfae01     |0      |
|72      |         |          |2024-12-10 10:06:53 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|71      |         |          |2024-12-10 10:04:30 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|70      |ÎßåÏÇ≠       |          |2024-12-10 10:04:12 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|68      |aaaaa    |aaaaa     |2024-12-10 09:50:56 |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |0      |
|67      |         |          |2024-12-09 16:52:00 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|66      |         |          |2024-12-09 16:45:57 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|65      |         |          |2024-12-09 16:38:08 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|64      |         |          |2024-12-09 16:38:04 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|63      |         |          |2024-12-09 16:37:59 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|62      |Îãà ÎØ∏Îûò
ÎÇ®Ìé∏  |          |2024-12-09 16:27:39 |17      |ddd      |null                                     |0      |
|61      |         |          |2024-12-09 16:26:51 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|60      |         |          |2024-12-09 16:19:37 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|59      |         |          |2024-12-09 16:19:21 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-20 11:47:35 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 80
 {executed in 0 msec}
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ffacdf87-2f11-439e-89c0-611ad6e7828d.png |
|-----------------------------------------|

[2024-12-20 11:47:35 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 80
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:47:35 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 79
 {executed in 0 msec}
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f5cd589c-229a-4aaa-b362-9d9d8097c2b7.png |
|-----------------------------------------|

[2024-12-20 11:47:35 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 79
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:47:35 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 78
 {executed in 1 msec}
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|591159c2-eca7-4176-8701-001abeec2bb4.png |
|-----------------------------------------|

[2024-12-20 11:47:35 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 78
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:47:35 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 77
 {executed in 1 msec}
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f58fad2e-8a6a-4f42-a870-aecc10e5ea87.png |
|-----------------------------------------|

[2024-12-20 11:47:35 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 77
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:47:35 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 76
 {executed in 1 msec}
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6d1cd1f5-8f13-4d99-9665-4dbab9b47fb7.png |
|fe728007-d85c-4ab7-8577-58a4c81ff176.gif |
|-----------------------------------------|

[2024-12-20 11:47:35 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 76
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:47:35 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 75
 {executed in 1 msec}
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a6fb41e-8434-4c72-8139-1169c075b2e8.png |
|-----------------------------------------|

[2024-12-20 11:47:35 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 75
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------------|-----------------|--------|---------|-----------------------------------------|
|feed_comment_id |comment          |user_id |writernm |pic                                      |
|----------------|-----------------|--------|---------|-----------------------------------------|
|106             |„Öá„Ñ¥„Ñª„Ñ¥„Öá„Ñª„Ñ¥„Öá„Ñπ„Ñ¥„Öá„Ñπ„Ñ¥„Öá„Ñª„Ñ¥ |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|105             |„Öá„Ñª„Öá„Ñª„Ñ¥„Öá„Ñª„Ñ¥„Öá„Ñπ„Ñ¥„Öá„Ñπ    |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|----------------|-----------------|--------|---------|-----------------------------------------|

[2024-12-20 11:47:35 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 73
 {executed in 1 msec}
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b53d82b3-0379-49c9-9c85-cb9c403c6523.jpg |
|-----------------------------------------|

[2024-12-20 11:47:35 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 73
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|104             |ÏåâÍ≤åÏù¥ÎÑ§    |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|103             |Í≤åÏù¥Í≤åÏù¥Ïïº   |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|102             |‚ô°       |9       |0        |445adb23-d27b-43c2-837a-3e70f0bfae01     |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-20 11:47:35 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 72
 {executed in 1 msec}
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|74f8b9ea-6e30-48e1-983a-3d09b7dbabea.gif |
|-----------------------------------------|

[2024-12-20 11:47:35 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 72
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:47:35 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 71
 {executed in 0 msec}
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2d1c8d65-5c08-4f78-96df-1fb6349d58d0.gif |
|-----------------------------------------|

[2024-12-20 11:47:35 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 71
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:47:35 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 70
 {executed in 0 msec}
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|87f5ba66-f8e4-41ca-a7ec-1d394b7ae5f7.jpg |
|-----------------------------------------|

[2024-12-20 11:47:35 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 70
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|101             |Î≥¥Ïó¨Ï§ò     |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-20 11:47:35 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|62d4ef6f-50e4-406f-ae1e-d1f64060366a.jpg |
|-----------------------------------------|

[2024-12-20 11:47:35 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 68
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:47:35 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5e5df70e-01d4-4b33-9e87-00e6a716008d.gif |
|-----------------------------------------|

[2024-12-20 11:47:35 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 67
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------------|----------|--------|---------|----|
|feed_comment_id |comment   |user_id |writernm |pic |
|----------------|----------|--------|---------|----|
|100             |Í∞úÏ∂î Î∞ïÍ≥† Í∞ëÎãàÎã§ |17      |ddd      |null|
|----------------|----------|--------|---------|----|

[2024-12-20 11:47:35 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 66
 {executed in 0 msec}
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2b6887e5-7070-4f39-a5db-bc4d35bb51fa.gif |
|-----------------------------------------|

[2024-12-20 11:47:35 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 66
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------------|-------------|--------|---------|----|
|feed_comment_id |comment      |user_id |writernm |pic |
|----------------|-------------|--------|---------|----|
|99              |ÏàòÏòÅÏïÑ Í¥ÄÎ¶¨ ÏïàÌïòÎÉê?  |17      |ddd      |null|
|98              |Ïó¨ ÌîºÎìú Í∞ú Ï≥ê ÎçîÎüΩÎÑ§ |17      |ddd      |null|
|----------------|-------------|--------|---------|----|

[2024-12-20 11:47:35 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 65
 {executed in 0 msec}
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0b2c055a-2426-4dbc-8f83-403ecd3fa464.gif |
|-----------------------------------------|

[2024-12-20 11:47:35 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 65
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:47:35 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 64
 {executed in 0 msec}
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d252f5fe-6aa1-4212-b558-caedfb9d59c5.gif |
|-----------------------------------------|

[2024-12-20 11:47:35 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 64
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:47:35 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 63
 {executed in 1 msec}
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|86cea73b-80b4-4501-aaeb-4db5007ded5f.gif |
|-----------------------------------------|

[2024-12-20 11:47:35 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 63
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:47:35 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 62
 {executed in 1 msec}
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|943ec3db-6b2f-4d8a-a1d9-cdfa7b2fe921.jpeg |
|------------------------------------------|

[2024-12-20 11:47:35 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 62
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:47:35 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 61
 {executed in 0 msec}
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bb7c519a-0113-4137-ada5-4bfa9df4b5d7.gif |
|-----------------------------------------|

[2024-12-20 11:47:35 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 61
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:47:35 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|282ad40c-d6c6-4183-8781-2cd3a5d80ade.gif |
|-----------------------------------------|

[2024-12-20 11:47:35 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 60
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:47:35 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 59
 {executed in 0 msec}
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|261ecdff-f966-4797-bc07-75a9eb1a5eee.gif |
|-----------------------------------------|

[2024-12-20 11:47:35 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 59
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:35 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:36 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:36 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:36 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:36 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:36 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:36 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:37 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:37 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:37 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:37 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:37 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:37 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:37 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:37 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:37 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:37 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:37 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:37 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:38 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:38 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:38 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:38 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:38 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:38 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:38 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:38 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:38 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:39 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:39 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:39 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:39 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:39 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:39 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:43 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:43 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2Mjc4NiwiZXhwIjoxNzM0NjY4Nzg2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.WrxtnencxKh9Po1z1P3VliJ03yC2T_OO54VBNjmG4UBIcdS-g8JYvESgQExpZOi6
[2024-12-20 11:47:43 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2Mjc4NiwiZXhwIjoxNzM0NjY4Nzg2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.WrxtnencxKh9Po1z1P3VliJ03yC2T_OO54VBNjmG4UBIcdS-g8JYvESgQExpZOi6
[2024-12-20 11:47:43 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.feed.model.FeedGetReq][0;39m
 page: 2, size: null, profileUserId: null
[2024-12-20 11:47:43 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.feed.FeedController][0;39m
 FeedController > getFeedList > p: FeedGetReq(super=Paging(page=2, size=20, startIdx=20), signedUserId=0, profileUserId=null)
[2024-12-20 11:47:43 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  A.feed_id AS feedId, A.contents, A.location
          , A.created_at AS createdAt
          , B.user_id AS writerUserId
          , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
          , B.pic AS writerPic
          , IF(C.feed_id IS NULL, 0 , 1) AS isLike
     FROM feed A
    INNER JOIN user B
       ON A.writer_user_id = B.user_id
     LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 33

    ORDER BY A.feed_id DESC
    LIMIT 20, 20
 {executed in 1 msec}
[2024-12-20 11:47:43 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|--------|---------|---------|--------------------|--------|---------|-------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic                                  |islike |
|--------|---------|---------|--------------------|--------|---------|-------------------------------------|-------|
|58      |         |         |2024-12-09 16:19:10 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21 |0      |
|57      |„Öã„Öã       |         |2024-12-09 16:07:37 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21 |0      |
|56      |Î™ÖÎ∞ïÏ®©      |         |2024-12-09 16:06:14 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21 |0      |
|55      |Í∑ºÌòúÏ∞°      |         |2024-12-09 16:06:06 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21 |0      |
|54      |         |         |2024-12-09 16:04:51 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743 |0      |
|53      |Ïû¨Ïù∏Ï®©      |         |2024-12-09 15:56:16 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21 |0      |
|52      |ÏÑùÏó¥Ï®©      |         |2024-12-09 15:45:20 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21 |0      |
|51      |         |         |2024-12-06 14:31:31 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743 |0      |
|43      |         |         |2024-12-05 10:58:02 |9       |0        |445adb23-d27b-43c2-837a-3e70f0bfae01 |0      |
|42      |         |         |2024-12-05 10:56:12 |9       |0        |445adb23-d27b-43c2-837a-3e70f0bfae01 |0      |
|41      |         |         |2024-12-05 10:53:02 |9       |0        |445adb23-d27b-43c2-837a-3e70f0bfae01 |0      |
|40      |„Öé„Öé       |„Öé„Öé       |2024-12-05 10:51:27 |9       |0        |445adb23-d27b-43c2-837a-3e70f0bfae01 |0      |
|34      |asd      |asd      |2024-12-05 10:43:04 |9       |0        |445adb23-d27b-43c2-837a-3e70f0bfae01 |0      |
|32      |„ÖÅ„Öá„Ñπ„ÖÅ„Öá„Ñ¥„Ñπ  |„ÖÅ„Öá„Ñπ„ÖÅ„Öá    |2024-12-02 17:00:32 |7       |1111     |24761a33-3754-46f9-8a49-531b367003fa |0      |
|29      |asd      |asd      |2024-11-29 17:39:15 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743 |0      |
|28      |asd      |asd      |2024-11-29 17:39:03 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743 |0      |
|27      |asd      |asd      |2024-11-29 17:38:08 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743 |0      |
|26      |ÎÇòÍ∞ÄÎùº      |Ïö∞Ïö∞       |2024-11-29 17:12:45 |7       |1111     |24761a33-3754-46f9-8a49-531b367003fa |0      |
|25      |ÎÇòÍ∞Ä Í∑∏ÎÉ•    |Ïïº        |2024-11-29 17:12:30 |7       |1111     |24761a33-3754-46f9-8a49-531b367003fa |0      |
|24      |„ÖÅ„Ñ¥„Öá„Ñª„Ñ¥„Öá„Ñª„Ñ¥ |„ÖÅ„Ñ¥„Öá„Ñπ     |2024-11-29 16:45:03 |7       |1111     |24761a33-3754-46f9-8a49-531b367003fa |0      |
|--------|---------|---------|--------------------|--------|---------|-------------------------------------|-------|

[2024-12-20 11:47:43 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 58
 {executed in 0 msec}
[2024-12-20 11:47:43 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|68c097ba-aa57-4002-a3bd-774851007b2a.gif |
|-----------------------------------------|

[2024-12-20 11:47:43 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 58
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:43 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:47:43 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 57
 {executed in 1 msec}
[2024-12-20 11:47:43 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3298dc0e-3231-4773-982a-47e30f2531e5.jpg |
|f5512946-3498-437e-ac4c-28c8a06fc9f0.jpg |
|-----------------------------------------|

[2024-12-20 11:47:43 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 57
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:43 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|---------|--------|---------|-------------------------------------|
|feed_comment_id |comment  |user_id |writernm |pic                                  |
|----------------|---------|--------|---------|-------------------------------------|
|97              |„Ñ∑„Ñ∑;; ÎÖ∏ÏïåÎùº |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743 |
|----------------|---------|--------|---------|-------------------------------------|

[2024-12-20 11:47:43 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 56
 {executed in 1 msec}
[2024-12-20 11:47:43 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f661e26c-8b44-49d5-a944-cceeea6116a7.jpg |
|-----------------------------------------|

[2024-12-20 11:47:43 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 56
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:43 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:47:43 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 55
 {executed in 0 msec}
[2024-12-20 11:47:43 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dc7ee72b-960a-431b-b021-bdfc625c097b.jpg |
|-----------------------------------------|

[2024-12-20 11:47:43 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 55
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:43 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:47:43 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 54
 {executed in 0 msec}
[2024-12-20 11:47:43 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9beefcaa-eee8-4477-a61a-49c497d761a2.png |
|-----------------------------------------|

[2024-12-20 11:47:43 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 54
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:43 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:47:43 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 53
 {executed in 0 msec}
[2024-12-20 11:47:43 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5991e7d0-5da0-48b0-a8e0-1f79ff9c5b0d.jpg |
|-----------------------------------------|

[2024-12-20 11:47:43 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 53
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:47:43 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|-------------|--------|---------|-------------------------------------|
|feed_comment_id |comment      |user_id |writernm |pic                                  |
|----------------|-------------|--------|---------|-------------------------------------|
|96              |Ïû¨Ïù∏Ïù¥Ìòï ÏûòÏÉùÍ≤ºÏñ¥Ïöî!! |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21 |
|----------------|-------------|--------|---------|-------------------------------------|

[2024-12-20 11:47:43 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 52
 {executed in 0 msec}
[2024-12-20 11:47:43 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0825ecad-6443-40a7-a1e8-57db3ffa156a.jpg |
|-----------------------------------------|

[2024-12-20 11:47:43 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 52
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:47:43 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:47:43 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 51
 {executed in 0 msec}
[2024-12-20 11:47:43 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0922fc12-2120-4a77-a428-bad71656c08b.gif |
|-----------------------------------------|

[2024-12-20 11:47:43 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 51
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:43 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|93              |123     |5       |1111     |9e2d2e13-79a7-481f-b221-26e228ce8a4d.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-20 11:47:43 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 43
 {executed in 0 msec}
[2024-12-20 11:47:43 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4093b8da-7e67-4fd7-b4dc-151b832e22c9.gif |
|-----------------------------------------|

[2024-12-20 11:47:43 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 43
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:43 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:47:43 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 42
 {executed in 0 msec}
[2024-12-20 11:47:43 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|83ab6b48-c568-4802-a4af-8c5affce8970.gif |
|-----------------------------------------|

[2024-12-20 11:47:43 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 42
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:43 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:47:43 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 41
 {executed in 1 msec}
[2024-12-20 11:47:43 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|af70dee9-b92b-4274-ab55-84b6cd44e199.jpg |
|-----------------------------------------|

[2024-12-20 11:47:43 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 41
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:43 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:47:43 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 40
 {executed in 0 msec}
[2024-12-20 11:47:43 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fbac1b6a-25ac-47f9-a517-150f80e0e524.jpg |
|-----------------------------------------|

[2024-12-20 11:47:43 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 40
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:43 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:47:43 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-20 11:47:43 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|db6b8739-f6d6-4320-b370-e0cda4ada829.png |
|-----------------------------------------|

[2024-12-20 11:47:43 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 34
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:43 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|91              |^^      |10      |mm       |25acd3c0-9d3e-4dc5-ace1-5bfc158a2296.jpg |
|90              |^^lÎ∞úÎüº   |9       |0        |445adb23-d27b-43c2-837a-3e70f0bfae01     |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-20 11:47:43 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-20 11:47:43 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58fae38a-01cb-49e4-a016-5927436bbf96.jpg |
|-----------------------------------------|

[2024-12-20 11:47:43 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 32
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:43 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|----------|--------|---------|-------------------------------------|
|feed_comment_id |comment   |user_id |writernm |pic                                  |
|----------------|----------|--------|---------|-------------------------------------|
|29              |„Öá„Ñª„Ñ¥„Öá„Ñπ     |7       |1111     |24761a33-3754-46f9-8a49-531b367003fa |
|28              |„ÖÅ„Ñ¥„Öá„Ñª„Öá„Ñª„Ñ¥„Öá„Ñπ |7       |1111     |24761a33-3754-46f9-8a49-531b367003fa |
|27              |„ÖÅ„Öá„Ñ¥„Ñª„Öá„Ñª„Ñ¥„Öá  |7       |1111     |24761a33-3754-46f9-8a49-531b367003fa |
|26              |„Öá„ÖÅ„Ñª„Öá„Ñª„Öá„Ñπ   |7       |1111     |24761a33-3754-46f9-8a49-531b367003fa |
|----------------|----------|--------|---------|-------------------------------------|

[2024-12-20 11:47:43 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-20 11:47:43 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a97e26b9-c967-4856-99f7-9f1f3a1738e7.png |
|-----------------------------------------|

[2024-12-20 11:47:43 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:43 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|-------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                  |
|----------------|--------|--------|---------|-------------------------------------|
|10              |ÏùëÏï†      |7       |1111     |24761a33-3754-46f9-8a49-531b367003fa |
|9               |Ïñ¥ÏßÄÎãà Î¨¥ÏÑúÏõå |7       |1111     |24761a33-3754-46f9-8a49-531b367003fa |
|----------------|--------|--------|---------|-------------------------------------|

[2024-12-20 11:47:43 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 28
 {executed in 0 msec}
[2024-12-20 11:47:43 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|98727d19-4e83-48ee-b19f-75b53bf255ce.png |
|-----------------------------------------|

[2024-12-20 11:47:43 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:43 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|---------|--------|---------|-------------------------------------|
|feed_comment_id |comment  |user_id |writernm |pic                                  |
|----------------|---------|--------|---------|-------------------------------------|
|12              |ÏïÑÏßÅÎèÑ ÏïàÎÇòÍ∞îÎÇò |7       |1111     |24761a33-3754-46f9-8a49-531b367003fa |
|11              |ÌïúÎ≥ÑÏù¥ ÎÇòÍ∞ÄÎùº  |7       |1111     |24761a33-3754-46f9-8a49-531b367003fa |
|----------------|---------|--------|---------|-------------------------------------|

[2024-12-20 11:47:43 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-20 11:47:43 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|66d2f4f8-06cc-4aef-902a-1c850fad2516.jpg |
|-----------------------------------------|

[2024-12-20 11:47:43 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 27
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:43 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|-------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                  |
|----------------|--------|--------|---------|-------------------------------------|
|83              |15      |7       |1111     |24761a33-3754-46f9-8a49-531b367003fa |
|82              |16      |7       |1111     |24761a33-3754-46f9-8a49-531b367003fa |
|81              |17      |7       |1111     |24761a33-3754-46f9-8a49-531b367003fa |
|80              |18      |7       |1111     |24761a33-3754-46f9-8a49-531b367003fa |
|----------------|--------|--------|---------|-------------------------------------|

[2024-12-20 11:47:43 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 26
 {executed in 0 msec}
[2024-12-20 11:47:43 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7cc1858a-dae4-40c1-aa31-c98d782830c6.gif |
|-----------------------------------------|

[2024-12-20 11:47:43 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 26
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:43 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:47:43 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 25
 {executed in 0 msec}
[2024-12-20 11:47:43 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8111ac4c-de27-4128-a5d0-2c6be2cd1a8d.png |
|-----------------------------------------|

[2024-12-20 11:47:43 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 25
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:43 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:47:43 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 24
 {executed in 0 msec}
[2024-12-20 11:47:43 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7dac40bb-eeb3-40fb-afbc-ced24f593629.jpg |
|-----------------------------------------|

[2024-12-20 11:47:43 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 24
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:43 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:47:43 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:43 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:43 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:43 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:43 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:43 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:43 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:43 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:43 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:44 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:44 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:44 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:44 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:44 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:44 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:44 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:44 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:44 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:44 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:44 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:44 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:44 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:44 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:44 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:44 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:44 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:44 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:44 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:44 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:44 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:44 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:44 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:44 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:44 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:44 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:44 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:44 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:44 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:44 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:44 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:44 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:44 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:44 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:44 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:44 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:44 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:44 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:44 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:44 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:44 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:44 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:45 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:45 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:45 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:45 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:45 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:45 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:45 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:45 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:45 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:45 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:45 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:45 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:45 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:45 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:45 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:45 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:45 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:45 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:46 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:46 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:46 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:46 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:46 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:46 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:46 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:46 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:46 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:46 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:46 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:46 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:46 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:46 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:46 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:46 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:46 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:46 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:46 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:46 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:46 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:46 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:46 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:46 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:46 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:46 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:46 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:46 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:46 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:46 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2Mjc4NiwiZXhwIjoxNzM0NjY4Nzg2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.WrxtnencxKh9Po1z1P3VliJ03yC2T_OO54VBNjmG4UBIcdS-g8JYvESgQExpZOi6
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2Mjc4NiwiZXhwIjoxNzM0NjY4Nzg2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.WrxtnencxKh9Po1z1P3VliJ03yC2T_OO54VBNjmG4UBIcdS-g8JYvESgQExpZOi6
[2024-12-20 11:47:54 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT user_id AS userId,
        IFNULL(nick_name,uid) AS nickName, pic, upw
        FROM user
        WHERE uid = '123'
 {executed in 1 msec}
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|--------|---------|-------------------------------------|-------------------------------------------------------------|
|user_id |nickname |pic                                  |upw                                                          |
|--------|---------|-------------------------------------|-------------------------------------------------------------|
|13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21 |$2a$10$1zUMyaAqTg5wkGggj5Gk/eyU8l50s2tb2POXP6nXJheB9NshUg9YK |
|--------|---------|-------------------------------------|-------------------------------------------------------------|

[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2Mjg3NCwiZXhwIjoxNzM0NjY4ODc0LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MTMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.vIb8UUmu5m12_j7k80GPz9sju0k7uYCrAcGVRDXpvMjAO3NWZfRVfyxzA17Rk4Lj
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2Mjg3NCwiZXhwIjoxNzM0NjY4ODc0LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MTMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.vIb8UUmu5m12_j7k80GPz9sju0k7uYCrAcGVRDXpvMjAO3NWZfRVfyxzA17Rk4Lj
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.feed.model.FeedGetReq][0;39m
 page: 1, size: null, profileUserId: null
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.feed.FeedController][0;39m
 FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=0, profileUserId=null)
[2024-12-20 11:47:54 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  A.feed_id AS feedId, A.contents, A.location
          , A.created_at AS createdAt
          , B.user_id AS writerUserId
          , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
          , B.pic AS writerPic
          , IF(C.feed_id IS NULL, 0 , 1) AS isLike
     FROM feed A
    INNER JOIN user B
       ON A.writer_user_id = B.user_id
     LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 13

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 1 msec}
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location  |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|
|80      |         |          |2024-12-20 11:46:59 |33      |8888     |null                                     |0      |
|79      |         |          |2024-12-20 11:46:52 |33      |8888     |null                                     |0      |
|78      |         |          |2024-12-20 11:46:40 |33      |8888     |null                                     |0      |
|77      |         |          |2024-12-20 11:46:33 |33      |8888     |null                                     |0      |
|76      |ÌîºÎìúÎÇ¥Ïö©ÌÖåÏä§Ìä∏  |Í∑∏Î¶ºÏª¥Ìì®ÌÑ∞ÏïÑÌä∏ÌïôÏõê |2024-12-19 11:46:59 |5       |1111     |9e2d2e13-79a7-481f-b221-26e228ce8a4d.jpg |0      |
|75      |asdf     |asdf      |2024-12-10 10:55:05 |19      |zxzx     |2f008281-bcf1-4873-812c-20ab707bf4c7     |0      |
|73      |         |          |2024-12-10 10:33:25 |9       |0        |445adb23-d27b-43c2-837a-3e70f0bfae01     |0      |
|72      |         |          |2024-12-10 10:06:53 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|71      |         |          |2024-12-10 10:04:30 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|70      |ÎßåÏÇ≠       |          |2024-12-10 10:04:12 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|68      |aaaaa    |aaaaa     |2024-12-10 09:50:56 |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |0      |
|67      |         |          |2024-12-09 16:52:00 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|66      |         |          |2024-12-09 16:45:57 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|65      |         |          |2024-12-09 16:38:08 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|64      |         |          |2024-12-09 16:38:04 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|63      |         |          |2024-12-09 16:37:59 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|62      |Îãà ÎØ∏Îûò
ÎÇ®Ìé∏  |          |2024-12-09 16:27:39 |17      |ddd      |null                                     |0      |
|61      |         |          |2024-12-09 16:26:51 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|60      |         |          |2024-12-09 16:19:37 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|59      |         |          |2024-12-09 16:19:21 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-20 11:47:54 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 80
 {executed in 0 msec}
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ffacdf87-2f11-439e-89c0-611ad6e7828d.png |
|-----------------------------------------|

[2024-12-20 11:47:54 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 80
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:47:54 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 79
 {executed in 0 msec}
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f5cd589c-229a-4aaa-b362-9d9d8097c2b7.png |
|-----------------------------------------|

[2024-12-20 11:47:54 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 79
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:47:54 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 78
 {executed in 0 msec}
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|591159c2-eca7-4176-8701-001abeec2bb4.png |
|-----------------------------------------|

[2024-12-20 11:47:54 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 78
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:47:54 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 77
 {executed in 0 msec}
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f58fad2e-8a6a-4f42-a870-aecc10e5ea87.png |
|-----------------------------------------|

[2024-12-20 11:47:54 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 77
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:47:54 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 76
 {executed in 0 msec}
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6d1cd1f5-8f13-4d99-9665-4dbab9b47fb7.png |
|fe728007-d85c-4ab7-8577-58a4c81ff176.gif |
|-----------------------------------------|

[2024-12-20 11:47:54 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 76
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:47:54 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 75
 {executed in 0 msec}
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a6fb41e-8434-4c72-8139-1169c075b2e8.png |
|-----------------------------------------|

[2024-12-20 11:47:54 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 75
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|----------------|-----------------|--------|---------|-----------------------------------------|
|feed_comment_id |comment          |user_id |writernm |pic                                      |
|----------------|-----------------|--------|---------|-----------------------------------------|
|106             |„Öá„Ñ¥„Ñª„Ñ¥„Öá„Ñª„Ñ¥„Öá„Ñπ„Ñ¥„Öá„Ñπ„Ñ¥„Öá„Ñª„Ñ¥ |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|105             |„Öá„Ñª„Öá„Ñª„Ñ¥„Öá„Ñª„Ñ¥„Öá„Ñπ„Ñ¥„Öá„Ñπ    |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|----------------|-----------------|--------|---------|-----------------------------------------|

[2024-12-20 11:47:54 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 73
 {executed in 0 msec}
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b53d82b3-0379-49c9-9c85-cb9c403c6523.jpg |
|-----------------------------------------|

[2024-12-20 11:47:54 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 73
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|104             |ÏåâÍ≤åÏù¥ÎÑ§    |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|103             |Í≤åÏù¥Í≤åÏù¥Ïïº   |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|102             |‚ô°       |9       |0        |445adb23-d27b-43c2-837a-3e70f0bfae01     |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-20 11:47:54 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 72
 {executed in 0 msec}
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|74f8b9ea-6e30-48e1-983a-3d09b7dbabea.gif |
|-----------------------------------------|

[2024-12-20 11:47:54 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 72
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:47:54 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 71
 {executed in 0 msec}
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2d1c8d65-5c08-4f78-96df-1fb6349d58d0.gif |
|-----------------------------------------|

[2024-12-20 11:47:54 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 71
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:47:54 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 70
 {executed in 0 msec}
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|87f5ba66-f8e4-41ca-a7ec-1d394b7ae5f7.jpg |
|-----------------------------------------|

[2024-12-20 11:47:54 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 70
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|101             |Î≥¥Ïó¨Ï§ò     |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-20 11:47:54 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|62d4ef6f-50e4-406f-ae1e-d1f64060366a.jpg |
|-----------------------------------------|

[2024-12-20 11:47:54 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 68
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:47:54 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5e5df70e-01d4-4b33-9e87-00e6a716008d.gif |
|-----------------------------------------|

[2024-12-20 11:47:54 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 67
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|----------------|----------|--------|---------|----|
|feed_comment_id |comment   |user_id |writernm |pic |
|----------------|----------|--------|---------|----|
|100             |Í∞úÏ∂î Î∞ïÍ≥† Í∞ëÎãàÎã§ |17      |ddd      |null|
|----------------|----------|--------|---------|----|

[2024-12-20 11:47:54 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 66
 {executed in 1 msec}
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2b6887e5-7070-4f39-a5db-bc4d35bb51fa.gif |
|-----------------------------------------|

[2024-12-20 11:47:54 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 66
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|----------------|-------------|--------|---------|----|
|feed_comment_id |comment      |user_id |writernm |pic |
|----------------|-------------|--------|---------|----|
|99              |ÏàòÏòÅÏïÑ Í¥ÄÎ¶¨ ÏïàÌïòÎÉê?  |17      |ddd      |null|
|98              |Ïó¨ ÌîºÎìú Í∞ú Ï≥ê ÎçîÎüΩÎÑ§ |17      |ddd      |null|
|----------------|-------------|--------|---------|----|

[2024-12-20 11:47:54 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 65
 {executed in 1 msec}
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0b2c055a-2426-4dbc-8f83-403ecd3fa464.gif |
|-----------------------------------------|

[2024-12-20 11:47:54 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 65
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:47:54 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 64
 {executed in 0 msec}
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d252f5fe-6aa1-4212-b558-caedfb9d59c5.gif |
|-----------------------------------------|

[2024-12-20 11:47:54 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 64
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:47:54 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 63
 {executed in 0 msec}
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|86cea73b-80b4-4501-aaeb-4db5007ded5f.gif |
|-----------------------------------------|

[2024-12-20 11:47:54 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 63
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:47:54 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 62
 {executed in 0 msec}
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|943ec3db-6b2f-4d8a-a1d9-cdfa7b2fe921.jpeg |
|------------------------------------------|

[2024-12-20 11:47:54 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 62
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:47:54 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 61
 {executed in 0 msec}
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bb7c519a-0113-4137-ada5-4bfa9df4b5d7.gif |
|-----------------------------------------|

[2024-12-20 11:47:54 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 61
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:47:54 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|282ad40c-d6c6-4183-8781-2cd3a5d80ade.gif |
|-----------------------------------------|

[2024-12-20 11:47:54 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 60
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:47:54 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 59
 {executed in 0 msec}
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|261ecdff-f966-4797-bc07-75a9eb1a5eee.gif |
|-----------------------------------------|

[2024-12-20 11:47:54 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 59
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:54 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:55 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:55 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:55 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:55 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:55 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:55 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:55 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:55 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:55 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:55 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:55 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:55 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:55 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:55 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:55 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:55 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:55 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:55 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:56 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:56 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:56 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:56 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:56 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:56 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:56 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:56 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:56 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:56 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:56 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2Mjg3NCwiZXhwIjoxNzM0NjY4ODc0LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MTMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.vIb8UUmu5m12_j7k80GPz9sju0k7uYCrAcGVRDXpvMjAO3NWZfRVfyxzA17Rk4Lj
[2024-12-20 11:47:56 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2Mjg3NCwiZXhwIjoxNzM0NjY4ODc0LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MTMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.vIb8UUmu5m12_j7k80GPz9sju0k7uYCrAcGVRDXpvMjAO3NWZfRVfyxzA17Rk4Lj
[2024-12-20 11:47:56 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.user.UserController][0;39m
 UserController > getUserInfo > p: UserInfoGetReq(signedUserId=0, profileUserId=13)
[2024-12-20 11:47:56 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
         , IF(nick_name IS NULL, uid, nick_name) AS nickName
         , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
         , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
         , COUNT(DISTINCT F3.feed_id) AS feedCount
         , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
         , MAX(IF(F1.from_user_id = 13, 1, 0))
         + MAX(IF(F2.to_user_id = 13, 2, 0)) AS followState
    FROM user A
        LEFT JOIN user_follow F1
          ON A.user_id = F1.to_user_id
        LEFT JOIN user_follow F2
          ON A.user_id = F2.from_user_id
        LEFT JOIN feed F3
          ON A.user_id = F3.writer_user_id
        LEFT JOIN feed_like F4
          ON F3.feed_id = F4.feed_id
        WHERE A.user_id = 13
 {executed in 1 msec}
[2024-12-20 11:47:56 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|--------|-------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                  |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|13      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21 |2024-12-05 10:58:48 |123      |1        |0         |10        |2               |0           |
|--------|-------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-20 11:47:56 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:56 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2Mjg3NCwiZXhwIjoxNzM0NjY4ODc0LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MTMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.vIb8UUmu5m12_j7k80GPz9sju0k7uYCrAcGVRDXpvMjAO3NWZfRVfyxzA17Rk4Lj
[2024-12-20 11:47:56 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2Mjg3NCwiZXhwIjoxNzM0NjY4ODc0LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MTMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.vIb8UUmu5m12_j7k80GPz9sju0k7uYCrAcGVRDXpvMjAO3NWZfRVfyxzA17Rk4Lj
[2024-12-20 11:47:56 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.feed.model.FeedGetReq][0;39m
 page: 1, size: null, profileUserId: 13
[2024-12-20 11:47:56 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.feed.FeedController][0;39m
 FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=0, profileUserId=13)
[2024-12-20 11:47:56 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT  A.feed_id AS feedId, A.contents, A.location
          , A.created_at AS createdAt
          , B.user_id AS writerUserId
          , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
          , B.pic AS writerPic
          , IF(C.feed_id IS NULL, 0 , 1) AS isLike
     FROM feed A
    INNER JOIN user B
       ON A.writer_user_id = B.user_id
     LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 13

            WHERE A.writer_user_id = 13

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 0 msec}
[2024-12-20 11:47:56 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|--------|---------|---------|--------------------|--------|---------|-------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic                                  |islike |
|--------|---------|---------|--------------------|--------|---------|-------------------------------------|-------|
|66      |         |         |2024-12-09 16:45:57 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21 |0      |
|61      |         |         |2024-12-09 16:26:51 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21 |0      |
|60      |         |         |2024-12-09 16:19:37 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21 |0      |
|59      |         |         |2024-12-09 16:19:21 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21 |0      |
|58      |         |         |2024-12-09 16:19:10 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21 |0      |
|57      |„Öã„Öã       |         |2024-12-09 16:07:37 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21 |0      |
|56      |Î™ÖÎ∞ïÏ®©      |         |2024-12-09 16:06:14 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21 |0      |
|55      |Í∑ºÌòúÏ∞°      |         |2024-12-09 16:06:06 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21 |0      |
|53      |Ïû¨Ïù∏Ï®©      |         |2024-12-09 15:56:16 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21 |1      |
|52      |ÏÑùÏó¥Ï®©      |         |2024-12-09 15:45:20 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21 |1      |
|--------|---------|---------|--------------------|--------|---------|-------------------------------------|-------|

[2024-12-20 11:47:56 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 66
 {executed in 1 msec}
[2024-12-20 11:47:56 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2b6887e5-7070-4f39-a5db-bc4d35bb51fa.gif |
|-----------------------------------------|

[2024-12-20 11:47:56 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 66
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:56 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|----------------|-------------|--------|---------|----|
|feed_comment_id |comment      |user_id |writernm |pic |
|----------------|-------------|--------|---------|----|
|99              |ÏàòÏòÅÏïÑ Í¥ÄÎ¶¨ ÏïàÌïòÎÉê?  |17      |ddd      |null|
|98              |Ïó¨ ÌîºÎìú Í∞ú Ï≥ê ÎçîÎüΩÎÑ§ |17      |ddd      |null|
|----------------|-------------|--------|---------|----|

[2024-12-20 11:47:56 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 61
 {executed in 1 msec}
[2024-12-20 11:47:56 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bb7c519a-0113-4137-ada5-4bfa9df4b5d7.gif |
|-----------------------------------------|

[2024-12-20 11:47:56 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 61
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:56 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:47:56 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-20 11:47:56 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|282ad40c-d6c6-4183-8781-2cd3a5d80ade.gif |
|-----------------------------------------|

[2024-12-20 11:47:56 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 60
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:56 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:47:56 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 59
 {executed in 0 msec}
[2024-12-20 11:47:56 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|261ecdff-f966-4797-bc07-75a9eb1a5eee.gif |
|-----------------------------------------|

[2024-12-20 11:47:56 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 59
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:47:56 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:47:56 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 58
 {executed in 0 msec}
[2024-12-20 11:47:56 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|68c097ba-aa57-4002-a3bd-774851007b2a.gif |
|-----------------------------------------|

[2024-12-20 11:47:56 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 58
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:56 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:47:56 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 57
 {executed in 0 msec}
[2024-12-20 11:47:56 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3298dc0e-3231-4773-982a-47e30f2531e5.jpg |
|f5512946-3498-437e-ac4c-28c8a06fc9f0.jpg |
|-----------------------------------------|

[2024-12-20 11:47:56 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 57
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:56 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|----------------|---------|--------|---------|-------------------------------------|
|feed_comment_id |comment  |user_id |writernm |pic                                  |
|----------------|---------|--------|---------|-------------------------------------|
|97              |„Ñ∑„Ñ∑;; ÎÖ∏ÏïåÎùº |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743 |
|----------------|---------|--------|---------|-------------------------------------|

[2024-12-20 11:47:56 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 56
 {executed in 1 msec}
[2024-12-20 11:47:56 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f661e26c-8b44-49d5-a944-cceeea6116a7.jpg |
|-----------------------------------------|

[2024-12-20 11:47:56 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 56
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:56 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:47:56 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 55
 {executed in 0 msec}
[2024-12-20 11:47:56 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dc7ee72b-960a-431b-b021-bdfc625c097b.jpg |
|-----------------------------------------|

[2024-12-20 11:47:56 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 55
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:47:56 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:47:56 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 53
 {executed in 0 msec}
[2024-12-20 11:47:56 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5991e7d0-5da0-48b0-a8e0-1f79ff9c5b0d.jpg |
|-----------------------------------------|

[2024-12-20 11:47:56 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 53
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:56 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|----------------|-------------|--------|---------|-------------------------------------|
|feed_comment_id |comment      |user_id |writernm |pic                                  |
|----------------|-------------|--------|---------|-------------------------------------|
|96              |Ïû¨Ïù∏Ïù¥Ìòï ÏûòÏÉùÍ≤ºÏñ¥Ïöî!! |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21 |
|----------------|-------------|--------|---------|-------------------------------------|

[2024-12-20 11:47:56 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 52
 {executed in 0 msec}
[2024-12-20 11:47:56 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0825ecad-6443-40a7-a1e8-57db3ffa156a.jpg |
|-----------------------------------------|

[2024-12-20 11:47:56 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 52
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:47:56 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:47:57 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:57 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:57 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:57 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:57 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:57 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:57 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:57 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:57 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:57 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:57 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:57 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:57 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:57 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:57 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:58 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:58 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:58 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:47:59 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:47:59 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:47:59 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:00 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:00 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2Mjg3NCwiZXhwIjoxNzM0NjY4ODc0LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MTMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.vIb8UUmu5m12_j7k80GPz9sju0k7uYCrAcGVRDXpvMjAO3NWZfRVfyxzA17Rk4Lj
[2024-12-20 11:48:00 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2Mjg3NCwiZXhwIjoxNzM0NjY4ODc0LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MTMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.vIb8UUmu5m12_j7k80GPz9sju0k7uYCrAcGVRDXpvMjAO3NWZfRVfyxzA17Rk4Lj
[2024-12-20 11:48:00 [31mERROR[0;39mhttp-nio-8080-exec-5] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalStateException: Invalid number of parameter names: 2 for constructor public com.green.greengram.feed.model.FeedDeleteReq(long)] with root cause
java.lang.IllegalStateException: Invalid number of parameter names: 2 for constructor public com.green.greengram.feed.model.FeedDeleteReq(long)
	at org.springframework.util.Assert.state(Assert.java:97)
	at org.springframework.beans.BeanUtils.getParameterNames(BeanUtils.java:656)
	at org.springframework.validation.DataBinder.createObject(DataBinder.java:934)
	at org.springframework.validation.DataBinder.construct(DataBinder.java:905)
	at org.springframework.web.bind.ServletRequestDataBinder.construct(ServletRequestDataBinder.java:116)
	at org.springframework.web.servlet.mvc.method.annotation.ServletModelAttributeMethodProcessor.constructAttribute(ServletModelAttributeMethodProcessor.java:157)
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:148)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:224)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:178)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:936)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:48:00 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:00 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:00 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:00 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:00 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:00 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:00 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:00 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:00 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:01 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:01 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:01 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:01 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:01 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:01 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:01 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:01 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:01 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:01 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:01 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:01 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:01 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:01 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2Mjg3NCwiZXhwIjoxNzM0NjY4ODc0LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MTMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.vIb8UUmu5m12_j7k80GPz9sju0k7uYCrAcGVRDXpvMjAO3NWZfRVfyxzA17Rk4Lj
[2024-12-20 11:48:01 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2Mjg3NCwiZXhwIjoxNzM0NjY4ODc0LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MTMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.vIb8UUmu5m12_j7k80GPz9sju0k7uYCrAcGVRDXpvMjAO3NWZfRVfyxzA17Rk4Lj
[2024-12-20 11:48:01 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:01 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:01 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:01 [31mERROR[0;39mhttp-nio-8080-exec-4] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalStateException: Invalid number of parameter names: 2 for constructor public com.green.greengram.feed.model.FeedDeleteReq(long)] with root cause
java.lang.IllegalStateException: Invalid number of parameter names: 2 for constructor public com.green.greengram.feed.model.FeedDeleteReq(long)
	at org.springframework.util.Assert.state(Assert.java:97)
	at org.springframework.beans.BeanUtils.getParameterNames(BeanUtils.java:656)
	at org.springframework.validation.DataBinder.createObject(DataBinder.java:934)
	at org.springframework.validation.DataBinder.construct(DataBinder.java:905)
	at org.springframework.web.bind.ServletRequestDataBinder.construct(ServletRequestDataBinder.java:116)
	at org.springframework.web.servlet.mvc.method.annotation.ServletModelAttributeMethodProcessor.constructAttribute(ServletModelAttributeMethodProcessor.java:157)
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:148)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:224)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:178)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:936)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:48:01 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:01 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:01 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:01 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:01 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:01 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:01 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:01 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:01 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:01 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:01 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:01 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:01 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:01 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:01 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:01 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:01 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:01 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:02 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:02 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2Mjg3NCwiZXhwIjoxNzM0NjY4ODc0LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MTMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.vIb8UUmu5m12_j7k80GPz9sju0k7uYCrAcGVRDXpvMjAO3NWZfRVfyxzA17Rk4Lj
[2024-12-20 11:48:02 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2Mjg3NCwiZXhwIjoxNzM0NjY4ODc0LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MTMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.vIb8UUmu5m12_j7k80GPz9sju0k7uYCrAcGVRDXpvMjAO3NWZfRVfyxzA17Rk4Lj
[2024-12-20 11:48:02 [31mERROR[0;39mhttp-nio-8080-exec-7] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalStateException: Invalid number of parameter names: 2 for constructor public com.green.greengram.feed.model.FeedDeleteReq(long)] with root cause
java.lang.IllegalStateException: Invalid number of parameter names: 2 for constructor public com.green.greengram.feed.model.FeedDeleteReq(long)
	at org.springframework.util.Assert.state(Assert.java:97)
	at org.springframework.beans.BeanUtils.getParameterNames(BeanUtils.java:656)
	at org.springframework.validation.DataBinder.createObject(DataBinder.java:934)
	at org.springframework.validation.DataBinder.construct(DataBinder.java:905)
	at org.springframework.web.bind.ServletRequestDataBinder.construct(ServletRequestDataBinder.java:116)
	at org.springframework.web.servlet.mvc.method.annotation.ServletModelAttributeMethodProcessor.constructAttribute(ServletModelAttributeMethodProcessor.java:157)
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:148)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:224)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:178)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:936)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:48:03 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:03 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2Mjg3NCwiZXhwIjoxNzM0NjY4ODc0LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MTMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.vIb8UUmu5m12_j7k80GPz9sju0k7uYCrAcGVRDXpvMjAO3NWZfRVfyxzA17Rk4Lj
[2024-12-20 11:48:03 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2Mjg3NCwiZXhwIjoxNzM0NjY4ODc0LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MTMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.vIb8UUmu5m12_j7k80GPz9sju0k7uYCrAcGVRDXpvMjAO3NWZfRVfyxzA17Rk4Lj
[2024-12-20 11:48:03 [31mERROR[0;39mhttp-nio-8080-exec-4] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalStateException: Invalid number of parameter names: 2 for constructor public com.green.greengram.feed.model.FeedDeleteReq(long)] with root cause
java.lang.IllegalStateException: Invalid number of parameter names: 2 for constructor public com.green.greengram.feed.model.FeedDeleteReq(long)
	at org.springframework.util.Assert.state(Assert.java:97)
	at org.springframework.beans.BeanUtils.getParameterNames(BeanUtils.java:656)
	at org.springframework.validation.DataBinder.createObject(DataBinder.java:934)
	at org.springframework.validation.DataBinder.construct(DataBinder.java:905)
	at org.springframework.web.bind.ServletRequestDataBinder.construct(ServletRequestDataBinder.java:116)
	at org.springframework.web.servlet.mvc.method.annotation.ServletModelAttributeMethodProcessor.constructAttribute(ServletModelAttributeMethodProcessor.java:157)
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:148)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:224)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:178)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:936)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:48:03 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:03 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2Mjg3NCwiZXhwIjoxNzM0NjY4ODc0LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MTMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.vIb8UUmu5m12_j7k80GPz9sju0k7uYCrAcGVRDXpvMjAO3NWZfRVfyxzA17Rk4Lj
[2024-12-20 11:48:03 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2Mjg3NCwiZXhwIjoxNzM0NjY4ODc0LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MTMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.vIb8UUmu5m12_j7k80GPz9sju0k7uYCrAcGVRDXpvMjAO3NWZfRVfyxzA17Rk4Lj
[2024-12-20 11:48:03 [31mERROR[0;39mhttp-nio-8080-exec-1] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalStateException: Invalid number of parameter names: 2 for constructor public com.green.greengram.feed.model.FeedDeleteReq(long)] with root cause
java.lang.IllegalStateException: Invalid number of parameter names: 2 for constructor public com.green.greengram.feed.model.FeedDeleteReq(long)
	at org.springframework.util.Assert.state(Assert.java:97)
	at org.springframework.beans.BeanUtils.getParameterNames(BeanUtils.java:656)
	at org.springframework.validation.DataBinder.createObject(DataBinder.java:934)
	at org.springframework.validation.DataBinder.construct(DataBinder.java:905)
	at org.springframework.web.bind.ServletRequestDataBinder.construct(ServletRequestDataBinder.java:116)
	at org.springframework.web.servlet.mvc.method.annotation.ServletModelAttributeMethodProcessor.constructAttribute(ServletModelAttributeMethodProcessor.java:157)
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:148)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:224)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:178)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:936)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:48:04 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:04 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2Mjg3NCwiZXhwIjoxNzM0NjY4ODc0LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MTMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.vIb8UUmu5m12_j7k80GPz9sju0k7uYCrAcGVRDXpvMjAO3NWZfRVfyxzA17Rk4Lj
[2024-12-20 11:48:04 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2Mjg3NCwiZXhwIjoxNzM0NjY4ODc0LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MTMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.vIb8UUmu5m12_j7k80GPz9sju0k7uYCrAcGVRDXpvMjAO3NWZfRVfyxzA17Rk4Lj
[2024-12-20 11:48:04 [31mERROR[0;39mhttp-nio-8080-exec-9] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalStateException: Invalid number of parameter names: 2 for constructor public com.green.greengram.feed.model.FeedDeleteReq(long)] with root cause
java.lang.IllegalStateException: Invalid number of parameter names: 2 for constructor public com.green.greengram.feed.model.FeedDeleteReq(long)
	at org.springframework.util.Assert.state(Assert.java:97)
	at org.springframework.beans.BeanUtils.getParameterNames(BeanUtils.java:656)
	at org.springframework.validation.DataBinder.createObject(DataBinder.java:934)
	at org.springframework.validation.DataBinder.construct(DataBinder.java:905)
	at org.springframework.web.bind.ServletRequestDataBinder.construct(ServletRequestDataBinder.java:116)
	at org.springframework.web.servlet.mvc.method.annotation.ServletModelAttributeMethodProcessor.constructAttribute(ServletModelAttributeMethodProcessor.java:157)
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:148)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:224)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:178)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:936)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:48:06 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:06 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2Mjg3NCwiZXhwIjoxNzM0NjY4ODc0LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MTMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.vIb8UUmu5m12_j7k80GPz9sju0k7uYCrAcGVRDXpvMjAO3NWZfRVfyxzA17Rk4Lj
[2024-12-20 11:48:06 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2Mjg3NCwiZXhwIjoxNzM0NjY4ODc0LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MTMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.vIb8UUmu5m12_j7k80GPz9sju0k7uYCrAcGVRDXpvMjAO3NWZfRVfyxzA17Rk4Lj
[2024-12-20 11:48:06 [31mERROR[0;39mhttp-nio-8080-exec-8] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalStateException: Invalid number of parameter names: 2 for constructor public com.green.greengram.feed.model.FeedDeleteReq(long)] with root cause
java.lang.IllegalStateException: Invalid number of parameter names: 2 for constructor public com.green.greengram.feed.model.FeedDeleteReq(long)
	at org.springframework.util.Assert.state(Assert.java:97)
	at org.springframework.beans.BeanUtils.getParameterNames(BeanUtils.java:656)
	at org.springframework.validation.DataBinder.createObject(DataBinder.java:934)
	at org.springframework.validation.DataBinder.construct(DataBinder.java:905)
	at org.springframework.web.bind.ServletRequestDataBinder.construct(ServletRequestDataBinder.java:116)
	at org.springframework.web.servlet.mvc.method.annotation.ServletModelAttributeMethodProcessor.constructAttribute(ServletModelAttributeMethodProcessor.java:157)
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:148)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:224)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:178)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:936)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2Mjg3NCwiZXhwIjoxNzM0NjY4ODc0LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MTMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.vIb8UUmu5m12_j7k80GPz9sju0k7uYCrAcGVRDXpvMjAO3NWZfRVfyxzA17Rk4Lj
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2Mjg3NCwiZXhwIjoxNzM0NjY4ODc0LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MTMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.vIb8UUmu5m12_j7k80GPz9sju0k7uYCrAcGVRDXpvMjAO3NWZfRVfyxzA17Rk4Lj
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2Mjg3NCwiZXhwIjoxNzM0NjY4ODc0LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MTMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.vIb8UUmu5m12_j7k80GPz9sju0k7uYCrAcGVRDXpvMjAO3NWZfRVfyxzA17Rk4Lj
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2Mjg3NCwiZXhwIjoxNzM0NjY4ODc0LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MTMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.vIb8UUmu5m12_j7k80GPz9sju0k7uYCrAcGVRDXpvMjAO3NWZfRVfyxzA17Rk4Lj
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.feed.model.FeedGetReq][0;39m
 page: 1, size: null, profileUserId: 13
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.user.UserController][0;39m
 UserController > getUserInfo > p: UserInfoGetReq(signedUserId=0, profileUserId=13)
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.feed.FeedController][0;39m
 FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=0, profileUserId=13)
[2024-12-20 11:48:09 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
         , IF(nick_name IS NULL, uid, nick_name) AS nickName
         , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
         , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
         , COUNT(DISTINCT F3.feed_id) AS feedCount
         , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
         , MAX(IF(F1.from_user_id = 13, 1, 0))
         + MAX(IF(F2.to_user_id = 13, 2, 0)) AS followState
    FROM user A
        LEFT JOIN user_follow F1
          ON A.user_id = F1.to_user_id
        LEFT JOIN user_follow F2
          ON A.user_id = F2.from_user_id
        LEFT JOIN feed F3
          ON A.user_id = F3.writer_user_id
        LEFT JOIN feed_like F4
          ON F3.feed_id = F4.feed_id
        WHERE A.user_id = 13
 {executed in 0 msec}
[2024-12-20 11:48:09 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT  A.feed_id AS feedId, A.contents, A.location
          , A.created_at AS createdAt
          , B.user_id AS writerUserId
          , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
          , B.pic AS writerPic
          , IF(C.feed_id IS NULL, 0 , 1) AS isLike
     FROM feed A
    INNER JOIN user B
       ON A.writer_user_id = B.user_id
     LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 13

            WHERE A.writer_user_id = 13

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 0 msec}
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|--------|-------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                  |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|13      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21 |2024-12-05 10:58:48 |123      |1        |0         |10        |2               |0           |
|--------|-------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|--------|---------|---------|--------------------|--------|---------|-------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic                                  |islike |
|--------|---------|---------|--------------------|--------|---------|-------------------------------------|-------|
|66      |         |         |2024-12-09 16:45:57 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21 |0      |
|61      |         |         |2024-12-09 16:26:51 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21 |0      |
|60      |         |         |2024-12-09 16:19:37 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21 |0      |
|59      |         |         |2024-12-09 16:19:21 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21 |0      |
|58      |         |         |2024-12-09 16:19:10 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21 |0      |
|57      |„Öã„Öã       |         |2024-12-09 16:07:37 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21 |0      |
|56      |Î™ÖÎ∞ïÏ®©      |         |2024-12-09 16:06:14 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21 |0      |
|55      |Í∑ºÌòúÏ∞°      |         |2024-12-09 16:06:06 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21 |0      |
|53      |Ïû¨Ïù∏Ï®©      |         |2024-12-09 15:56:16 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21 |1      |
|52      |ÏÑùÏó¥Ï®©      |         |2024-12-09 15:45:20 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21 |1      |
|--------|---------|---------|--------------------|--------|---------|-------------------------------------|-------|

[2024-12-20 11:48:09 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 66
 {executed in 1 msec}
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2b6887e5-7070-4f39-a5db-bc4d35bb51fa.gif |
|-----------------------------------------|

[2024-12-20 11:48:09 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 66
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|----------------|-------------|--------|---------|----|
|feed_comment_id |comment      |user_id |writernm |pic |
|----------------|-------------|--------|---------|----|
|99              |ÏàòÏòÅÏïÑ Í¥ÄÎ¶¨ ÏïàÌïòÎÉê?  |17      |ddd      |null|
|98              |Ïó¨ ÌîºÎìú Í∞ú Ï≥ê ÎçîÎüΩÎÑ§ |17      |ddd      |null|
|----------------|-------------|--------|---------|----|

[2024-12-20 11:48:09 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 61
 {executed in 0 msec}
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bb7c519a-0113-4137-ada5-4bfa9df4b5d7.gif |
|-----------------------------------------|

[2024-12-20 11:48:09 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 61
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:48:09 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|282ad40c-d6c6-4183-8781-2cd3a5d80ade.gif |
|-----------------------------------------|

[2024-12-20 11:48:09 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 60
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:48:09 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 59
 {executed in 0 msec}
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|261ecdff-f966-4797-bc07-75a9eb1a5eee.gif |
|-----------------------------------------|

[2024-12-20 11:48:09 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 59
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:48:09 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 58
 {executed in 0 msec}
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|68c097ba-aa57-4002-a3bd-774851007b2a.gif |
|-----------------------------------------|

[2024-12-20 11:48:09 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 58
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:48:09 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 57
 {executed in 0 msec}
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3298dc0e-3231-4773-982a-47e30f2531e5.jpg |
|f5512946-3498-437e-ac4c-28c8a06fc9f0.jpg |
|-----------------------------------------|

[2024-12-20 11:48:09 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 57
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|----------------|---------|--------|---------|-------------------------------------|
|feed_comment_id |comment  |user_id |writernm |pic                                  |
|----------------|---------|--------|---------|-------------------------------------|
|97              |„Ñ∑„Ñ∑;; ÎÖ∏ÏïåÎùº |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743 |
|----------------|---------|--------|---------|-------------------------------------|

[2024-12-20 11:48:09 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 56
 {executed in 1 msec}
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f661e26c-8b44-49d5-a944-cceeea6116a7.jpg |
|-----------------------------------------|

[2024-12-20 11:48:09 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 56
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:48:09 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 55
 {executed in 1 msec}
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dc7ee72b-960a-431b-b021-bdfc625c097b.jpg |
|-----------------------------------------|

[2024-12-20 11:48:09 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 55
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:48:09 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 53
 {executed in 1 msec}
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5991e7d0-5da0-48b0-a8e0-1f79ff9c5b0d.jpg |
|-----------------------------------------|

[2024-12-20 11:48:09 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 53
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|----------------|-------------|--------|---------|-------------------------------------|
|feed_comment_id |comment      |user_id |writernm |pic                                  |
|----------------|-------------|--------|---------|-------------------------------------|
|96              |Ïû¨Ïù∏Ïù¥Ìòï ÏûòÏÉùÍ≤ºÏñ¥Ïöî!! |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21 |
|----------------|-------------|--------|---------|-------------------------------------|

[2024-12-20 11:48:09 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 52
 {executed in 0 msec}
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0825ecad-6443-40a7-a1e8-57db3ffa156a.jpg |
|-----------------------------------------|

[2024-12-20 11:48:09 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 52
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:09 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:10 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:10 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:10 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:12 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:12 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:12 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:12 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:12 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2Mjg3NCwiZXhwIjoxNzM0NjY4ODc0LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MTMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.vIb8UUmu5m12_j7k80GPz9sju0k7uYCrAcGVRDXpvMjAO3NWZfRVfyxzA17Rk4Lj
[2024-12-20 11:48:12 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2Mjg3NCwiZXhwIjoxNzM0NjY4ODc0LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MTMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.vIb8UUmu5m12_j7k80GPz9sju0k7uYCrAcGVRDXpvMjAO3NWZfRVfyxzA17Rk4Lj
[2024-12-20 11:48:12 [31mERROR[0;39mhttp-nio-8080-exec-9] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalStateException: Invalid number of parameter names: 2 for constructor public com.green.greengram.feed.model.FeedDeleteReq(long)] with root cause
java.lang.IllegalStateException: Invalid number of parameter names: 2 for constructor public com.green.greengram.feed.model.FeedDeleteReq(long)
	at org.springframework.util.Assert.state(Assert.java:97)
	at org.springframework.beans.BeanUtils.getParameterNames(BeanUtils.java:656)
	at org.springframework.validation.DataBinder.createObject(DataBinder.java:934)
	at org.springframework.validation.DataBinder.construct(DataBinder.java:905)
	at org.springframework.web.bind.ServletRequestDataBinder.construct(ServletRequestDataBinder.java:116)
	at org.springframework.web.servlet.mvc.method.annotation.ServletModelAttributeMethodProcessor.constructAttribute(ServletModelAttributeMethodProcessor.java:157)
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:148)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:224)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:178)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:936)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:48:12 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:12 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:12 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:12 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:12 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:12 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:12 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:12 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:12 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:12 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:12 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:12 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:12 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:12 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:12 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:12 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:12 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:12 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:12 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:12 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:12 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:12 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:12 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:12 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:14 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:14 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:14 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2Mjg3NCwiZXhwIjoxNzM0NjY4ODc0LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MTMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.vIb8UUmu5m12_j7k80GPz9sju0k7uYCrAcGVRDXpvMjAO3NWZfRVfyxzA17Rk4Lj
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2Mjg3NCwiZXhwIjoxNzM0NjY4ODc0LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MTMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.vIb8UUmu5m12_j7k80GPz9sju0k7uYCrAcGVRDXpvMjAO3NWZfRVfyxzA17Rk4Lj
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.feed.model.FeedGetReq][0;39m
 page: 1, size: null, profileUserId: null
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.feed.FeedController][0;39m
 FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=0, profileUserId=null)
[2024-12-20 11:48:50 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  A.feed_id AS feedId, A.contents, A.location
          , A.created_at AS createdAt
          , B.user_id AS writerUserId
          , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
          , B.pic AS writerPic
          , IF(C.feed_id IS NULL, 0 , 1) AS isLike
     FROM feed A
    INNER JOIN user B
       ON A.writer_user_id = B.user_id
     LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 13

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 1 msec}
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location  |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|
|80      |         |          |2024-12-20 11:46:59 |33      |8888     |null                                     |0      |
|79      |         |          |2024-12-20 11:46:52 |33      |8888     |null                                     |0      |
|78      |         |          |2024-12-20 11:46:40 |33      |8888     |null                                     |0      |
|77      |         |          |2024-12-20 11:46:33 |33      |8888     |null                                     |0      |
|76      |ÌîºÎìúÎÇ¥Ïö©ÌÖåÏä§Ìä∏  |Í∑∏Î¶ºÏª¥Ìì®ÌÑ∞ÏïÑÌä∏ÌïôÏõê |2024-12-19 11:46:59 |5       |1111     |9e2d2e13-79a7-481f-b221-26e228ce8a4d.jpg |0      |
|75      |asdf     |asdf      |2024-12-10 10:55:05 |19      |zxzx     |2f008281-bcf1-4873-812c-20ab707bf4c7     |0      |
|73      |         |          |2024-12-10 10:33:25 |9       |0        |445adb23-d27b-43c2-837a-3e70f0bfae01     |0      |
|72      |         |          |2024-12-10 10:06:53 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|71      |         |          |2024-12-10 10:04:30 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|70      |ÎßåÏÇ≠       |          |2024-12-10 10:04:12 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|68      |aaaaa    |aaaaa     |2024-12-10 09:50:56 |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |0      |
|67      |         |          |2024-12-09 16:52:00 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|66      |         |          |2024-12-09 16:45:57 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|65      |         |          |2024-12-09 16:38:08 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|64      |         |          |2024-12-09 16:38:04 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|63      |         |          |2024-12-09 16:37:59 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|62      |Îãà ÎØ∏Îûò
ÎÇ®Ìé∏  |          |2024-12-09 16:27:39 |17      |ddd      |null                                     |0      |
|61      |         |          |2024-12-09 16:26:51 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|60      |         |          |2024-12-09 16:19:37 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|59      |         |          |2024-12-09 16:19:21 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-20 11:48:50 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 80
 {executed in 0 msec}
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ffacdf87-2f11-439e-89c0-611ad6e7828d.png |
|-----------------------------------------|

[2024-12-20 11:48:50 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 80
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:48:50 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 79
 {executed in 0 msec}
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f5cd589c-229a-4aaa-b362-9d9d8097c2b7.png |
|-----------------------------------------|

[2024-12-20 11:48:50 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 79
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:48:50 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 78
 {executed in 0 msec}
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|591159c2-eca7-4176-8701-001abeec2bb4.png |
|-----------------------------------------|

[2024-12-20 11:48:50 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 78
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:48:50 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 77
 {executed in 0 msec}
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f58fad2e-8a6a-4f42-a870-aecc10e5ea87.png |
|-----------------------------------------|

[2024-12-20 11:48:50 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 77
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:48:50 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 76
 {executed in 0 msec}
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6d1cd1f5-8f13-4d99-9665-4dbab9b47fb7.png |
|fe728007-d85c-4ab7-8577-58a4c81ff176.gif |
|-----------------------------------------|

[2024-12-20 11:48:50 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 76
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:48:50 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 75
 {executed in 1 msec}
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a6fb41e-8434-4c72-8139-1169c075b2e8.png |
|-----------------------------------------|

[2024-12-20 11:48:50 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 75
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|----------------|-----------------|--------|---------|-----------------------------------------|
|feed_comment_id |comment          |user_id |writernm |pic                                      |
|----------------|-----------------|--------|---------|-----------------------------------------|
|106             |„Öá„Ñ¥„Ñª„Ñ¥„Öá„Ñª„Ñ¥„Öá„Ñπ„Ñ¥„Öá„Ñπ„Ñ¥„Öá„Ñª„Ñ¥ |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|105             |„Öá„Ñª„Öá„Ñª„Ñ¥„Öá„Ñª„Ñ¥„Öá„Ñπ„Ñ¥„Öá„Ñπ    |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|----------------|-----------------|--------|---------|-----------------------------------------|

[2024-12-20 11:48:50 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 73
 {executed in 0 msec}
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b53d82b3-0379-49c9-9c85-cb9c403c6523.jpg |
|-----------------------------------------|

[2024-12-20 11:48:50 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 73
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|104             |ÏåâÍ≤åÏù¥ÎÑ§    |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|103             |Í≤åÏù¥Í≤åÏù¥Ïïº   |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|102             |‚ô°       |9       |0        |445adb23-d27b-43c2-837a-3e70f0bfae01     |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-20 11:48:50 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 72
 {executed in 0 msec}
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|74f8b9ea-6e30-48e1-983a-3d09b7dbabea.gif |
|-----------------------------------------|

[2024-12-20 11:48:50 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 72
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:48:50 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 71
 {executed in 0 msec}
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2d1c8d65-5c08-4f78-96df-1fb6349d58d0.gif |
|-----------------------------------------|

[2024-12-20 11:48:50 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 71
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:48:50 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 70
 {executed in 0 msec}
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|87f5ba66-f8e4-41ca-a7ec-1d394b7ae5f7.jpg |
|-----------------------------------------|

[2024-12-20 11:48:50 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 70
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|101             |Î≥¥Ïó¨Ï§ò     |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-20 11:48:50 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|62d4ef6f-50e4-406f-ae1e-d1f64060366a.jpg |
|-----------------------------------------|

[2024-12-20 11:48:50 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 68
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:48:50 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5e5df70e-01d4-4b33-9e87-00e6a716008d.gif |
|-----------------------------------------|

[2024-12-20 11:48:50 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 67
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|----------------|----------|--------|---------|----|
|feed_comment_id |comment   |user_id |writernm |pic |
|----------------|----------|--------|---------|----|
|100             |Í∞úÏ∂î Î∞ïÍ≥† Í∞ëÎãàÎã§ |17      |ddd      |null|
|----------------|----------|--------|---------|----|

[2024-12-20 11:48:50 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 66
 {executed in 0 msec}
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2b6887e5-7070-4f39-a5db-bc4d35bb51fa.gif |
|-----------------------------------------|

[2024-12-20 11:48:50 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 66
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|----------------|-------------|--------|---------|----|
|feed_comment_id |comment      |user_id |writernm |pic |
|----------------|-------------|--------|---------|----|
|99              |ÏàòÏòÅÏïÑ Í¥ÄÎ¶¨ ÏïàÌïòÎÉê?  |17      |ddd      |null|
|98              |Ïó¨ ÌîºÎìú Í∞ú Ï≥ê ÎçîÎüΩÎÑ§ |17      |ddd      |null|
|----------------|-------------|--------|---------|----|

[2024-12-20 11:48:50 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 65
 {executed in 1 msec}
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0b2c055a-2426-4dbc-8f83-403ecd3fa464.gif |
|-----------------------------------------|

[2024-12-20 11:48:50 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 65
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:48:50 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 64
 {executed in 1 msec}
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d252f5fe-6aa1-4212-b558-caedfb9d59c5.gif |
|-----------------------------------------|

[2024-12-20 11:48:50 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 64
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:48:50 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 63
 {executed in 0 msec}
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|86cea73b-80b4-4501-aaeb-4db5007ded5f.gif |
|-----------------------------------------|

[2024-12-20 11:48:50 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 63
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:48:50 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 62
 {executed in 0 msec}
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|943ec3db-6b2f-4d8a-a1d9-cdfa7b2fe921.jpeg |
|------------------------------------------|

[2024-12-20 11:48:50 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 62
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:48:50 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 61
 {executed in 0 msec}
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bb7c519a-0113-4137-ada5-4bfa9df4b5d7.gif |
|-----------------------------------------|

[2024-12-20 11:48:50 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 61
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:48:50 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|282ad40c-d6c6-4183-8781-2cd3a5d80ade.gif |
|-----------------------------------------|

[2024-12-20 11:48:50 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 60
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:48:50 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 59
 {executed in 0 msec}
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|261ecdff-f966-4797-bc07-75a9eb1a5eee.gif |
|-----------------------------------------|

[2024-12-20 11:48:50 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 59
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:50 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:51 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:51 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:51 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:51 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:51 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:51 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:51 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:51 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:51 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:51 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:51 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:51 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:51 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:51 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:51 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:51 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:51 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:51 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:51 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:51 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:51 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:52 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:52 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:52 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:52 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:52 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:52 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:53 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:53 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:53 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:53 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:53 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:53 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:54 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:54 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:54 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:56 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:56 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2Mjg3NCwiZXhwIjoxNzM0NjY4ODc0LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MTMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.vIb8UUmu5m12_j7k80GPz9sju0k7uYCrAcGVRDXpvMjAO3NWZfRVfyxzA17Rk4Lj
[2024-12-20 11:48:56 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2Mjg3NCwiZXhwIjoxNzM0NjY4ODc0LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MTMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.vIb8UUmu5m12_j7k80GPz9sju0k7uYCrAcGVRDXpvMjAO3NWZfRVfyxzA17Rk4Lj
[2024-12-20 11:48:56 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id AS userId,
        IFNULL(nick_name,uid) AS nickName, pic, upw
        FROM user
        WHERE uid = '8888'
 {executed in 0 msec}
[2024-12-20 11:48:56 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|--------|---------|----|-------------------------------------------------------------|
|user_id |nickname |pic |upw                                                          |
|--------|---------|----|-------------------------------------------------------------|
|33      |8888     |null|$2a$10$ytZicVJixHb/lrsJMh0N4eqw18mXgmM.fuOhQgTINyJpmnQAnfNQW |
|--------|---------|----|-------------------------------------------------------------|

[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjkzNywiZXhwIjoxNzM0NjY4OTM3LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.7KwKnBsi8I9vwUwWMrwYO5Ozit7dMEPG9G1IaQhk0w8DLVAoUwF9RWJX1B6iIkGh
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjkzNywiZXhwIjoxNzM0NjY4OTM3LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.7KwKnBsi8I9vwUwWMrwYO5Ozit7dMEPG9G1IaQhk0w8DLVAoUwF9RWJX1B6iIkGh
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.feed.model.FeedGetReq][0;39m
 page: 1, size: null, profileUserId: null
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.feed.FeedController][0;39m
 FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=0, profileUserId=null)
[2024-12-20 11:48:57 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  A.feed_id AS feedId, A.contents, A.location
          , A.created_at AS createdAt
          , B.user_id AS writerUserId
          , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
          , B.pic AS writerPic
          , IF(C.feed_id IS NULL, 0 , 1) AS isLike
     FROM feed A
    INNER JOIN user B
       ON A.writer_user_id = B.user_id
     LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 33

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 1 msec}
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location  |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|
|80      |         |          |2024-12-20 11:46:59 |33      |8888     |null                                     |0      |
|79      |         |          |2024-12-20 11:46:52 |33      |8888     |null                                     |0      |
|78      |         |          |2024-12-20 11:46:40 |33      |8888     |null                                     |0      |
|77      |         |          |2024-12-20 11:46:33 |33      |8888     |null                                     |0      |
|76      |ÌîºÎìúÎÇ¥Ïö©ÌÖåÏä§Ìä∏  |Í∑∏Î¶ºÏª¥Ìì®ÌÑ∞ÏïÑÌä∏ÌïôÏõê |2024-12-19 11:46:59 |5       |1111     |9e2d2e13-79a7-481f-b221-26e228ce8a4d.jpg |0      |
|75      |asdf     |asdf      |2024-12-10 10:55:05 |19      |zxzx     |2f008281-bcf1-4873-812c-20ab707bf4c7     |0      |
|73      |         |          |2024-12-10 10:33:25 |9       |0        |445adb23-d27b-43c2-837a-3e70f0bfae01     |0      |
|72      |         |          |2024-12-10 10:06:53 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|71      |         |          |2024-12-10 10:04:30 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|70      |ÎßåÏÇ≠       |          |2024-12-10 10:04:12 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|68      |aaaaa    |aaaaa     |2024-12-10 09:50:56 |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |0      |
|67      |         |          |2024-12-09 16:52:00 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|66      |         |          |2024-12-09 16:45:57 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|65      |         |          |2024-12-09 16:38:08 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|64      |         |          |2024-12-09 16:38:04 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|63      |         |          |2024-12-09 16:37:59 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|62      |Îãà ÎØ∏Îûò
ÎÇ®Ìé∏  |          |2024-12-09 16:27:39 |17      |ddd      |null                                     |0      |
|61      |         |          |2024-12-09 16:26:51 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|60      |         |          |2024-12-09 16:19:37 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|59      |         |          |2024-12-09 16:19:21 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-20 11:48:57 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 80
 {executed in 0 msec}
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ffacdf87-2f11-439e-89c0-611ad6e7828d.png |
|-----------------------------------------|

[2024-12-20 11:48:57 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 80
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:48:57 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 79
 {executed in 0 msec}
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f5cd589c-229a-4aaa-b362-9d9d8097c2b7.png |
|-----------------------------------------|

[2024-12-20 11:48:57 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 79
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:48:57 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 78
 {executed in 0 msec}
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|591159c2-eca7-4176-8701-001abeec2bb4.png |
|-----------------------------------------|

[2024-12-20 11:48:57 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 78
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:48:57 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 77
 {executed in 0 msec}
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f58fad2e-8a6a-4f42-a870-aecc10e5ea87.png |
|-----------------------------------------|

[2024-12-20 11:48:57 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 77
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:48:57 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 76
 {executed in 0 msec}
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6d1cd1f5-8f13-4d99-9665-4dbab9b47fb7.png |
|fe728007-d85c-4ab7-8577-58a4c81ff176.gif |
|-----------------------------------------|

[2024-12-20 11:48:57 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 76
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:48:57 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 75
 {executed in 0 msec}
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a6fb41e-8434-4c72-8139-1169c075b2e8.png |
|-----------------------------------------|

[2024-12-20 11:48:57 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 75
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|-----------------|--------|---------|-----------------------------------------|
|feed_comment_id |comment          |user_id |writernm |pic                                      |
|----------------|-----------------|--------|---------|-----------------------------------------|
|106             |„Öá„Ñ¥„Ñª„Ñ¥„Öá„Ñª„Ñ¥„Öá„Ñπ„Ñ¥„Öá„Ñπ„Ñ¥„Öá„Ñª„Ñ¥ |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|105             |„Öá„Ñª„Öá„Ñª„Ñ¥„Öá„Ñª„Ñ¥„Öá„Ñπ„Ñ¥„Öá„Ñπ    |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|----------------|-----------------|--------|---------|-----------------------------------------|

[2024-12-20 11:48:57 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 73
 {executed in 0 msec}
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b53d82b3-0379-49c9-9c85-cb9c403c6523.jpg |
|-----------------------------------------|

[2024-12-20 11:48:57 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 73
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|104             |ÏåâÍ≤åÏù¥ÎÑ§    |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|103             |Í≤åÏù¥Í≤åÏù¥Ïïº   |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|102             |‚ô°       |9       |0        |445adb23-d27b-43c2-837a-3e70f0bfae01     |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-20 11:48:57 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 72
 {executed in 1 msec}
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|74f8b9ea-6e30-48e1-983a-3d09b7dbabea.gif |
|-----------------------------------------|

[2024-12-20 11:48:57 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 72
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:48:57 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 71
 {executed in 1 msec}
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2d1c8d65-5c08-4f78-96df-1fb6349d58d0.gif |
|-----------------------------------------|

[2024-12-20 11:48:57 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 71
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:48:57 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 70
 {executed in 0 msec}
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|87f5ba66-f8e4-41ca-a7ec-1d394b7ae5f7.jpg |
|-----------------------------------------|

[2024-12-20 11:48:57 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 70
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|101             |Î≥¥Ïó¨Ï§ò     |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-20 11:48:57 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|62d4ef6f-50e4-406f-ae1e-d1f64060366a.jpg |
|-----------------------------------------|

[2024-12-20 11:48:57 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 68
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:48:57 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5e5df70e-01d4-4b33-9e87-00e6a716008d.gif |
|-----------------------------------------|

[2024-12-20 11:48:57 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 67
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|----------|--------|---------|----|
|feed_comment_id |comment   |user_id |writernm |pic |
|----------------|----------|--------|---------|----|
|100             |Í∞úÏ∂î Î∞ïÍ≥† Í∞ëÎãàÎã§ |17      |ddd      |null|
|----------------|----------|--------|---------|----|

[2024-12-20 11:48:57 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 66
 {executed in 0 msec}
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2b6887e5-7070-4f39-a5db-bc4d35bb51fa.gif |
|-----------------------------------------|

[2024-12-20 11:48:57 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 66
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|-------------|--------|---------|----|
|feed_comment_id |comment      |user_id |writernm |pic |
|----------------|-------------|--------|---------|----|
|99              |ÏàòÏòÅÏïÑ Í¥ÄÎ¶¨ ÏïàÌïòÎÉê?  |17      |ddd      |null|
|98              |Ïó¨ ÌîºÎìú Í∞ú Ï≥ê ÎçîÎüΩÎÑ§ |17      |ddd      |null|
|----------------|-------------|--------|---------|----|

[2024-12-20 11:48:57 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 65
 {executed in 0 msec}
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0b2c055a-2426-4dbc-8f83-403ecd3fa464.gif |
|-----------------------------------------|

[2024-12-20 11:48:57 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 65
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:48:57 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 64
 {executed in 0 msec}
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d252f5fe-6aa1-4212-b558-caedfb9d59c5.gif |
|-----------------------------------------|

[2024-12-20 11:48:57 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 64
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:48:57 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 63
 {executed in 0 msec}
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|86cea73b-80b4-4501-aaeb-4db5007ded5f.gif |
|-----------------------------------------|

[2024-12-20 11:48:57 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 63
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:48:57 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 62
 {executed in 0 msec}
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|943ec3db-6b2f-4d8a-a1d9-cdfa7b2fe921.jpeg |
|------------------------------------------|

[2024-12-20 11:48:57 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 62
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:48:57 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 61
 {executed in 0 msec}
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bb7c519a-0113-4137-ada5-4bfa9df4b5d7.gif |
|-----------------------------------------|

[2024-12-20 11:48:57 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 61
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:48:57 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|282ad40c-d6c6-4183-8781-2cd3a5d80ade.gif |
|-----------------------------------------|

[2024-12-20 11:48:57 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 60
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:48:57 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 59
 {executed in 0 msec}
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|261ecdff-f966-4797-bc07-75a9eb1a5eee.gif |
|-----------------------------------------|

[2024-12-20 11:48:57 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 59
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:57 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:58 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:58 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:58 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:58 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:58 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:58 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:58 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:58 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:58 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:59 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:59 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:59 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:59 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:59 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:59 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:59 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:59 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:59 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:48:59 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:48:59 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:48:59 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:00 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:00 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjkzNywiZXhwIjoxNzM0NjY4OTM3LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.7KwKnBsi8I9vwUwWMrwYO5Ozit7dMEPG9G1IaQhk0w8DLVAoUwF9RWJX1B6iIkGh
[2024-12-20 11:49:00 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjkzNywiZXhwIjoxNzM0NjY4OTM3LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.7KwKnBsi8I9vwUwWMrwYO5Ozit7dMEPG9G1IaQhk0w8DLVAoUwF9RWJX1B6iIkGh
[2024-12-20 11:49:00 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.user.UserController][0;39m
 UserController > getUserInfo > p: UserInfoGetReq(signedUserId=0, profileUserId=33)
[2024-12-20 11:49:00 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
         , IF(nick_name IS NULL, uid, nick_name) AS nickName
         , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
         , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
         , COUNT(DISTINCT F3.feed_id) AS feedCount
         , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
         , MAX(IF(F1.from_user_id = 33, 1, 0))
         + MAX(IF(F2.to_user_id = 33, 2, 0)) AS followState
    FROM user A
        LEFT JOIN user_follow F1
          ON A.user_id = F1.to_user_id
        LEFT JOIN user_follow F2
          ON A.user_id = F2.from_user_id
        LEFT JOIN feed F3
          ON A.user_id = F3.writer_user_id
        LEFT JOIN feed_like F4
          ON F3.feed_id = F4.feed_id
        WHERE A.user_id = 33
 {executed in 1 msec}
[2024-12-20 11:49:00 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|--------|----|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|----|--------------------|---------|---------|----------|----------|----------------|------------|
|33      |null|2024-12-20 11:45:27 |8888     |0        |0         |4         |0               |0           |
|--------|----|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-20 11:49:01 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:01 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjkzNywiZXhwIjoxNzM0NjY4OTM3LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.7KwKnBsi8I9vwUwWMrwYO5Ozit7dMEPG9G1IaQhk0w8DLVAoUwF9RWJX1B6iIkGh
[2024-12-20 11:49:01 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjkzNywiZXhwIjoxNzM0NjY4OTM3LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.7KwKnBsi8I9vwUwWMrwYO5Ozit7dMEPG9G1IaQhk0w8DLVAoUwF9RWJX1B6iIkGh
[2024-12-20 11:49:01 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.feed.model.FeedGetReq][0;39m
 page: 1, size: null, profileUserId: 33
[2024-12-20 11:49:01 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.feed.FeedController][0;39m
 FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=0, profileUserId=33)
[2024-12-20 11:49:01 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  A.feed_id AS feedId, A.contents, A.location
          , A.created_at AS createdAt
          , B.user_id AS writerUserId
          , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
          , B.pic AS writerPic
          , IF(C.feed_id IS NULL, 0 , 1) AS isLike
     FROM feed A
    INNER JOIN user B
       ON A.writer_user_id = B.user_id
     LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 33

            WHERE A.writer_user_id = 33

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 1 msec}
[2024-12-20 11:49:01 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|--------|---------|---------|--------------------|--------|---------|----|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic |islike |
|--------|---------|---------|--------------------|--------|---------|----|-------|
|80      |         |         |2024-12-20 11:46:59 |33      |8888     |null|0      |
|79      |         |         |2024-12-20 11:46:52 |33      |8888     |null|0      |
|78      |         |         |2024-12-20 11:46:40 |33      |8888     |null|0      |
|77      |         |         |2024-12-20 11:46:33 |33      |8888     |null|0      |
|--------|---------|---------|--------------------|--------|---------|----|-------|

[2024-12-20 11:49:01 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 80
 {executed in 0 msec}
[2024-12-20 11:49:01 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ffacdf87-2f11-439e-89c0-611ad6e7828d.png |
|-----------------------------------------|

[2024-12-20 11:49:01 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 80
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:01 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:01 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 79
 {executed in 0 msec}
[2024-12-20 11:49:01 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f5cd589c-229a-4aaa-b362-9d9d8097c2b7.png |
|-----------------------------------------|

[2024-12-20 11:49:01 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 79
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:01 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:01 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 78
 {executed in 0 msec}
[2024-12-20 11:49:01 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|591159c2-eca7-4176-8701-001abeec2bb4.png |
|-----------------------------------------|

[2024-12-20 11:49:01 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 78
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:01 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:01 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 77
 {executed in 0 msec}
[2024-12-20 11:49:01 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f58fad2e-8a6a-4f42-a870-aecc10e5ea87.png |
|-----------------------------------------|

[2024-12-20 11:49:01 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 77
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:49:01 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:01 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:01 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:01 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:01 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:01 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:01 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:01 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:01 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:01 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:01 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:01 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:01 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:01 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:01 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:01 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:02 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:02 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:02 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:02 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:02 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:02 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:02 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:02 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:02 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:02 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:02 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:02 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:03 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:03 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjkzNywiZXhwIjoxNzM0NjY4OTM3LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.7KwKnBsi8I9vwUwWMrwYO5Ozit7dMEPG9G1IaQhk0w8DLVAoUwF9RWJX1B6iIkGh
[2024-12-20 11:49:03 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjkzNywiZXhwIjoxNzM0NjY4OTM3LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.7KwKnBsi8I9vwUwWMrwYO5Ozit7dMEPG9G1IaQhk0w8DLVAoUwF9RWJX1B6iIkGh
[2024-12-20 11:49:03 [31mERROR[0;39mhttp-nio-8080-exec-2] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]][0;39m
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalStateException: Invalid number of parameter names: 2 for constructor public com.green.greengram.feed.model.FeedDeleteReq(long)] with root cause
java.lang.IllegalStateException: Invalid number of parameter names: 2 for constructor public com.green.greengram.feed.model.FeedDeleteReq(long)
	at org.springframework.util.Assert.state(Assert.java:97)
	at org.springframework.beans.BeanUtils.getParameterNames(BeanUtils.java:656)
	at org.springframework.validation.DataBinder.createObject(DataBinder.java:934)
	at org.springframework.validation.DataBinder.construct(DataBinder.java:905)
	at org.springframework.web.bind.ServletRequestDataBinder.construct(ServletRequestDataBinder.java:116)
	at org.springframework.web.servlet.mvc.method.annotation.ServletModelAttributeMethodProcessor.constructAttribute(ServletModelAttributeMethodProcessor.java:157)
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:148)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:224)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:178)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:936)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.green.greengram.config.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjkzNywiZXhwIjoxNzM0NjY4OTM3LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.7KwKnBsi8I9vwUwWMrwYO5Ozit7dMEPG9G1IaQhk0w8DLVAoUwF9RWJX1B6iIkGh
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjkzNywiZXhwIjoxNzM0NjY4OTM3LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.7KwKnBsi8I9vwUwWMrwYO5Ozit7dMEPG9G1IaQhk0w8DLVAoUwF9RWJX1B6iIkGh
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.feed.model.FeedGetReq][0;39m
 page: 1, size: null, profileUserId: null
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.feed.FeedController][0;39m
 FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=0, profileUserId=null)
[2024-12-20 11:49:05 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  A.feed_id AS feedId, A.contents, A.location
          , A.created_at AS createdAt
          , B.user_id AS writerUserId
          , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
          , B.pic AS writerPic
          , IF(C.feed_id IS NULL, 0 , 1) AS isLike
     FROM feed A
    INNER JOIN user B
       ON A.writer_user_id = B.user_id
     LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 33

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 2 msec}
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location  |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|
|80      |         |          |2024-12-20 11:46:59 |33      |8888     |null                                     |0      |
|79      |         |          |2024-12-20 11:46:52 |33      |8888     |null                                     |0      |
|78      |         |          |2024-12-20 11:46:40 |33      |8888     |null                                     |0      |
|77      |         |          |2024-12-20 11:46:33 |33      |8888     |null                                     |0      |
|76      |ÌîºÎìúÎÇ¥Ïö©ÌÖåÏä§Ìä∏  |Í∑∏Î¶ºÏª¥Ìì®ÌÑ∞ÏïÑÌä∏ÌïôÏõê |2024-12-19 11:46:59 |5       |1111     |9e2d2e13-79a7-481f-b221-26e228ce8a4d.jpg |0      |
|75      |asdf     |asdf      |2024-12-10 10:55:05 |19      |zxzx     |2f008281-bcf1-4873-812c-20ab707bf4c7     |0      |
|73      |         |          |2024-12-10 10:33:25 |9       |0        |445adb23-d27b-43c2-837a-3e70f0bfae01     |0      |
|72      |         |          |2024-12-10 10:06:53 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|71      |         |          |2024-12-10 10:04:30 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|70      |ÎßåÏÇ≠       |          |2024-12-10 10:04:12 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|68      |aaaaa    |aaaaa     |2024-12-10 09:50:56 |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |0      |
|67      |         |          |2024-12-09 16:52:00 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|66      |         |          |2024-12-09 16:45:57 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|65      |         |          |2024-12-09 16:38:08 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|64      |         |          |2024-12-09 16:38:04 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|63      |         |          |2024-12-09 16:37:59 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|62      |Îãà ÎØ∏Îûò
ÎÇ®Ìé∏  |          |2024-12-09 16:27:39 |17      |ddd      |null                                     |0      |
|61      |         |          |2024-12-09 16:26:51 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|60      |         |          |2024-12-09 16:19:37 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|59      |         |          |2024-12-09 16:19:21 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-20 11:49:05 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 80
 {executed in 1 msec}
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ffacdf87-2f11-439e-89c0-611ad6e7828d.png |
|-----------------------------------------|

[2024-12-20 11:49:05 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 80
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:05 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 79
 {executed in 0 msec}
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f5cd589c-229a-4aaa-b362-9d9d8097c2b7.png |
|-----------------------------------------|

[2024-12-20 11:49:05 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 79
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:05 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 78
 {executed in 0 msec}
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|591159c2-eca7-4176-8701-001abeec2bb4.png |
|-----------------------------------------|

[2024-12-20 11:49:05 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 78
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:05 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 77
 {executed in 1 msec}
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f58fad2e-8a6a-4f42-a870-aecc10e5ea87.png |
|-----------------------------------------|

[2024-12-20 11:49:05 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 77
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:05 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 76
 {executed in 0 msec}
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6d1cd1f5-8f13-4d99-9665-4dbab9b47fb7.png |
|fe728007-d85c-4ab7-8577-58a4c81ff176.gif |
|-----------------------------------------|

[2024-12-20 11:49:05 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 76
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:05 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 75
 {executed in 1 msec}
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a6fb41e-8434-4c72-8139-1169c075b2e8.png |
|-----------------------------------------|

[2024-12-20 11:49:05 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 75
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------------|-----------------|--------|---------|-----------------------------------------|
|feed_comment_id |comment          |user_id |writernm |pic                                      |
|----------------|-----------------|--------|---------|-----------------------------------------|
|106             |„Öá„Ñ¥„Ñª„Ñ¥„Öá„Ñª„Ñ¥„Öá„Ñπ„Ñ¥„Öá„Ñπ„Ñ¥„Öá„Ñª„Ñ¥ |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|105             |„Öá„Ñª„Öá„Ñª„Ñ¥„Öá„Ñª„Ñ¥„Öá„Ñπ„Ñ¥„Öá„Ñπ    |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|----------------|-----------------|--------|---------|-----------------------------------------|

[2024-12-20 11:49:05 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 73
 {executed in 1 msec}
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b53d82b3-0379-49c9-9c85-cb9c403c6523.jpg |
|-----------------------------------------|

[2024-12-20 11:49:05 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 73
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|104             |ÏåâÍ≤åÏù¥ÎÑ§    |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|103             |Í≤åÏù¥Í≤åÏù¥Ïïº   |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|102             |‚ô°       |9       |0        |445adb23-d27b-43c2-837a-3e70f0bfae01     |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-20 11:49:05 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 72
 {executed in 0 msec}
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|74f8b9ea-6e30-48e1-983a-3d09b7dbabea.gif |
|-----------------------------------------|

[2024-12-20 11:49:05 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 72
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:05 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 71
 {executed in 0 msec}
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2d1c8d65-5c08-4f78-96df-1fb6349d58d0.gif |
|-----------------------------------------|

[2024-12-20 11:49:05 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 71
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:05 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 70
 {executed in 0 msec}
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|87f5ba66-f8e4-41ca-a7ec-1d394b7ae5f7.jpg |
|-----------------------------------------|

[2024-12-20 11:49:05 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 70
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|101             |Î≥¥Ïó¨Ï§ò     |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-20 11:49:05 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|62d4ef6f-50e4-406f-ae1e-d1f64060366a.jpg |
|-----------------------------------------|

[2024-12-20 11:49:05 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 68
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:05 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5e5df70e-01d4-4b33-9e87-00e6a716008d.gif |
|-----------------------------------------|

[2024-12-20 11:49:05 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 67
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------------|----------|--------|---------|----|
|feed_comment_id |comment   |user_id |writernm |pic |
|----------------|----------|--------|---------|----|
|100             |Í∞úÏ∂î Î∞ïÍ≥† Í∞ëÎãàÎã§ |17      |ddd      |null|
|----------------|----------|--------|---------|----|

[2024-12-20 11:49:05 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 66
 {executed in 0 msec}
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2b6887e5-7070-4f39-a5db-bc4d35bb51fa.gif |
|-----------------------------------------|

[2024-12-20 11:49:05 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 66
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------------|-------------|--------|---------|----|
|feed_comment_id |comment      |user_id |writernm |pic |
|----------------|-------------|--------|---------|----|
|99              |ÏàòÏòÅÏïÑ Í¥ÄÎ¶¨ ÏïàÌïòÎÉê?  |17      |ddd      |null|
|98              |Ïó¨ ÌîºÎìú Í∞ú Ï≥ê ÎçîÎüΩÎÑ§ |17      |ddd      |null|
|----------------|-------------|--------|---------|----|

[2024-12-20 11:49:05 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 65
 {executed in 0 msec}
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0b2c055a-2426-4dbc-8f83-403ecd3fa464.gif |
|-----------------------------------------|

[2024-12-20 11:49:05 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 65
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:05 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 64
 {executed in 1 msec}
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d252f5fe-6aa1-4212-b558-caedfb9d59c5.gif |
|-----------------------------------------|

[2024-12-20 11:49:05 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 64
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:05 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 63
 {executed in 0 msec}
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|86cea73b-80b4-4501-aaeb-4db5007ded5f.gif |
|-----------------------------------------|

[2024-12-20 11:49:05 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 63
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:05 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 62
 {executed in 0 msec}
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|943ec3db-6b2f-4d8a-a1d9-cdfa7b2fe921.jpeg |
|------------------------------------------|

[2024-12-20 11:49:05 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 62
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:05 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 61
 {executed in 0 msec}
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bb7c519a-0113-4137-ada5-4bfa9df4b5d7.gif |
|-----------------------------------------|

[2024-12-20 11:49:05 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 61
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:05 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|282ad40c-d6c6-4183-8781-2cd3a5d80ade.gif |
|-----------------------------------------|

[2024-12-20 11:49:05 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 60
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:05 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 59
 {executed in 1 msec}
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|261ecdff-f966-4797-bc07-75a9eb1a5eee.gif |
|-----------------------------------------|

[2024-12-20 11:49:05 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 59
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:05 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:07 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:07 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:07 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:07 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:07 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:07 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:07 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:07 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:07 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:07 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:07 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:07 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:07 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:07 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:07 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:07 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:07 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:07 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:07 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:07 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:07 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:08 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:08 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:08 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:08 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:08 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:08 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:09 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:09 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:09 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:09 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:09 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:09 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjkzNywiZXhwIjoxNzM0NjY4OTM3LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.7KwKnBsi8I9vwUwWMrwYO5Ozit7dMEPG9G1IaQhk0w8DLVAoUwF9RWJX1B6iIkGh
[2024-12-20 11:49:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjkzNywiZXhwIjoxNzM0NjY4OTM3LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.7KwKnBsi8I9vwUwWMrwYO5Ozit7dMEPG9G1IaQhk0w8DLVAoUwF9RWJX1B6iIkGh
[2024-12-20 11:49:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.feed.like.FeedLikeController][0;39m
 FeedLikeController > feedLikeToggle > p: com.green.greengram.feed.like.model.FeedLikeReq@2e773167
[2024-12-20 11:49:11 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_like
        WHERE feed_id = 79 AND
              user_id = 33
 {executed in 0 msec}
[2024-12-20 11:49:11 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_like
        SET feed_id = 79,
        user_id = 33
 {executed in 2 msec}
[2024-12-20 11:49:16 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:16 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjkzNywiZXhwIjoxNzM0NjY4OTM3LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.7KwKnBsi8I9vwUwWMrwYO5Ozit7dMEPG9G1IaQhk0w8DLVAoUwF9RWJX1B6iIkGh
[2024-12-20 11:49:16 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjkzNywiZXhwIjoxNzM0NjY4OTM3LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.7KwKnBsi8I9vwUwWMrwYO5Ozit7dMEPG9G1IaQhk0w8DLVAoUwF9RWJX1B6iIkGh
[2024-12-20 11:49:16 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. INSERT INTO feed_comment
        SET `feed_id` = 79,
        `user_id` = 33,
        `comment` = 'ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ'
 {executed in 2 msec}
[2024-12-20 11:49:16 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
2. getGeneratedKeys on query: INSERT INTO feed_comment
        SET `feed_id` = 79,
        `user_id` = 33,
        `comment` = 'ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ'
 {executed in 0 msec}
[2024-12-20 11:49:16 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[jdbc.resultsettable][0;39m
 
|----------|
|insert_id |
|----------|
|107       |
|----------|

[2024-12-20 11:49:16 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:16 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:16 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:17 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:17 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjkzNywiZXhwIjoxNzM0NjY4OTM3LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.7KwKnBsi8I9vwUwWMrwYO5Ozit7dMEPG9G1IaQhk0w8DLVAoUwF9RWJX1B6iIkGh
[2024-12-20 11:49:17 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjkzNywiZXhwIjoxNzM0NjY4OTM3LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.7KwKnBsi8I9vwUwWMrwYO5Ozit7dMEPG9G1IaQhk0w8DLVAoUwF9RWJX1B6iIkGh
[2024-12-20 11:49:17 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comment
        SET `feed_id` = 79,
        `user_id` = 33,
        `comment` = 'Îπ°ÌÜµÏïÑ'
 {executed in 3 msec}
[2024-12-20 11:49:17 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comment
        SET `feed_id` = 79,
        `user_id` = 33,
        `comment` = 'Îπ°ÌÜµÏïÑ'
 {executed in 0 msec}
[2024-12-20 11:49:17 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|----------|
|insert_id |
|----------|
|108       |
|----------|

[2024-12-20 11:49:17 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:17 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:17 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:20 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:20 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:20 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:20 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:20 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:20 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:20 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:20 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:20 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjczNiwiZXhwIjoxNzM0NjY4NzM2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.hfEP02CAnoMy9EUQv_rAxDrbWnJeS6Wzs6HVOJnPkxOlizBpsnN8_Ra89WGdUlRN
[2024-12-20 11:49:20 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjczNiwiZXhwIjoxNzM0NjY4NzM2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.hfEP02CAnoMy9EUQv_rAxDrbWnJeS6Wzs6HVOJnPkxOlizBpsnN8_Ra89WGdUlRN
[2024-12-20 11:49:20 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjczNiwiZXhwIjoxNzM0NjY4NzM2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.hfEP02CAnoMy9EUQv_rAxDrbWnJeS6Wzs6HVOJnPkxOlizBpsnN8_Ra89WGdUlRN
[2024-12-20 11:49:20 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjczNiwiZXhwIjoxNzM0NjY4NzM2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.hfEP02CAnoMy9EUQv_rAxDrbWnJeS6Wzs6HVOJnPkxOlizBpsnN8_Ra89WGdUlRN
[2024-12-20 11:49:20 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.user.UserController][0;39m
 UserController > getUserInfo > p: UserInfoGetReq(signedUserId=0, profileUserId=33)
[2024-12-20 11:49:20 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.feed.model.FeedGetReq][0;39m
 page: 1, size: null, profileUserId: 33
[2024-12-20 11:49:20 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.feed.FeedController][0;39m
 FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=0, profileUserId=33)
[2024-12-20 11:49:20 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT  A.feed_id AS feedId, A.contents, A.location
          , A.created_at AS createdAt
          , B.user_id AS writerUserId
          , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
          , B.pic AS writerPic
          , IF(C.feed_id IS NULL, 0 , 1) AS isLike
     FROM feed A
    INNER JOIN user B
       ON A.writer_user_id = B.user_id
     LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 33

            WHERE A.writer_user_id = 33

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 0 msec}
[2024-12-20 11:49:20 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
         , IF(nick_name IS NULL, uid, nick_name) AS nickName
         , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
         , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
         , COUNT(DISTINCT F3.feed_id) AS feedCount
         , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
         , MAX(IF(F1.from_user_id = 33, 1, 0))
         + MAX(IF(F2.to_user_id = 33, 2, 0)) AS followState
    FROM user A
        LEFT JOIN user_follow F1
          ON A.user_id = F1.to_user_id
        LEFT JOIN user_follow F2
          ON A.user_id = F2.from_user_id
        LEFT JOIN feed F3
          ON A.user_id = F3.writer_user_id
        LEFT JOIN feed_like F4
          ON F3.feed_id = F4.feed_id
        WHERE A.user_id = 33
 {executed in 0 msec}
[2024-12-20 11:49:20 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|--------|----|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|----|--------------------|---------|---------|----------|----------|----------------|------------|
|33      |null|2024-12-20 11:45:27 |8888     |0        |0         |4         |1               |0           |
|--------|----|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-20 11:49:20 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|--------|---------|---------|--------------------|--------|---------|----|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic |islike |
|--------|---------|---------|--------------------|--------|---------|----|-------|
|80      |         |         |2024-12-20 11:46:59 |33      |8888     |null|0      |
|79      |         |         |2024-12-20 11:46:52 |33      |8888     |null|1      |
|78      |         |         |2024-12-20 11:46:40 |33      |8888     |null|0      |
|77      |         |         |2024-12-20 11:46:33 |33      |8888     |null|0      |
|--------|---------|---------|--------------------|--------|---------|----|-------|

[2024-12-20 11:49:20 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 80
 {executed in 0 msec}
[2024-12-20 11:49:20 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ffacdf87-2f11-439e-89c0-611ad6e7828d.png |
|-----------------------------------------|

[2024-12-20 11:49:20 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 80
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:20 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:20 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 79
 {executed in 0 msec}
[2024-12-20 11:49:20 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f5cd589c-229a-4aaa-b362-9d9d8097c2b7.png |
|-----------------------------------------|

[2024-12-20 11:49:20 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 79
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:49:20 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|----------------|------------|--------|---------|----|
|feed_comment_id |comment     |user_id |writernm |pic |
|----------------|------------|--------|---------|----|
|108             |Îπ°ÌÜµÏïÑ         |33      |8888     |null|
|107             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|----------------|------------|--------|---------|----|

[2024-12-20 11:49:20 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 78
 {executed in 0 msec}
[2024-12-20 11:49:20 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|591159c2-eca7-4176-8701-001abeec2bb4.png |
|-----------------------------------------|

[2024-12-20 11:49:20 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 78
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:49:20 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:20 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 77
 {executed in 0 msec}
[2024-12-20 11:49:20 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f58fad2e-8a6a-4f42-a870-aecc10e5ea87.png |
|-----------------------------------------|

[2024-12-20 11:49:20 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:20 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:20 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:20 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 77
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:49:20 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:20 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:20 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:20 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:20 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:20 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:20 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:20 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:20 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:20 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:20 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:20 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:20 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:20 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:20 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:20 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:20 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:20 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjkzNywiZXhwIjoxNzM0NjY4OTM3LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.7KwKnBsi8I9vwUwWMrwYO5Ozit7dMEPG9G1IaQhk0w8DLVAoUwF9RWJX1B6iIkGh
[2024-12-20 11:49:20 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjkzNywiZXhwIjoxNzM0NjY4OTM3LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.7KwKnBsi8I9vwUwWMrwYO5Ozit7dMEPG9G1IaQhk0w8DLVAoUwF9RWJX1B6iIkGh
[2024-12-20 11:49:20 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.feed.comment.FeedCommentController][0;39m
 FeedCommentController delFeedComment > p: FeedCommentDelReq(feedCommentId=108, signedUserId=0)
[2024-12-20 11:49:20 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. DELETE FROM feed_comment
        WHERE feed_comment_id = 108
        AND user_id = 33
 {executed in 2 msec}
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjczNiwiZXhwIjoxNzM0NjY4NzM2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.hfEP02CAnoMy9EUQv_rAxDrbWnJeS6Wzs6HVOJnPkxOlizBpsnN8_Ra89WGdUlRN
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjczNiwiZXhwIjoxNzM0NjY4NzM2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.hfEP02CAnoMy9EUQv_rAxDrbWnJeS6Wzs6HVOJnPkxOlizBpsnN8_Ra89WGdUlRN
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.feed.model.FeedGetReq][0;39m
 page: 1, size: null, profileUserId: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.feed.FeedController][0;39m
 FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=0, profileUserId=null)
[2024-12-20 11:49:23 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT  A.feed_id AS feedId, A.contents, A.location
          , A.created_at AS createdAt
          , B.user_id AS writerUserId
          , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
          , B.pic AS writerPic
          , IF(C.feed_id IS NULL, 0 , 1) AS isLike
     FROM feed A
    INNER JOIN user B
       ON A.writer_user_id = B.user_id
     LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 33

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 0 msec}
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location  |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|
|80      |         |          |2024-12-20 11:46:59 |33      |8888     |null                                     |0      |
|79      |         |          |2024-12-20 11:46:52 |33      |8888     |null                                     |1      |
|78      |         |          |2024-12-20 11:46:40 |33      |8888     |null                                     |0      |
|77      |         |          |2024-12-20 11:46:33 |33      |8888     |null                                     |0      |
|76      |ÌîºÎìúÎÇ¥Ïö©ÌÖåÏä§Ìä∏  |Í∑∏Î¶ºÏª¥Ìì®ÌÑ∞ÏïÑÌä∏ÌïôÏõê |2024-12-19 11:46:59 |5       |1111     |9e2d2e13-79a7-481f-b221-26e228ce8a4d.jpg |0      |
|75      |asdf     |asdf      |2024-12-10 10:55:05 |19      |zxzx     |2f008281-bcf1-4873-812c-20ab707bf4c7     |0      |
|73      |         |          |2024-12-10 10:33:25 |9       |0        |445adb23-d27b-43c2-837a-3e70f0bfae01     |0      |
|72      |         |          |2024-12-10 10:06:53 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|71      |         |          |2024-12-10 10:04:30 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|70      |ÎßåÏÇ≠       |          |2024-12-10 10:04:12 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|68      |aaaaa    |aaaaa     |2024-12-10 09:50:56 |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |0      |
|67      |         |          |2024-12-09 16:52:00 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|66      |         |          |2024-12-09 16:45:57 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|65      |         |          |2024-12-09 16:38:08 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|64      |         |          |2024-12-09 16:38:04 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|63      |         |          |2024-12-09 16:37:59 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|62      |Îãà ÎØ∏Îûò
ÎÇ®Ìé∏  |          |2024-12-09 16:27:39 |17      |ddd      |null                                     |0      |
|61      |         |          |2024-12-09 16:26:51 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|60      |         |          |2024-12-09 16:19:37 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|59      |         |          |2024-12-09 16:19:21 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-20 11:49:23 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 80
 {executed in 0 msec}
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ffacdf87-2f11-439e-89c0-611ad6e7828d.png |
|-----------------------------------------|

[2024-12-20 11:49:23 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 80
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:23 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 79
 {executed in 0 msec}
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f5cd589c-229a-4aaa-b362-9d9d8097c2b7.png |
|-----------------------------------------|

[2024-12-20 11:49:23 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 79
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|----------------|------------|--------|---------|----|
|feed_comment_id |comment     |user_id |writernm |pic |
|----------------|------------|--------|---------|----|
|107             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|----------------|------------|--------|---------|----|

[2024-12-20 11:49:23 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 78
 {executed in 1 msec}
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|591159c2-eca7-4176-8701-001abeec2bb4.png |
|-----------------------------------------|

[2024-12-20 11:49:23 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 78
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:23 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 77
 {executed in 1 msec}
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f58fad2e-8a6a-4f42-a870-aecc10e5ea87.png |
|-----------------------------------------|

[2024-12-20 11:49:23 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 77
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:23 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 76
 {executed in 1 msec}
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6d1cd1f5-8f13-4d99-9665-4dbab9b47fb7.png |
|fe728007-d85c-4ab7-8577-58a4c81ff176.gif |
|-----------------------------------------|

[2024-12-20 11:49:23 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 76
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:23 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 75
 {executed in 0 msec}
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a6fb41e-8434-4c72-8139-1169c075b2e8.png |
|-----------------------------------------|

[2024-12-20 11:49:23 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 75
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|----------------|-----------------|--------|---------|-----------------------------------------|
|feed_comment_id |comment          |user_id |writernm |pic                                      |
|----------------|-----------------|--------|---------|-----------------------------------------|
|106             |„Öá„Ñ¥„Ñª„Ñ¥„Öá„Ñª„Ñ¥„Öá„Ñπ„Ñ¥„Öá„Ñπ„Ñ¥„Öá„Ñª„Ñ¥ |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|105             |„Öá„Ñª„Öá„Ñª„Ñ¥„Öá„Ñª„Ñ¥„Öá„Ñπ„Ñ¥„Öá„Ñπ    |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|----------------|-----------------|--------|---------|-----------------------------------------|

[2024-12-20 11:49:23 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 73
 {executed in 1 msec}
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b53d82b3-0379-49c9-9c85-cb9c403c6523.jpg |
|-----------------------------------------|

[2024-12-20 11:49:23 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 73
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|104             |ÏåâÍ≤åÏù¥ÎÑ§    |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|103             |Í≤åÏù¥Í≤åÏù¥Ïïº   |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|102             |‚ô°       |9       |0        |445adb23-d27b-43c2-837a-3e70f0bfae01     |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-20 11:49:23 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 72
 {executed in 0 msec}
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|74f8b9ea-6e30-48e1-983a-3d09b7dbabea.gif |
|-----------------------------------------|

[2024-12-20 11:49:23 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 72
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:23 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 71
 {executed in 0 msec}
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2d1c8d65-5c08-4f78-96df-1fb6349d58d0.gif |
|-----------------------------------------|

[2024-12-20 11:49:23 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 71
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:23 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 70
 {executed in 0 msec}
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|87f5ba66-f8e4-41ca-a7ec-1d394b7ae5f7.jpg |
|-----------------------------------------|

[2024-12-20 11:49:23 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 70
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|101             |Î≥¥Ïó¨Ï§ò     |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-20 11:49:23 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|62d4ef6f-50e4-406f-ae1e-d1f64060366a.jpg |
|-----------------------------------------|

[2024-12-20 11:49:23 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 68
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:23 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5e5df70e-01d4-4b33-9e87-00e6a716008d.gif |
|-----------------------------------------|

[2024-12-20 11:49:23 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 67
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|----------------|----------|--------|---------|----|
|feed_comment_id |comment   |user_id |writernm |pic |
|----------------|----------|--------|---------|----|
|100             |Í∞úÏ∂î Î∞ïÍ≥† Í∞ëÎãàÎã§ |17      |ddd      |null|
|----------------|----------|--------|---------|----|

[2024-12-20 11:49:23 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 66
 {executed in 1 msec}
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2b6887e5-7070-4f39-a5db-bc4d35bb51fa.gif |
|-----------------------------------------|

[2024-12-20 11:49:23 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 66
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|----------------|-------------|--------|---------|----|
|feed_comment_id |comment      |user_id |writernm |pic |
|----------------|-------------|--------|---------|----|
|99              |ÏàòÏòÅÏïÑ Í¥ÄÎ¶¨ ÏïàÌïòÎÉê?  |17      |ddd      |null|
|98              |Ïó¨ ÌîºÎìú Í∞ú Ï≥ê ÎçîÎüΩÎÑ§ |17      |ddd      |null|
|----------------|-------------|--------|---------|----|

[2024-12-20 11:49:23 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 65
 {executed in 0 msec}
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0b2c055a-2426-4dbc-8f83-403ecd3fa464.gif |
|-----------------------------------------|

[2024-12-20 11:49:23 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 65
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:23 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 64
 {executed in 0 msec}
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d252f5fe-6aa1-4212-b558-caedfb9d59c5.gif |
|-----------------------------------------|

[2024-12-20 11:49:23 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 64
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:23 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 63
 {executed in 0 msec}
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|86cea73b-80b4-4501-aaeb-4db5007ded5f.gif |
|-----------------------------------------|

[2024-12-20 11:49:23 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 63
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:23 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 62
 {executed in 0 msec}
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|943ec3db-6b2f-4d8a-a1d9-cdfa7b2fe921.jpeg |
|------------------------------------------|

[2024-12-20 11:49:23 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 62
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:23 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 61
 {executed in 0 msec}
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bb7c519a-0113-4137-ada5-4bfa9df4b5d7.gif |
|-----------------------------------------|

[2024-12-20 11:49:23 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 61
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:23 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|282ad40c-d6c6-4183-8781-2cd3a5d80ade.gif |
|-----------------------------------------|

[2024-12-20 11:49:23 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 60
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:23 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 59
 {executed in 0 msec}
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|261ecdff-f966-4797-bc07-75a9eb1a5eee.gif |
|-----------------------------------------|

[2024-12-20 11:49:23 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 59
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:23 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjczNiwiZXhwIjoxNzM0NjY4NzM2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.hfEP02CAnoMy9EUQv_rAxDrbWnJeS6Wzs6HVOJnPkxOlizBpsnN8_Ra89WGdUlRN
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjczNiwiZXhwIjoxNzM0NjY4NzM2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.hfEP02CAnoMy9EUQv_rAxDrbWnJeS6Wzs6HVOJnPkxOlizBpsnN8_Ra89WGdUlRN
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.feed.model.FeedGetReq][0;39m
 page: 1, size: null, profileUserId: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.feed.FeedController][0;39m
 FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=0, profileUserId=null)
[2024-12-20 11:49:24 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  A.feed_id AS feedId, A.contents, A.location
          , A.created_at AS createdAt
          , B.user_id AS writerUserId
          , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
          , B.pic AS writerPic
          , IF(C.feed_id IS NULL, 0 , 1) AS isLike
     FROM feed A
    INNER JOIN user B
       ON A.writer_user_id = B.user_id
     LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 33

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 1 msec}
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location  |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|
|80      |         |          |2024-12-20 11:46:59 |33      |8888     |null                                     |0      |
|79      |         |          |2024-12-20 11:46:52 |33      |8888     |null                                     |1      |
|78      |         |          |2024-12-20 11:46:40 |33      |8888     |null                                     |0      |
|77      |         |          |2024-12-20 11:46:33 |33      |8888     |null                                     |0      |
|76      |ÌîºÎìúÎÇ¥Ïö©ÌÖåÏä§Ìä∏  |Í∑∏Î¶ºÏª¥Ìì®ÌÑ∞ÏïÑÌä∏ÌïôÏõê |2024-12-19 11:46:59 |5       |1111     |9e2d2e13-79a7-481f-b221-26e228ce8a4d.jpg |0      |
|75      |asdf     |asdf      |2024-12-10 10:55:05 |19      |zxzx     |2f008281-bcf1-4873-812c-20ab707bf4c7     |0      |
|73      |         |          |2024-12-10 10:33:25 |9       |0        |445adb23-d27b-43c2-837a-3e70f0bfae01     |0      |
|72      |         |          |2024-12-10 10:06:53 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|71      |         |          |2024-12-10 10:04:30 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|70      |ÎßåÏÇ≠       |          |2024-12-10 10:04:12 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|68      |aaaaa    |aaaaa     |2024-12-10 09:50:56 |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |0      |
|67      |         |          |2024-12-09 16:52:00 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|66      |         |          |2024-12-09 16:45:57 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|65      |         |          |2024-12-09 16:38:08 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|64      |         |          |2024-12-09 16:38:04 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|63      |         |          |2024-12-09 16:37:59 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|62      |Îãà ÎØ∏Îûò
ÎÇ®Ìé∏  |          |2024-12-09 16:27:39 |17      |ddd      |null                                     |0      |
|61      |         |          |2024-12-09 16:26:51 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|60      |         |          |2024-12-09 16:19:37 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|59      |         |          |2024-12-09 16:19:21 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-20 11:49:24 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 80
 {executed in 1 msec}
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ffacdf87-2f11-439e-89c0-611ad6e7828d.png |
|-----------------------------------------|

[2024-12-20 11:49:24 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 80
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:24 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 79
 {executed in 0 msec}
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f5cd589c-229a-4aaa-b362-9d9d8097c2b7.png |
|-----------------------------------------|

[2024-12-20 11:49:24 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 79
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------------|------------|--------|---------|----|
|feed_comment_id |comment     |user_id |writernm |pic |
|----------------|------------|--------|---------|----|
|107             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|----------------|------------|--------|---------|----|

[2024-12-20 11:49:24 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 78
 {executed in 0 msec}
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|591159c2-eca7-4176-8701-001abeec2bb4.png |
|-----------------------------------------|

[2024-12-20 11:49:24 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 78
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:24 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 77
 {executed in 1 msec}
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f58fad2e-8a6a-4f42-a870-aecc10e5ea87.png |
|-----------------------------------------|

[2024-12-20 11:49:24 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 77
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:24 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 76
 {executed in 0 msec}
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6d1cd1f5-8f13-4d99-9665-4dbab9b47fb7.png |
|fe728007-d85c-4ab7-8577-58a4c81ff176.gif |
|-----------------------------------------|

[2024-12-20 11:49:24 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 76
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:24 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 75
 {executed in 0 msec}
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a6fb41e-8434-4c72-8139-1169c075b2e8.png |
|-----------------------------------------|

[2024-12-20 11:49:24 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 75
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------------|-----------------|--------|---------|-----------------------------------------|
|feed_comment_id |comment          |user_id |writernm |pic                                      |
|----------------|-----------------|--------|---------|-----------------------------------------|
|106             |„Öá„Ñ¥„Ñª„Ñ¥„Öá„Ñª„Ñ¥„Öá„Ñπ„Ñ¥„Öá„Ñπ„Ñ¥„Öá„Ñª„Ñ¥ |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|105             |„Öá„Ñª„Öá„Ñª„Ñ¥„Öá„Ñª„Ñ¥„Öá„Ñπ„Ñ¥„Öá„Ñπ    |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|----------------|-----------------|--------|---------|-----------------------------------------|

[2024-12-20 11:49:24 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 73
 {executed in 0 msec}
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b53d82b3-0379-49c9-9c85-cb9c403c6523.jpg |
|-----------------------------------------|

[2024-12-20 11:49:24 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 73
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|104             |ÏåâÍ≤åÏù¥ÎÑ§    |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|103             |Í≤åÏù¥Í≤åÏù¥Ïïº   |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|102             |‚ô°       |9       |0        |445adb23-d27b-43c2-837a-3e70f0bfae01     |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-20 11:49:24 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 72
 {executed in 1 msec}
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|74f8b9ea-6e30-48e1-983a-3d09b7dbabea.gif |
|-----------------------------------------|

[2024-12-20 11:49:24 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 72
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:24 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 71
 {executed in 1 msec}
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2d1c8d65-5c08-4f78-96df-1fb6349d58d0.gif |
|-----------------------------------------|

[2024-12-20 11:49:24 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 71
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:24 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 70
 {executed in 0 msec}
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|87f5ba66-f8e4-41ca-a7ec-1d394b7ae5f7.jpg |
|-----------------------------------------|

[2024-12-20 11:49:24 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 70
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|101             |Î≥¥Ïó¨Ï§ò     |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-20 11:49:24 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|62d4ef6f-50e4-406f-ae1e-d1f64060366a.jpg |
|-----------------------------------------|

[2024-12-20 11:49:24 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 68
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:24 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5e5df70e-01d4-4b33-9e87-00e6a716008d.gif |
|-----------------------------------------|

[2024-12-20 11:49:24 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 67
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------------|----------|--------|---------|----|
|feed_comment_id |comment   |user_id |writernm |pic |
|----------------|----------|--------|---------|----|
|100             |Í∞úÏ∂î Î∞ïÍ≥† Í∞ëÎãàÎã§ |17      |ddd      |null|
|----------------|----------|--------|---------|----|

[2024-12-20 11:49:24 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 66
 {executed in 0 msec}
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2b6887e5-7070-4f39-a5db-bc4d35bb51fa.gif |
|-----------------------------------------|

[2024-12-20 11:49:24 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 66
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------------|-------------|--------|---------|----|
|feed_comment_id |comment      |user_id |writernm |pic |
|----------------|-------------|--------|---------|----|
|99              |ÏàòÏòÅÏïÑ Í¥ÄÎ¶¨ ÏïàÌïòÎÉê?  |17      |ddd      |null|
|98              |Ïó¨ ÌîºÎìú Í∞ú Ï≥ê ÎçîÎüΩÎÑ§ |17      |ddd      |null|
|----------------|-------------|--------|---------|----|

[2024-12-20 11:49:24 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 65
 {executed in 0 msec}
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0b2c055a-2426-4dbc-8f83-403ecd3fa464.gif |
|-----------------------------------------|

[2024-12-20 11:49:24 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 65
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:24 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 64
 {executed in 0 msec}
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d252f5fe-6aa1-4212-b558-caedfb9d59c5.gif |
|-----------------------------------------|

[2024-12-20 11:49:24 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 64
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:24 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 63
 {executed in 0 msec}
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|86cea73b-80b4-4501-aaeb-4db5007ded5f.gif |
|-----------------------------------------|

[2024-12-20 11:49:24 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 63
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:24 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 62
 {executed in 0 msec}
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|943ec3db-6b2f-4d8a-a1d9-cdfa7b2fe921.jpeg |
|------------------------------------------|

[2024-12-20 11:49:24 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 62
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:24 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 61
 {executed in 0 msec}
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bb7c519a-0113-4137-ada5-4bfa9df4b5d7.gif |
|-----------------------------------------|

[2024-12-20 11:49:24 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 61
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:24 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|282ad40c-d6c6-4183-8781-2cd3a5d80ade.gif |
|-----------------------------------------|

[2024-12-20 11:49:24 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 60
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:24 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 59
 {executed in 0 msec}
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|261ecdff-f966-4797-bc07-75a9eb1a5eee.gif |
|-----------------------------------------|

[2024-12-20 11:49:24 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 59
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:24 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjczNiwiZXhwIjoxNzM0NjY4NzM2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.hfEP02CAnoMy9EUQv_rAxDrbWnJeS6Wzs6HVOJnPkxOlizBpsnN8_Ra89WGdUlRN
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjczNiwiZXhwIjoxNzM0NjY4NzM2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.hfEP02CAnoMy9EUQv_rAxDrbWnJeS6Wzs6HVOJnPkxOlizBpsnN8_Ra89WGdUlRN
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.feed.model.FeedGetReq][0;39m
 page: 1, size: null, profileUserId: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.feed.FeedController][0;39m
 FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=0, profileUserId=null)
[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  A.feed_id AS feedId, A.contents, A.location
          , A.created_at AS createdAt
          , B.user_id AS writerUserId
          , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
          , B.pic AS writerPic
          , IF(C.feed_id IS NULL, 0 , 1) AS isLike
     FROM feed A
    INNER JOIN user B
       ON A.writer_user_id = B.user_id
     LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 33

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 0 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location  |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|
|80      |         |          |2024-12-20 11:46:59 |33      |8888     |null                                     |0      |
|79      |         |          |2024-12-20 11:46:52 |33      |8888     |null                                     |1      |
|78      |         |          |2024-12-20 11:46:40 |33      |8888     |null                                     |0      |
|77      |         |          |2024-12-20 11:46:33 |33      |8888     |null                                     |0      |
|76      |ÌîºÎìúÎÇ¥Ïö©ÌÖåÏä§Ìä∏  |Í∑∏Î¶ºÏª¥Ìì®ÌÑ∞ÏïÑÌä∏ÌïôÏõê |2024-12-19 11:46:59 |5       |1111     |9e2d2e13-79a7-481f-b221-26e228ce8a4d.jpg |0      |
|75      |asdf     |asdf      |2024-12-10 10:55:05 |19      |zxzx     |2f008281-bcf1-4873-812c-20ab707bf4c7     |0      |
|73      |         |          |2024-12-10 10:33:25 |9       |0        |445adb23-d27b-43c2-837a-3e70f0bfae01     |0      |
|72      |         |          |2024-12-10 10:06:53 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|71      |         |          |2024-12-10 10:04:30 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|70      |ÎßåÏÇ≠       |          |2024-12-10 10:04:12 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|68      |aaaaa    |aaaaa     |2024-12-10 09:50:56 |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |0      |
|67      |         |          |2024-12-09 16:52:00 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|66      |         |          |2024-12-09 16:45:57 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|65      |         |          |2024-12-09 16:38:08 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|64      |         |          |2024-12-09 16:38:04 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|63      |         |          |2024-12-09 16:37:59 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|62      |Îãà ÎØ∏Îûò
ÎÇ®Ìé∏  |          |2024-12-09 16:27:39 |17      |ddd      |null                                     |0      |
|61      |         |          |2024-12-09 16:26:51 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|60      |         |          |2024-12-09 16:19:37 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|59      |         |          |2024-12-09 16:19:21 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 80
 {executed in 0 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ffacdf87-2f11-439e-89c0-611ad6e7828d.png |
|-----------------------------------------|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 80
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 79
 {executed in 0 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f5cd589c-229a-4aaa-b362-9d9d8097c2b7.png |
|-----------------------------------------|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 79
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|----------------|------------|--------|---------|----|
|feed_comment_id |comment     |user_id |writernm |pic |
|----------------|------------|--------|---------|----|
|107             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|----------------|------------|--------|---------|----|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 78
 {executed in 1 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|591159c2-eca7-4176-8701-001abeec2bb4.png |
|-----------------------------------------|

[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 78
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 77
 {executed in 0 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f58fad2e-8a6a-4f42-a870-aecc10e5ea87.png |
|-----------------------------------------|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 77
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 76
 {executed in 0 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6d1cd1f5-8f13-4d99-9665-4dbab9b47fb7.png |
|fe728007-d85c-4ab7-8577-58a4c81ff176.gif |
|-----------------------------------------|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 76
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 75
 {executed in 0 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a6fb41e-8434-4c72-8139-1169c075b2e8.png |
|-----------------------------------------|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 75
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|----------------|-----------------|--------|---------|-----------------------------------------|
|feed_comment_id |comment          |user_id |writernm |pic                                      |
|----------------|-----------------|--------|---------|-----------------------------------------|
|106             |„Öá„Ñ¥„Ñª„Ñ¥„Öá„Ñª„Ñ¥„Öá„Ñπ„Ñ¥„Öá„Ñπ„Ñ¥„Öá„Ñª„Ñ¥ |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|105             |„Öá„Ñª„Öá„Ñª„Ñ¥„Öá„Ñª„Ñ¥„Öá„Ñπ„Ñ¥„Öá„Ñπ    |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|----------------|-----------------|--------|---------|-----------------------------------------|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 73
 {executed in 0 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b53d82b3-0379-49c9-9c85-cb9c403c6523.jpg |
|-----------------------------------------|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 73
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|104             |ÏåâÍ≤åÏù¥ÎÑ§    |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|103             |Í≤åÏù¥Í≤åÏù¥Ïïº   |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|102             |‚ô°       |9       |0        |445adb23-d27b-43c2-837a-3e70f0bfae01     |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 72
 {executed in 0 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|74f8b9ea-6e30-48e1-983a-3d09b7dbabea.gif |
|-----------------------------------------|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 72
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 71
 {executed in 0 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2d1c8d65-5c08-4f78-96df-1fb6349d58d0.gif |
|-----------------------------------------|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 71
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 70
 {executed in 0 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|87f5ba66-f8e4-41ca-a7ec-1d394b7ae5f7.jpg |
|-----------------------------------------|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 70
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|101             |Î≥¥Ïó¨Ï§ò     |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|62d4ef6f-50e4-406f-ae1e-d1f64060366a.jpg |
|-----------------------------------------|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 68
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5e5df70e-01d4-4b33-9e87-00e6a716008d.gif |
|-----------------------------------------|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 67
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|----------------|----------|--------|---------|----|
|feed_comment_id |comment   |user_id |writernm |pic |
|----------------|----------|--------|---------|----|
|100             |Í∞úÏ∂î Î∞ïÍ≥† Í∞ëÎãàÎã§ |17      |ddd      |null|
|----------------|----------|--------|---------|----|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 66
 {executed in 1 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2b6887e5-7070-4f39-a5db-bc4d35bb51fa.gif |
|-----------------------------------------|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 66
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|----------------|-------------|--------|---------|----|
|feed_comment_id |comment      |user_id |writernm |pic |
|----------------|-------------|--------|---------|----|
|99              |ÏàòÏòÅÏïÑ Í¥ÄÎ¶¨ ÏïàÌïòÎÉê?  |17      |ddd      |null|
|98              |Ïó¨ ÌîºÎìú Í∞ú Ï≥ê ÎçîÎüΩÎÑ§ |17      |ddd      |null|
|----------------|-------------|--------|---------|----|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 65
 {executed in 1 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0b2c055a-2426-4dbc-8f83-403ecd3fa464.gif |
|-----------------------------------------|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 65
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 64
 {executed in 0 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d252f5fe-6aa1-4212-b558-caedfb9d59c5.gif |
|-----------------------------------------|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 64
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 63
 {executed in 0 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|86cea73b-80b4-4501-aaeb-4db5007ded5f.gif |
|-----------------------------------------|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 63
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 62
 {executed in 0 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|943ec3db-6b2f-4d8a-a1d9-cdfa7b2fe921.jpeg |
|------------------------------------------|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 62
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 61
 {executed in 1 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bb7c519a-0113-4137-ada5-4bfa9df4b5d7.gif |
|-----------------------------------------|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 61
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 1 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|282ad40c-d6c6-4183-8781-2cd3a5d80ade.gif |
|-----------------------------------------|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 60
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 59
 {executed in 0 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|261ecdff-f966-4797-bc07-75a9eb1a5eee.gif |
|-----------------------------------------|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 59
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjczNiwiZXhwIjoxNzM0NjY4NzM2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.hfEP02CAnoMy9EUQv_rAxDrbWnJeS6Wzs6HVOJnPkxOlizBpsnN8_Ra89WGdUlRN
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjczNiwiZXhwIjoxNzM0NjY4NzM2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.hfEP02CAnoMy9EUQv_rAxDrbWnJeS6Wzs6HVOJnPkxOlizBpsnN8_Ra89WGdUlRN
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.feed.model.FeedGetReq][0;39m
 page: 1, size: null, profileUserId: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.feed.FeedController][0;39m
 FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=0, profileUserId=null)
[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT  A.feed_id AS feedId, A.contents, A.location
          , A.created_at AS createdAt
          , B.user_id AS writerUserId
          , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
          , B.pic AS writerPic
          , IF(C.feed_id IS NULL, 0 , 1) AS isLike
     FROM feed A
    INNER JOIN user B
       ON A.writer_user_id = B.user_id
     LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 33

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 0 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location  |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|
|80      |         |          |2024-12-20 11:46:59 |33      |8888     |null                                     |0      |
|79      |         |          |2024-12-20 11:46:52 |33      |8888     |null                                     |1      |
|78      |         |          |2024-12-20 11:46:40 |33      |8888     |null                                     |0      |
|77      |         |          |2024-12-20 11:46:33 |33      |8888     |null                                     |0      |
|76      |ÌîºÎìúÎÇ¥Ïö©ÌÖåÏä§Ìä∏  |Í∑∏Î¶ºÏª¥Ìì®ÌÑ∞ÏïÑÌä∏ÌïôÏõê |2024-12-19 11:46:59 |5       |1111     |9e2d2e13-79a7-481f-b221-26e228ce8a4d.jpg |0      |
|75      |asdf     |asdf      |2024-12-10 10:55:05 |19      |zxzx     |2f008281-bcf1-4873-812c-20ab707bf4c7     |0      |
|73      |         |          |2024-12-10 10:33:25 |9       |0        |445adb23-d27b-43c2-837a-3e70f0bfae01     |0      |
|72      |         |          |2024-12-10 10:06:53 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|71      |         |          |2024-12-10 10:04:30 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|70      |ÎßåÏÇ≠       |          |2024-12-10 10:04:12 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|68      |aaaaa    |aaaaa     |2024-12-10 09:50:56 |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |0      |
|67      |         |          |2024-12-09 16:52:00 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|66      |         |          |2024-12-09 16:45:57 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|65      |         |          |2024-12-09 16:38:08 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|64      |         |          |2024-12-09 16:38:04 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|63      |         |          |2024-12-09 16:37:59 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|62      |Îãà ÎØ∏Îûò
ÎÇ®Ìé∏  |          |2024-12-09 16:27:39 |17      |ddd      |null                                     |0      |
|61      |         |          |2024-12-09 16:26:51 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|60      |         |          |2024-12-09 16:19:37 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|59      |         |          |2024-12-09 16:19:21 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 80
 {executed in 0 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ffacdf87-2f11-439e-89c0-611ad6e7828d.png |
|-----------------------------------------|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 80
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 79
 {executed in 0 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f5cd589c-229a-4aaa-b362-9d9d8097c2b7.png |
|-----------------------------------------|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 79
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|----------------|------------|--------|---------|----|
|feed_comment_id |comment     |user_id |writernm |pic |
|----------------|------------|--------|---------|----|
|107             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|----------------|------------|--------|---------|----|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 78
 {executed in 1 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|591159c2-eca7-4176-8701-001abeec2bb4.png |
|-----------------------------------------|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 78
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 77
 {executed in 1 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f58fad2e-8a6a-4f42-a870-aecc10e5ea87.png |
|-----------------------------------------|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 77
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 76
 {executed in 0 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6d1cd1f5-8f13-4d99-9665-4dbab9b47fb7.png |
|fe728007-d85c-4ab7-8577-58a4c81ff176.gif |
|-----------------------------------------|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 76
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 75
 {executed in 0 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a6fb41e-8434-4c72-8139-1169c075b2e8.png |
|-----------------------------------------|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 75
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|----------------|-----------------|--------|---------|-----------------------------------------|
|feed_comment_id |comment          |user_id |writernm |pic                                      |
|----------------|-----------------|--------|---------|-----------------------------------------|
|106             |„Öá„Ñ¥„Ñª„Ñ¥„Öá„Ñª„Ñ¥„Öá„Ñπ„Ñ¥„Öá„Ñπ„Ñ¥„Öá„Ñª„Ñ¥ |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|105             |„Öá„Ñª„Öá„Ñª„Ñ¥„Öá„Ñª„Ñ¥„Öá„Ñπ„Ñ¥„Öá„Ñπ    |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|----------------|-----------------|--------|---------|-----------------------------------------|

[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 73
 {executed in 0 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b53d82b3-0379-49c9-9c85-cb9c403c6523.jpg |
|-----------------------------------------|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 73
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|104             |ÏåâÍ≤åÏù¥ÎÑ§    |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|103             |Í≤åÏù¥Í≤åÏù¥Ïïº   |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|102             |‚ô°       |9       |0        |445adb23-d27b-43c2-837a-3e70f0bfae01     |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 72
 {executed in 0 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|74f8b9ea-6e30-48e1-983a-3d09b7dbabea.gif |
|-----------------------------------------|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 72
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 71
 {executed in 0 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2d1c8d65-5c08-4f78-96df-1fb6349d58d0.gif |
|-----------------------------------------|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 71
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 70
 {executed in 0 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|87f5ba66-f8e4-41ca-a7ec-1d394b7ae5f7.jpg |
|-----------------------------------------|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 70
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|101             |Î≥¥Ïó¨Ï§ò     |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|62d4ef6f-50e4-406f-ae1e-d1f64060366a.jpg |
|-----------------------------------------|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 68
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5e5df70e-01d4-4b33-9e87-00e6a716008d.gif |
|-----------------------------------------|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 67
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|----------------|----------|--------|---------|----|
|feed_comment_id |comment   |user_id |writernm |pic |
|----------------|----------|--------|---------|----|
|100             |Í∞úÏ∂î Î∞ïÍ≥† Í∞ëÎãàÎã§ |17      |ddd      |null|
|----------------|----------|--------|---------|----|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 66
 {executed in 0 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2b6887e5-7070-4f39-a5db-bc4d35bb51fa.gif |
|-----------------------------------------|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 66
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|----------------|-------------|--------|---------|----|
|feed_comment_id |comment      |user_id |writernm |pic |
|----------------|-------------|--------|---------|----|
|99              |ÏàòÏòÅÏïÑ Í¥ÄÎ¶¨ ÏïàÌïòÎÉê?  |17      |ddd      |null|
|98              |Ïó¨ ÌîºÎìú Í∞ú Ï≥ê ÎçîÎüΩÎÑ§ |17      |ddd      |null|
|----------------|-------------|--------|---------|----|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 65
 {executed in 0 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0b2c055a-2426-4dbc-8f83-403ecd3fa464.gif |
|-----------------------------------------|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 65
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 64
 {executed in 1 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d252f5fe-6aa1-4212-b558-caedfb9d59c5.gif |
|-----------------------------------------|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 64
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 63
 {executed in 0 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|86cea73b-80b4-4501-aaeb-4db5007ded5f.gif |
|-----------------------------------------|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 63
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 62
 {executed in 0 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|943ec3db-6b2f-4d8a-a1d9-cdfa7b2fe921.jpeg |
|------------------------------------------|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 62
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 61
 {executed in 0 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bb7c519a-0113-4137-ada5-4bfa9df4b5d7.gif |
|-----------------------------------------|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 61
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|282ad40c-d6c6-4183-8781-2cd3a5d80ade.gif |
|-----------------------------------------|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 60
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 59
 {executed in 0 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|261ecdff-f966-4797-bc07-75a9eb1a5eee.gif |
|-----------------------------------------|

[2024-12-20 11:49:25 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 59
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:25 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:28 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:28 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjkzNywiZXhwIjoxNzM0NjY4OTM3LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.7KwKnBsi8I9vwUwWMrwYO5Ozit7dMEPG9G1IaQhk0w8DLVAoUwF9RWJX1B6iIkGh
[2024-12-20 11:49:28 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjkzNywiZXhwIjoxNzM0NjY4OTM3LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.7KwKnBsi8I9vwUwWMrwYO5Ozit7dMEPG9G1IaQhk0w8DLVAoUwF9RWJX1B6iIkGh
[2024-12-20 11:49:28 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comment
        SET `feed_id` = 78,
        `user_id` = 33,
        `comment` = 'ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ'
 {executed in 2 msec}
[2024-12-20 11:49:28 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comment
        SET `feed_id` = 78,
        `user_id` = 33,
        `comment` = 'ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ'
 {executed in 0 msec}
[2024-12-20 11:49:28 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|----------|
|insert_id |
|----------|
|109       |
|----------|

[2024-12-20 11:49:28 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:28 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:28 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:29 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:29 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjkzNywiZXhwIjoxNzM0NjY4OTM3LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.7KwKnBsi8I9vwUwWMrwYO5Ozit7dMEPG9G1IaQhk0w8DLVAoUwF9RWJX1B6iIkGh
[2024-12-20 11:49:29 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjkzNywiZXhwIjoxNzM0NjY4OTM3LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.7KwKnBsi8I9vwUwWMrwYO5Ozit7dMEPG9G1IaQhk0w8DLVAoUwF9RWJX1B6iIkGh
[2024-12-20 11:49:29 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.feed.like.FeedLikeController][0;39m
 FeedLikeController > feedLikeToggle > p: com.green.greengram.feed.like.model.FeedLikeReq@3d909dca
[2024-12-20 11:49:29 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. DELETE FROM feed_like
        WHERE feed_id = 78 AND
              user_id = 33
 {executed in 1 msec}
[2024-12-20 11:49:29 [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. INSERT INTO feed_like
        SET feed_id = 78,
        user_id = 33
 {executed in 2 msec}
[2024-12-20 11:49:31 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:31 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjkzNywiZXhwIjoxNzM0NjY4OTM3LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.7KwKnBsi8I9vwUwWMrwYO5Ozit7dMEPG9G1IaQhk0w8DLVAoUwF9RWJX1B6iIkGh
[2024-12-20 11:49:31 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjkzNywiZXhwIjoxNzM0NjY4OTM3LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.7KwKnBsi8I9vwUwWMrwYO5Ozit7dMEPG9G1IaQhk0w8DLVAoUwF9RWJX1B6iIkGh
[2024-12-20 11:49:31 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. INSERT INTO feed_comment
        SET `feed_id` = 77,
        `user_id` = 33,
        `comment` = 'ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ'
 {executed in 2 msec}
[2024-12-20 11:49:31 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
2. getGeneratedKeys on query: INSERT INTO feed_comment
        SET `feed_id` = 77,
        `user_id` = 33,
        `comment` = 'ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ'
 {executed in 0 msec}
[2024-12-20 11:49:31 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|----------|
|insert_id |
|----------|
|110       |
|----------|

[2024-12-20 11:49:31 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:31 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:31 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:32 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:32 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjkzNywiZXhwIjoxNzM0NjY4OTM3LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.7KwKnBsi8I9vwUwWMrwYO5Ozit7dMEPG9G1IaQhk0w8DLVAoUwF9RWJX1B6iIkGh
[2024-12-20 11:49:32 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjkzNywiZXhwIjoxNzM0NjY4OTM3LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.7KwKnBsi8I9vwUwWMrwYO5Ozit7dMEPG9G1IaQhk0w8DLVAoUwF9RWJX1B6iIkGh
[2024-12-20 11:49:32 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.feed.like.FeedLikeController][0;39m
 FeedLikeController > feedLikeToggle > p: com.green.greengram.feed.like.model.FeedLikeReq@749ae79c
[2024-12-20 11:49:32 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_like
        WHERE feed_id = 77 AND
              user_id = 33
 {executed in 0 msec}
[2024-12-20 11:49:32 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_like
        SET feed_id = 77,
        user_id = 33
 {executed in 3 msec}
[2024-12-20 11:49:34 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:34 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjkzNywiZXhwIjoxNzM0NjY4OTM3LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.7KwKnBsi8I9vwUwWMrwYO5Ozit7dMEPG9G1IaQhk0w8DLVAoUwF9RWJX1B6iIkGh
[2024-12-20 11:49:34 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjkzNywiZXhwIjoxNzM0NjY4OTM3LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.7KwKnBsi8I9vwUwWMrwYO5Ozit7dMEPG9G1IaQhk0w8DLVAoUwF9RWJX1B6iIkGh
[2024-12-20 11:49:34 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comment
        SET `feed_id` = 80,
        `user_id` = 33,
        `comment` = 'ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ'
 {executed in 2 msec}
[2024-12-20 11:49:34 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comment
        SET `feed_id` = 80,
        `user_id` = 33,
        `comment` = 'ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ'
 {executed in 0 msec}
[2024-12-20 11:49:34 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|----------|
|insert_id |
|----------|
|111       |
|----------|

[2024-12-20 11:49:34 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:34 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:34 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:35 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:35 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjkzNywiZXhwIjoxNzM0NjY4OTM3LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.7KwKnBsi8I9vwUwWMrwYO5Ozit7dMEPG9G1IaQhk0w8DLVAoUwF9RWJX1B6iIkGh
[2024-12-20 11:49:35 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjkzNywiZXhwIjoxNzM0NjY4OTM3LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.7KwKnBsi8I9vwUwWMrwYO5Ozit7dMEPG9G1IaQhk0w8DLVAoUwF9RWJX1B6iIkGh
[2024-12-20 11:49:35 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.feed.like.FeedLikeController][0;39m
 FeedLikeController > feedLikeToggle > p: com.green.greengram.feed.like.model.FeedLikeReq@74a39ff9
[2024-12-20 11:49:35 [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_like
        WHERE feed_id = 80 AND
              user_id = 33
 {executed in 0 msec}
[2024-12-20 11:49:35 [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_like
        SET feed_id = 80,
        user_id = 33
 {executed in 3 msec}
[2024-12-20 11:49:39 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:39 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjkzNywiZXhwIjoxNzM0NjY4OTM3LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.7KwKnBsi8I9vwUwWMrwYO5Ozit7dMEPG9G1IaQhk0w8DLVAoUwF9RWJX1B6iIkGh
[2024-12-20 11:49:39 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjkzNywiZXhwIjoxNzM0NjY4OTM3LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.7KwKnBsi8I9vwUwWMrwYO5Ozit7dMEPG9G1IaQhk0w8DLVAoUwF9RWJX1B6iIkGh
[2024-12-20 11:49:39 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comment
        SET `feed_id` = 76,
        `user_id` = 33,
        `comment` = 'ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ'
 {executed in 3 msec}
[2024-12-20 11:49:39 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comment
        SET `feed_id` = 76,
        `user_id` = 33,
        `comment` = 'ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ'
 {executed in 0 msec}
[2024-12-20 11:49:39 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------|
|insert_id |
|----------|
|112       |
|----------|

[2024-12-20 11:49:39 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:39 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:39 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:40 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:40 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjkzNywiZXhwIjoxNzM0NjY4OTM3LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.7KwKnBsi8I9vwUwWMrwYO5Ozit7dMEPG9G1IaQhk0w8DLVAoUwF9RWJX1B6iIkGh
[2024-12-20 11:49:40 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjkzNywiZXhwIjoxNzM0NjY4OTM3LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.7KwKnBsi8I9vwUwWMrwYO5Ozit7dMEPG9G1IaQhk0w8DLVAoUwF9RWJX1B6iIkGh
[2024-12-20 11:49:40 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comment
        SET `feed_id` = 76,
        `user_id` = 33,
        `comment` = 'ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ'
 {executed in 2 msec}
[2024-12-20 11:49:40 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comment
        SET `feed_id` = 76,
        `user_id` = 33,
        `comment` = 'ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ'
 {executed in 0 msec}
[2024-12-20 11:49:40 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|----------|
|insert_id |
|----------|
|113       |
|----------|

[2024-12-20 11:49:40 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:40 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:40 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:41 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:41 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjkzNywiZXhwIjoxNzM0NjY4OTM3LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.7KwKnBsi8I9vwUwWMrwYO5Ozit7dMEPG9G1IaQhk0w8DLVAoUwF9RWJX1B6iIkGh
[2024-12-20 11:49:41 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjkzNywiZXhwIjoxNzM0NjY4OTM3LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.7KwKnBsi8I9vwUwWMrwYO5Ozit7dMEPG9G1IaQhk0w8DLVAoUwF9RWJX1B6iIkGh
[2024-12-20 11:49:41 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. INSERT INTO feed_comment
        SET `feed_id` = 76,
        `user_id` = 33,
        `comment` = 'ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ'
 {executed in 2 msec}
[2024-12-20 11:49:41 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
2. getGeneratedKeys on query: INSERT INTO feed_comment
        SET `feed_id` = 76,
        `user_id` = 33,
        `comment` = 'ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ'
 {executed in 0 msec}
[2024-12-20 11:49:41 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|----------|
|insert_id |
|----------|
|114       |
|----------|

[2024-12-20 11:49:41 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:41 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:41 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:42 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:42 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjkzNywiZXhwIjoxNzM0NjY4OTM3LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.7KwKnBsi8I9vwUwWMrwYO5Ozit7dMEPG9G1IaQhk0w8DLVAoUwF9RWJX1B6iIkGh
[2024-12-20 11:49:42 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjkzNywiZXhwIjoxNzM0NjY4OTM3LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.7KwKnBsi8I9vwUwWMrwYO5Ozit7dMEPG9G1IaQhk0w8DLVAoUwF9RWJX1B6iIkGh
[2024-12-20 11:49:42 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comment
        SET `feed_id` = 76,
        `user_id` = 33,
        `comment` = 'ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ'
 {executed in 1 msec}
[2024-12-20 11:49:42 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comment
        SET `feed_id` = 76,
        `user_id` = 33,
        `comment` = 'ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ'
 {executed in 0 msec}
[2024-12-20 11:49:42 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------|
|insert_id |
|----------|
|115       |
|----------|

[2024-12-20 11:49:42 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:42 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:42 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:46 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:46 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjkzNywiZXhwIjoxNzM0NjY4OTM3LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.7KwKnBsi8I9vwUwWMrwYO5Ozit7dMEPG9G1IaQhk0w8DLVAoUwF9RWJX1B6iIkGh
[2024-12-20 11:49:46 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjkzNywiZXhwIjoxNzM0NjY4OTM3LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.7KwKnBsi8I9vwUwWMrwYO5Ozit7dMEPG9G1IaQhk0w8DLVAoUwF9RWJX1B6iIkGh
[2024-12-20 11:49:46 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comment
        SET `feed_id` = 75,
        `user_id` = 33,
        `comment` = 'ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ'
 {executed in 4 msec}
[2024-12-20 11:49:46 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comment
        SET `feed_id` = 75,
        `user_id` = 33,
        `comment` = 'ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ'
 {executed in 0 msec}
[2024-12-20 11:49:46 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|----------|
|insert_id |
|----------|
|116       |
|----------|

[2024-12-20 11:49:46 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:46 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:46 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:47 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:47 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjkzNywiZXhwIjoxNzM0NjY4OTM3LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.7KwKnBsi8I9vwUwWMrwYO5Ozit7dMEPG9G1IaQhk0w8DLVAoUwF9RWJX1B6iIkGh
[2024-12-20 11:49:47 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjkzNywiZXhwIjoxNzM0NjY4OTM3LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.7KwKnBsi8I9vwUwWMrwYO5Ozit7dMEPG9G1IaQhk0w8DLVAoUwF9RWJX1B6iIkGh
[2024-12-20 11:49:47 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comment
        SET `feed_id` = 75,
        `user_id` = 33,
        `comment` = 'ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ'
 {executed in 3 msec}
[2024-12-20 11:49:47 [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comment
        SET `feed_id` = 75,
        `user_id` = 33,
        `comment` = 'ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ'
 {executed in 0 msec}
[2024-12-20 11:49:47 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[jdbc.resultsettable][0;39m
 
|----------|
|insert_id |
|----------|
|117       |
|----------|

[2024-12-20 11:49:47 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:47 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:47 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:48 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:48 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjkzNywiZXhwIjoxNzM0NjY4OTM3LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.7KwKnBsi8I9vwUwWMrwYO5Ozit7dMEPG9G1IaQhk0w8DLVAoUwF9RWJX1B6iIkGh
[2024-12-20 11:49:48 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjkzNywiZXhwIjoxNzM0NjY4OTM3LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.7KwKnBsi8I9vwUwWMrwYO5Ozit7dMEPG9G1IaQhk0w8DLVAoUwF9RWJX1B6iIkGh
[2024-12-20 11:49:48 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comment
        SET `feed_id` = 75,
        `user_id` = 33,
        `comment` = 'ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ'
 {executed in 3 msec}
[2024-12-20 11:49:48 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comment
        SET `feed_id` = 75,
        `user_id` = 33,
        `comment` = 'ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ'
 {executed in 0 msec}
[2024-12-20 11:49:48 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|----------|
|insert_id |
|----------|
|118       |
|----------|

[2024-12-20 11:49:48 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:48 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:48 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:49 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:49 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjkzNywiZXhwIjoxNzM0NjY4OTM3LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.7KwKnBsi8I9vwUwWMrwYO5Ozit7dMEPG9G1IaQhk0w8DLVAoUwF9RWJX1B6iIkGh
[2024-12-20 11:49:49 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjkzNywiZXhwIjoxNzM0NjY4OTM3LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.7KwKnBsi8I9vwUwWMrwYO5Ozit7dMEPG9G1IaQhk0w8DLVAoUwF9RWJX1B6iIkGh
[2024-12-20 11:49:49 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. INSERT INTO feed_comment
        SET `feed_id` = 75,
        `user_id` = 33,
        `comment` = 'ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ'
 {executed in 3 msec}
[2024-12-20 11:49:49 [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
2. getGeneratedKeys on query: INSERT INTO feed_comment
        SET `feed_id` = 75,
        `user_id` = 33,
        `comment` = 'ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ'
 {executed in 0 msec}
[2024-12-20 11:49:49 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[jdbc.resultsettable][0;39m
 
|----------|
|insert_id |
|----------|
|119       |
|----------|

[2024-12-20 11:49:49 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:49 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:49 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:50 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:50 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjkzNywiZXhwIjoxNzM0NjY4OTM3LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.7KwKnBsi8I9vwUwWMrwYO5Ozit7dMEPG9G1IaQhk0w8DLVAoUwF9RWJX1B6iIkGh
[2024-12-20 11:49:50 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjkzNywiZXhwIjoxNzM0NjY4OTM3LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.7KwKnBsi8I9vwUwWMrwYO5Ozit7dMEPG9G1IaQhk0w8DLVAoUwF9RWJX1B6iIkGh
[2024-12-20 11:49:50 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comment
        SET `feed_id` = 75,
        `user_id` = 33,
        `comment` = 'ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ'
 {executed in 3 msec}
[2024-12-20 11:49:50 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comment
        SET `feed_id` = 75,
        `user_id` = 33,
        `comment` = 'ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ'
 {executed in 0 msec}
[2024-12-20 11:49:50 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------|
|insert_id |
|----------|
|120       |
|----------|

[2024-12-20 11:49:50 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:50 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:50 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:52 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:52 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjkzNywiZXhwIjoxNzM0NjY4OTM3LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.7KwKnBsi8I9vwUwWMrwYO5Ozit7dMEPG9G1IaQhk0w8DLVAoUwF9RWJX1B6iIkGh
[2024-12-20 11:49:52 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjkzNywiZXhwIjoxNzM0NjY4OTM3LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.7KwKnBsi8I9vwUwWMrwYO5Ozit7dMEPG9G1IaQhk0w8DLVAoUwF9RWJX1B6iIkGh
[2024-12-20 11:49:52 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comment
        SET `feed_id` = 75,
        `user_id` = 33,
        `comment` = 'ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ'
 {executed in 2 msec}
[2024-12-20 11:49:52 [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comment
        SET `feed_id` = 75,
        `user_id` = 33,
        `comment` = 'ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ'
 {executed in 0 msec}
[2024-12-20 11:49:52 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[jdbc.resultsettable][0;39m
 
|----------|
|insert_id |
|----------|
|121       |
|----------|

[2024-12-20 11:49:52 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:52 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:52 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjkzNywiZXhwIjoxNzM0NjY4OTM3LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.7KwKnBsi8I9vwUwWMrwYO5Ozit7dMEPG9G1IaQhk0w8DLVAoUwF9RWJX1B6iIkGh
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjkzNywiZXhwIjoxNzM0NjY4OTM3LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.7KwKnBsi8I9vwUwWMrwYO5Ozit7dMEPG9G1IaQhk0w8DLVAoUwF9RWJX1B6iIkGh
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.feed.model.FeedGetReq][0;39m
 page: 1, size: null, profileUserId: null
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.feed.FeedController][0;39m
 FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=0, profileUserId=null)
[2024-12-20 11:49:55 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  A.feed_id AS feedId, A.contents, A.location
          , A.created_at AS createdAt
          , B.user_id AS writerUserId
          , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
          , B.pic AS writerPic
          , IF(C.feed_id IS NULL, 0 , 1) AS isLike
     FROM feed A
    INNER JOIN user B
       ON A.writer_user_id = B.user_id
     LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 33

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 1 msec}
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location  |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|
|80      |         |          |2024-12-20 11:46:59 |33      |8888     |null                                     |1      |
|79      |         |          |2024-12-20 11:46:52 |33      |8888     |null                                     |1      |
|78      |         |          |2024-12-20 11:46:40 |33      |8888     |null                                     |1      |
|77      |         |          |2024-12-20 11:46:33 |33      |8888     |null                                     |1      |
|76      |ÌîºÎìúÎÇ¥Ïö©ÌÖåÏä§Ìä∏  |Í∑∏Î¶ºÏª¥Ìì®ÌÑ∞ÏïÑÌä∏ÌïôÏõê |2024-12-19 11:46:59 |5       |1111     |9e2d2e13-79a7-481f-b221-26e228ce8a4d.jpg |0      |
|75      |asdf     |asdf      |2024-12-10 10:55:05 |19      |zxzx     |2f008281-bcf1-4873-812c-20ab707bf4c7     |0      |
|73      |         |          |2024-12-10 10:33:25 |9       |0        |445adb23-d27b-43c2-837a-3e70f0bfae01     |0      |
|72      |         |          |2024-12-10 10:06:53 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|71      |         |          |2024-12-10 10:04:30 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|70      |ÎßåÏÇ≠       |          |2024-12-10 10:04:12 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|68      |aaaaa    |aaaaa     |2024-12-10 09:50:56 |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |0      |
|67      |         |          |2024-12-09 16:52:00 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|66      |         |          |2024-12-09 16:45:57 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|65      |         |          |2024-12-09 16:38:08 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|64      |         |          |2024-12-09 16:38:04 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|63      |         |          |2024-12-09 16:37:59 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|62      |Îãà ÎØ∏Îûò
ÎÇ®Ìé∏  |          |2024-12-09 16:27:39 |17      |ddd      |null                                     |0      |
|61      |         |          |2024-12-09 16:26:51 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|60      |         |          |2024-12-09 16:19:37 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|59      |         |          |2024-12-09 16:19:21 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-20 11:49:55 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 80
 {executed in 0 msec}
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ffacdf87-2f11-439e-89c0-611ad6e7828d.png |
|-----------------------------------------|

[2024-12-20 11:49:55 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 80
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|------------|--------|---------|----|
|feed_comment_id |comment     |user_id |writernm |pic |
|----------------|------------|--------|---------|----|
|111             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|----------------|------------|--------|---------|----|

[2024-12-20 11:49:55 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 79
 {executed in 0 msec}
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f5cd589c-229a-4aaa-b362-9d9d8097c2b7.png |
|-----------------------------------------|

[2024-12-20 11:49:55 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 79
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|------------|--------|---------|----|
|feed_comment_id |comment     |user_id |writernm |pic |
|----------------|------------|--------|---------|----|
|107             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|----------------|------------|--------|---------|----|

[2024-12-20 11:49:55 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 78
 {executed in 0 msec}
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|591159c2-eca7-4176-8701-001abeec2bb4.png |
|-----------------------------------------|

[2024-12-20 11:49:55 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 78
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|------------|--------|---------|----|
|feed_comment_id |comment     |user_id |writernm |pic |
|----------------|------------|--------|---------|----|
|109             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|----------------|------------|--------|---------|----|

[2024-12-20 11:49:55 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 77
 {executed in 0 msec}
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f58fad2e-8a6a-4f42-a870-aecc10e5ea87.png |
|-----------------------------------------|

[2024-12-20 11:49:55 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 77
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|------------|--------|---------|----|
|feed_comment_id |comment     |user_id |writernm |pic |
|----------------|------------|--------|---------|----|
|110             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|----------------|------------|--------|---------|----|

[2024-12-20 11:49:55 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 76
 {executed in 0 msec}
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6d1cd1f5-8f13-4d99-9665-4dbab9b47fb7.png |
|fe728007-d85c-4ab7-8577-58a4c81ff176.gif |
|-----------------------------------------|

[2024-12-20 11:49:55 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 76
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|------------|--------|---------|----|
|feed_comment_id |comment     |user_id |writernm |pic |
|----------------|------------|--------|---------|----|
|115             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|114             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|113             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|112             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|----------------|------------|--------|---------|----|

[2024-12-20 11:49:55 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 75
 {executed in 0 msec}
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a6fb41e-8434-4c72-8139-1169c075b2e8.png |
|-----------------------------------------|

[2024-12-20 11:49:55 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 75
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|------------|--------|---------|----|
|feed_comment_id |comment     |user_id |writernm |pic |
|----------------|------------|--------|---------|----|
|121             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|120             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|119             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|118             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|----------------|------------|--------|---------|----|

[2024-12-20 11:49:55 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 73
 {executed in 0 msec}
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b53d82b3-0379-49c9-9c85-cb9c403c6523.jpg |
|-----------------------------------------|

[2024-12-20 11:49:55 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 73
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|104             |ÏåâÍ≤åÏù¥ÎÑ§    |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|103             |Í≤åÏù¥Í≤åÏù¥Ïïº   |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|102             |‚ô°       |9       |0        |445adb23-d27b-43c2-837a-3e70f0bfae01     |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-20 11:49:55 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 72
 {executed in 1 msec}
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|74f8b9ea-6e30-48e1-983a-3d09b7dbabea.gif |
|-----------------------------------------|

[2024-12-20 11:49:55 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 72
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:55 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 71
 {executed in 0 msec}
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2d1c8d65-5c08-4f78-96df-1fb6349d58d0.gif |
|-----------------------------------------|

[2024-12-20 11:49:55 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 71
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:55 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 70
 {executed in 0 msec}
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|87f5ba66-f8e4-41ca-a7ec-1d394b7ae5f7.jpg |
|-----------------------------------------|

[2024-12-20 11:49:55 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 70
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|101             |Î≥¥Ïó¨Ï§ò     |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-20 11:49:55 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 1 msec}
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|62d4ef6f-50e4-406f-ae1e-d1f64060366a.jpg |
|-----------------------------------------|

[2024-12-20 11:49:55 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 68
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:55 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5e5df70e-01d4-4b33-9e87-00e6a716008d.gif |
|-----------------------------------------|

[2024-12-20 11:49:55 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 67
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|----------|--------|---------|----|
|feed_comment_id |comment   |user_id |writernm |pic |
|----------------|----------|--------|---------|----|
|100             |Í∞úÏ∂î Î∞ïÍ≥† Í∞ëÎãàÎã§ |17      |ddd      |null|
|----------------|----------|--------|---------|----|

[2024-12-20 11:49:55 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 66
 {executed in 0 msec}
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2b6887e5-7070-4f39-a5db-bc4d35bb51fa.gif |
|-----------------------------------------|

[2024-12-20 11:49:55 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 66
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|-------------|--------|---------|----|
|feed_comment_id |comment      |user_id |writernm |pic |
|----------------|-------------|--------|---------|----|
|99              |ÏàòÏòÅÏïÑ Í¥ÄÎ¶¨ ÏïàÌïòÎÉê?  |17      |ddd      |null|
|98              |Ïó¨ ÌîºÎìú Í∞ú Ï≥ê ÎçîÎüΩÎÑ§ |17      |ddd      |null|
|----------------|-------------|--------|---------|----|

[2024-12-20 11:49:55 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 65
 {executed in 1 msec}
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0b2c055a-2426-4dbc-8f83-403ecd3fa464.gif |
|-----------------------------------------|

[2024-12-20 11:49:55 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 65
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:55 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 64
 {executed in 0 msec}
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d252f5fe-6aa1-4212-b558-caedfb9d59c5.gif |
|-----------------------------------------|

[2024-12-20 11:49:55 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 64
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:55 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 63
 {executed in 0 msec}
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|86cea73b-80b4-4501-aaeb-4db5007ded5f.gif |
|-----------------------------------------|

[2024-12-20 11:49:55 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 63
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:55 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 62
 {executed in 0 msec}
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|943ec3db-6b2f-4d8a-a1d9-cdfa7b2fe921.jpeg |
|------------------------------------------|

[2024-12-20 11:49:55 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 62
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:55 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 61
 {executed in 0 msec}
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bb7c519a-0113-4137-ada5-4bfa9df4b5d7.gif |
|-----------------------------------------|

[2024-12-20 11:49:55 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 61
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:55 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|282ad40c-d6c6-4183-8781-2cd3a5d80ade.gif |
|-----------------------------------------|

[2024-12-20 11:49:55 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 60
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:55 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 59
 {executed in 0 msec}
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|261ecdff-f966-4797-bc07-75a9eb1a5eee.gif |
|-----------------------------------------|

[2024-12-20 11:49:55 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 59
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:55 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:56 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:56 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:56 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:56 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:56 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:56 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:56 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:56 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:56 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:58 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:58 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:58 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:58 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:58 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:58 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:58 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:58 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:58 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:58 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:58 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:58 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:58 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:58 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:58 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:58 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:58 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:58 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:59 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:59 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:59 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:59 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:59 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:59 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:49:59 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:49:59 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:49:59 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:50:00 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 192.168.0.164
[2024-12-20 11:50:00 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:50:00 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjczNiwiZXhwIjoxNzM0NjY4NzM2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.hfEP02CAnoMy9EUQv_rAxDrbWnJeS6Wzs6HVOJnPkxOlizBpsnN8_Ra89WGdUlRN
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjczNiwiZXhwIjoxNzM0NjY4NzM2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.hfEP02CAnoMy9EUQv_rAxDrbWnJeS6Wzs6HVOJnPkxOlizBpsnN8_Ra89WGdUlRN
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.feed.model.FeedGetReq][0;39m
 page: 1, size: null, profileUserId: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.feed.FeedController][0;39m
 FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=0, profileUserId=null)
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:01 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  A.feed_id AS feedId, A.contents, A.location
          , A.created_at AS createdAt
          , B.user_id AS writerUserId
          , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
          , B.pic AS writerPic
          , IF(C.feed_id IS NULL, 0 , 1) AS isLike
     FROM feed A
    INNER JOIN user B
       ON A.writer_user_id = B.user_id
     LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 33

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 0 msec}
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location  |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|
|80      |         |          |2024-12-20 11:46:59 |33      |8888     |null                                     |1      |
|79      |         |          |2024-12-20 11:46:52 |33      |8888     |null                                     |1      |
|78      |         |          |2024-12-20 11:46:40 |33      |8888     |null                                     |1      |
|77      |         |          |2024-12-20 11:46:33 |33      |8888     |null                                     |1      |
|76      |ÌîºÎìúÎÇ¥Ïö©ÌÖåÏä§Ìä∏  |Í∑∏Î¶ºÏª¥Ìì®ÌÑ∞ÏïÑÌä∏ÌïôÏõê |2024-12-19 11:46:59 |5       |1111     |9e2d2e13-79a7-481f-b221-26e228ce8a4d.jpg |0      |
|75      |asdf     |asdf      |2024-12-10 10:55:05 |19      |zxzx     |2f008281-bcf1-4873-812c-20ab707bf4c7     |0      |
|73      |         |          |2024-12-10 10:33:25 |9       |0        |445adb23-d27b-43c2-837a-3e70f0bfae01     |0      |
|72      |         |          |2024-12-10 10:06:53 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|71      |         |          |2024-12-10 10:04:30 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|70      |ÎßåÏÇ≠       |          |2024-12-10 10:04:12 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|68      |aaaaa    |aaaaa     |2024-12-10 09:50:56 |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |0      |
|67      |         |          |2024-12-09 16:52:00 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|66      |         |          |2024-12-09 16:45:57 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|65      |         |          |2024-12-09 16:38:08 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|64      |         |          |2024-12-09 16:38:04 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|63      |         |          |2024-12-09 16:37:59 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|62      |Îãà ÎØ∏Îûò
ÎÇ®Ìé∏  |          |2024-12-09 16:27:39 |17      |ddd      |null                                     |0      |
|61      |         |          |2024-12-09 16:26:51 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|60      |         |          |2024-12-09 16:19:37 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|59      |         |          |2024-12-09 16:19:21 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-20 11:53:01 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 80
 {executed in 0 msec}
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ffacdf87-2f11-439e-89c0-611ad6e7828d.png |
|-----------------------------------------|

[2024-12-20 11:53:01 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 80
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|----------------|------------|--------|---------|----|
|feed_comment_id |comment     |user_id |writernm |pic |
|----------------|------------|--------|---------|----|
|111             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|----------------|------------|--------|---------|----|

[2024-12-20 11:53:01 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 79
 {executed in 0 msec}
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f5cd589c-229a-4aaa-b362-9d9d8097c2b7.png |
|-----------------------------------------|

[2024-12-20 11:53:01 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 79
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|----------------|------------|--------|---------|----|
|feed_comment_id |comment     |user_id |writernm |pic |
|----------------|------------|--------|---------|----|
|107             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|----------------|------------|--------|---------|----|

[2024-12-20 11:53:01 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 78
 {executed in 0 msec}
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|591159c2-eca7-4176-8701-001abeec2bb4.png |
|-----------------------------------------|

[2024-12-20 11:53:01 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 78
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|----------------|------------|--------|---------|----|
|feed_comment_id |comment     |user_id |writernm |pic |
|----------------|------------|--------|---------|----|
|109             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|----------------|------------|--------|---------|----|

[2024-12-20 11:53:01 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 77
 {executed in 0 msec}
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f58fad2e-8a6a-4f42-a870-aecc10e5ea87.png |
|-----------------------------------------|

[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:01 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 77
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|----------------|------------|--------|---------|----|
|feed_comment_id |comment     |user_id |writernm |pic |
|----------------|------------|--------|---------|----|
|110             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|----------------|------------|--------|---------|----|

[2024-12-20 11:53:01 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 76
 {executed in 0 msec}
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6d1cd1f5-8f13-4d99-9665-4dbab9b47fb7.png |
|fe728007-d85c-4ab7-8577-58a4c81ff176.gif |
|-----------------------------------------|

[2024-12-20 11:53:01 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 76
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|----------------|------------|--------|---------|----|
|feed_comment_id |comment     |user_id |writernm |pic |
|----------------|------------|--------|---------|----|
|115             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|114             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|113             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|112             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|----------------|------------|--------|---------|----|

[2024-12-20 11:53:01 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 75
 {executed in 0 msec}
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a6fb41e-8434-4c72-8139-1169c075b2e8.png |
|-----------------------------------------|

[2024-12-20 11:53:01 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 75
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|----------------|------------|--------|---------|----|
|feed_comment_id |comment     |user_id |writernm |pic |
|----------------|------------|--------|---------|----|
|121             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|120             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|119             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|118             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|----------------|------------|--------|---------|----|

[2024-12-20 11:53:01 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 73
 {executed in 0 msec}
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b53d82b3-0379-49c9-9c85-cb9c403c6523.jpg |
|-----------------------------------------|

[2024-12-20 11:53:01 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 73
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|104             |ÏåâÍ≤åÏù¥ÎÑ§    |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|103             |Í≤åÏù¥Í≤åÏù¥Ïïº   |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|102             |‚ô°       |9       |0        |445adb23-d27b-43c2-837a-3e70f0bfae01     |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-20 11:53:01 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 72
 {executed in 0 msec}
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|74f8b9ea-6e30-48e1-983a-3d09b7dbabea.gif |
|-----------------------------------------|

[2024-12-20 11:53:01 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 72
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:53:01 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 71
 {executed in 0 msec}
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2d1c8d65-5c08-4f78-96df-1fb6349d58d0.gif |
|-----------------------------------------|

[2024-12-20 11:53:01 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 71
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:53:01 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 70
 {executed in 0 msec}
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|87f5ba66-f8e4-41ca-a7ec-1d394b7ae5f7.jpg |
|-----------------------------------------|

[2024-12-20 11:53:01 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 70
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|101             |Î≥¥Ïó¨Ï§ò     |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-20 11:53:01 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|62d4ef6f-50e4-406f-ae1e-d1f64060366a.jpg |
|-----------------------------------------|

[2024-12-20 11:53:01 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 68
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:53:01 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5e5df70e-01d4-4b33-9e87-00e6a716008d.gif |
|-----------------------------------------|

[2024-12-20 11:53:01 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 67
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|----------------|----------|--------|---------|----|
|feed_comment_id |comment   |user_id |writernm |pic |
|----------------|----------|--------|---------|----|
|100             |Í∞úÏ∂î Î∞ïÍ≥† Í∞ëÎãàÎã§ |17      |ddd      |null|
|----------------|----------|--------|---------|----|

[2024-12-20 11:53:01 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 66
 {executed in 0 msec}
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2b6887e5-7070-4f39-a5db-bc4d35bb51fa.gif |
|-----------------------------------------|

[2024-12-20 11:53:01 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 66
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|----------------|-------------|--------|---------|----|
|feed_comment_id |comment      |user_id |writernm |pic |
|----------------|-------------|--------|---------|----|
|99              |ÏàòÏòÅÏïÑ Í¥ÄÎ¶¨ ÏïàÌïòÎÉê?  |17      |ddd      |null|
|98              |Ïó¨ ÌîºÎìú Í∞ú Ï≥ê ÎçîÎüΩÎÑ§ |17      |ddd      |null|
|----------------|-------------|--------|---------|----|

[2024-12-20 11:53:01 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 65
 {executed in 0 msec}
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0b2c055a-2426-4dbc-8f83-403ecd3fa464.gif |
|-----------------------------------------|

[2024-12-20 11:53:01 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 65
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:53:01 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 64
 {executed in 1 msec}
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d252f5fe-6aa1-4212-b558-caedfb9d59c5.gif |
|-----------------------------------------|

[2024-12-20 11:53:01 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 64
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:53:01 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 63
 {executed in 0 msec}
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|86cea73b-80b4-4501-aaeb-4db5007ded5f.gif |
|-----------------------------------------|

[2024-12-20 11:53:01 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 63
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:53:01 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 62
 {executed in 0 msec}
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|943ec3db-6b2f-4d8a-a1d9-cdfa7b2fe921.jpeg |
|------------------------------------------|

[2024-12-20 11:53:01 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 62
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:53:01 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 61
 {executed in 0 msec}
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bb7c519a-0113-4137-ada5-4bfa9df4b5d7.gif |
|-----------------------------------------|

[2024-12-20 11:53:01 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 61
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:53:01 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|282ad40c-d6c6-4183-8781-2cd3a5d80ade.gif |
|-----------------------------------------|

[2024-12-20 11:53:01 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 60
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:53:01 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 59
 {executed in 0 msec}
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|261ecdff-f966-4797-bc07-75a9eb1a5eee.gif |
|-----------------------------------------|

[2024-12-20 11:53:01 [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 59
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:01 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:04 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:04 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:04 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:04 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:04 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:04 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:04 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:04 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:04 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjczNiwiZXhwIjoxNzM0NjY4NzM2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.hfEP02CAnoMy9EUQv_rAxDrbWnJeS6Wzs6HVOJnPkxOlizBpsnN8_Ra89WGdUlRN
[2024-12-20 11:53:04 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjczNiwiZXhwIjoxNzM0NjY4NzM2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.hfEP02CAnoMy9EUQv_rAxDrbWnJeS6Wzs6HVOJnPkxOlizBpsnN8_Ra89WGdUlRN
[2024-12-20 11:53:04 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjczNiwiZXhwIjoxNzM0NjY4NzM2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.hfEP02CAnoMy9EUQv_rAxDrbWnJeS6Wzs6HVOJnPkxOlizBpsnN8_Ra89WGdUlRN
[2024-12-20 11:53:04 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjczNiwiZXhwIjoxNzM0NjY4NzM2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.hfEP02CAnoMy9EUQv_rAxDrbWnJeS6Wzs6HVOJnPkxOlizBpsnN8_Ra89WGdUlRN
[2024-12-20 11:53:04 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.user.UserController][0;39m
 UserController > getUserInfo > p: UserInfoGetReq(signedUserId=0, profileUserId=33)
[2024-12-20 11:53:04 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.feed.model.FeedGetReq][0;39m
 page: 1, size: null, profileUserId: 33
[2024-12-20 11:53:04 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.feed.FeedController][0;39m
 FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=0, profileUserId=33)
[2024-12-20 11:53:04 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
         , IF(nick_name IS NULL, uid, nick_name) AS nickName
         , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
         , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
         , COUNT(DISTINCT F3.feed_id) AS feedCount
         , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
         , MAX(IF(F1.from_user_id = 33, 1, 0))
         + MAX(IF(F2.to_user_id = 33, 2, 0)) AS followState
    FROM user A
        LEFT JOIN user_follow F1
          ON A.user_id = F1.to_user_id
        LEFT JOIN user_follow F2
          ON A.user_id = F2.from_user_id
        LEFT JOIN feed F3
          ON A.user_id = F3.writer_user_id
        LEFT JOIN feed_like F4
          ON F3.feed_id = F4.feed_id
        WHERE A.user_id = 33
 {executed in 1 msec}
[2024-12-20 11:53:04 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT  A.feed_id AS feedId, A.contents, A.location
          , A.created_at AS createdAt
          , B.user_id AS writerUserId
          , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
          , B.pic AS writerPic
          , IF(C.feed_id IS NULL, 0 , 1) AS isLike
     FROM feed A
    INNER JOIN user B
       ON A.writer_user_id = B.user_id
     LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 33

            WHERE A.writer_user_id = 33

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 0 msec}
[2024-12-20 11:53:04 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|--------|----|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|----|--------------------|---------|---------|----------|----------|----------------|------------|
|33      |null|2024-12-20 11:45:27 |8888     |0        |0         |4         |4               |0           |
|--------|----|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-20 11:53:04 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|--------|---------|---------|--------------------|--------|---------|----|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic |islike |
|--------|---------|---------|--------------------|--------|---------|----|-------|
|80      |         |         |2024-12-20 11:46:59 |33      |8888     |null|1      |
|79      |         |         |2024-12-20 11:46:52 |33      |8888     |null|1      |
|78      |         |         |2024-12-20 11:46:40 |33      |8888     |null|1      |
|77      |         |         |2024-12-20 11:46:33 |33      |8888     |null|1      |
|--------|---------|---------|--------------------|--------|---------|----|-------|

[2024-12-20 11:53:04 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 80
 {executed in 0 msec}
[2024-12-20 11:53:04 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ffacdf87-2f11-439e-89c0-611ad6e7828d.png |
|-----------------------------------------|

[2024-12-20 11:53:04 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 80
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:04 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|----------------|------------|--------|---------|----|
|feed_comment_id |comment     |user_id |writernm |pic |
|----------------|------------|--------|---------|----|
|111             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|----------------|------------|--------|---------|----|

[2024-12-20 11:53:04 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 79
 {executed in 0 msec}
[2024-12-20 11:53:04 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f5cd589c-229a-4aaa-b362-9d9d8097c2b7.png |
|-----------------------------------------|

[2024-12-20 11:53:04 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 79
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:53:04 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|----------------|------------|--------|---------|----|
|feed_comment_id |comment     |user_id |writernm |pic |
|----------------|------------|--------|---------|----|
|107             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|----------------|------------|--------|---------|----|

[2024-12-20 11:53:04 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 78
 {executed in 0 msec}
[2024-12-20 11:53:04 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|591159c2-eca7-4176-8701-001abeec2bb4.png |
|-----------------------------------------|

[2024-12-20 11:53:04 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 78
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:04 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|----------------|------------|--------|---------|----|
|feed_comment_id |comment     |user_id |writernm |pic |
|----------------|------------|--------|---------|----|
|109             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|----------------|------------|--------|---------|----|

[2024-12-20 11:53:04 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 77
 {executed in 0 msec}
[2024-12-20 11:53:04 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f58fad2e-8a6a-4f42-a870-aecc10e5ea87.png |
|-----------------------------------------|

[2024-12-20 11:53:04 [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 77
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:04 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[jdbc.resultsettable][0;39m
 
|----------------|------------|--------|---------|----|
|feed_comment_id |comment     |user_id |writernm |pic |
|----------------|------------|--------|---------|----|
|110             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|----------------|------------|--------|---------|----|

[2024-12-20 11:53:04 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:04 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:04 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:04 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:04 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:04 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:04 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:04 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:04 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:04 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:04 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:04 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:04 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:04 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:04 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:04 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:04 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:04 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjczNiwiZXhwIjoxNzM0NjY4NzM2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.hfEP02CAnoMy9EUQv_rAxDrbWnJeS6Wzs6HVOJnPkxOlizBpsnN8_Ra89WGdUlRN
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjczNiwiZXhwIjoxNzM0NjY4NzM2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.hfEP02CAnoMy9EUQv_rAxDrbWnJeS6Wzs6HVOJnPkxOlizBpsnN8_Ra89WGdUlRN
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.feed.model.FeedGetReq][0;39m
 page: 1, size: null, profileUserId: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.feed.FeedController][0;39m
 FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=0, profileUserId=null)
[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  A.feed_id AS feedId, A.contents, A.location
          , A.created_at AS createdAt
          , B.user_id AS writerUserId
          , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
          , B.pic AS writerPic
          , IF(C.feed_id IS NULL, 0 , 1) AS isLike
     FROM feed A
    INNER JOIN user B
       ON A.writer_user_id = B.user_id
     LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 33

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 1 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location  |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|
|80      |         |          |2024-12-20 11:46:59 |33      |8888     |null                                     |1      |
|79      |         |          |2024-12-20 11:46:52 |33      |8888     |null                                     |1      |
|78      |         |          |2024-12-20 11:46:40 |33      |8888     |null                                     |1      |
|77      |         |          |2024-12-20 11:46:33 |33      |8888     |null                                     |1      |
|76      |ÌîºÎìúÎÇ¥Ïö©ÌÖåÏä§Ìä∏  |Í∑∏Î¶ºÏª¥Ìì®ÌÑ∞ÏïÑÌä∏ÌïôÏõê |2024-12-19 11:46:59 |5       |1111     |9e2d2e13-79a7-481f-b221-26e228ce8a4d.jpg |0      |
|75      |asdf     |asdf      |2024-12-10 10:55:05 |19      |zxzx     |2f008281-bcf1-4873-812c-20ab707bf4c7     |0      |
|73      |         |          |2024-12-10 10:33:25 |9       |0        |445adb23-d27b-43c2-837a-3e70f0bfae01     |0      |
|72      |         |          |2024-12-10 10:06:53 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|71      |         |          |2024-12-10 10:04:30 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|70      |ÎßåÏÇ≠       |          |2024-12-10 10:04:12 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|68      |aaaaa    |aaaaa     |2024-12-10 09:50:56 |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |0      |
|67      |         |          |2024-12-09 16:52:00 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|66      |         |          |2024-12-09 16:45:57 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|65      |         |          |2024-12-09 16:38:08 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|64      |         |          |2024-12-09 16:38:04 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|63      |         |          |2024-12-09 16:37:59 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|62      |Îãà ÎØ∏Îûò
ÎÇ®Ìé∏  |          |2024-12-09 16:27:39 |17      |ddd      |null                                     |0      |
|61      |         |          |2024-12-09 16:26:51 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|60      |         |          |2024-12-09 16:19:37 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|59      |         |          |2024-12-09 16:19:21 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 80
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ffacdf87-2f11-439e-89c0-611ad6e7828d.png |
|-----------------------------------------|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 80
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|------------|--------|---------|----|
|feed_comment_id |comment     |user_id |writernm |pic |
|----------------|------------|--------|---------|----|
|111             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|----------------|------------|--------|---------|----|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 79
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f5cd589c-229a-4aaa-b362-9d9d8097c2b7.png |
|-----------------------------------------|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 79
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|------------|--------|---------|----|
|feed_comment_id |comment     |user_id |writernm |pic |
|----------------|------------|--------|---------|----|
|107             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|----------------|------------|--------|---------|----|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 78
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|591159c2-eca7-4176-8701-001abeec2bb4.png |
|-----------------------------------------|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 78
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|------------|--------|---------|----|
|feed_comment_id |comment     |user_id |writernm |pic |
|----------------|------------|--------|---------|----|
|109             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|----------------|------------|--------|---------|----|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 77
 {executed in 1 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f58fad2e-8a6a-4f42-a870-aecc10e5ea87.png |
|-----------------------------------------|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 77
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|------------|--------|---------|----|
|feed_comment_id |comment     |user_id |writernm |pic |
|----------------|------------|--------|---------|----|
|110             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|----------------|------------|--------|---------|----|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 76
 {executed in 1 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6d1cd1f5-8f13-4d99-9665-4dbab9b47fb7.png |
|fe728007-d85c-4ab7-8577-58a4c81ff176.gif |
|-----------------------------------------|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 76
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|------------|--------|---------|----|
|feed_comment_id |comment     |user_id |writernm |pic |
|----------------|------------|--------|---------|----|
|115             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|114             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|113             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|112             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|----------------|------------|--------|---------|----|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 75
 {executed in 1 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a6fb41e-8434-4c72-8139-1169c075b2e8.png |
|-----------------------------------------|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 75
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|------------|--------|---------|----|
|feed_comment_id |comment     |user_id |writernm |pic |
|----------------|------------|--------|---------|----|
|121             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|120             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|119             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|118             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|----------------|------------|--------|---------|----|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 73
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b53d82b3-0379-49c9-9c85-cb9c403c6523.jpg |
|-----------------------------------------|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 73
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|104             |ÏåâÍ≤åÏù¥ÎÑ§    |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|103             |Í≤åÏù¥Í≤åÏù¥Ïïº   |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|102             |‚ô°       |9       |0        |445adb23-d27b-43c2-837a-3e70f0bfae01     |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 72
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|74f8b9ea-6e30-48e1-983a-3d09b7dbabea.gif |
|-----------------------------------------|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 72
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 71
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2d1c8d65-5c08-4f78-96df-1fb6349d58d0.gif |
|-----------------------------------------|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 71
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 70
 {executed in 1 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|87f5ba66-f8e4-41ca-a7ec-1d394b7ae5f7.jpg |
|-----------------------------------------|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 70
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|101             |Î≥¥Ïó¨Ï§ò     |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 1 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|62d4ef6f-50e4-406f-ae1e-d1f64060366a.jpg |
|-----------------------------------------|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 68
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5e5df70e-01d4-4b33-9e87-00e6a716008d.gif |
|-----------------------------------------|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 67
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|----------|--------|---------|----|
|feed_comment_id |comment   |user_id |writernm |pic |
|----------------|----------|--------|---------|----|
|100             |Í∞úÏ∂î Î∞ïÍ≥† Í∞ëÎãàÎã§ |17      |ddd      |null|
|----------------|----------|--------|---------|----|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 66
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2b6887e5-7070-4f39-a5db-bc4d35bb51fa.gif |
|-----------------------------------------|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 66
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|-------------|--------|---------|----|
|feed_comment_id |comment      |user_id |writernm |pic |
|----------------|-------------|--------|---------|----|
|99              |ÏàòÏòÅÏïÑ Í¥ÄÎ¶¨ ÏïàÌïòÎÉê?  |17      |ddd      |null|
|98              |Ïó¨ ÌîºÎìú Í∞ú Ï≥ê ÎçîÎüΩÎÑ§ |17      |ddd      |null|
|----------------|-------------|--------|---------|----|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 65
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0b2c055a-2426-4dbc-8f83-403ecd3fa464.gif |
|-----------------------------------------|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 65
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 64
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d252f5fe-6aa1-4212-b558-caedfb9d59c5.gif |
|-----------------------------------------|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 64
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 63
 {executed in 1 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|86cea73b-80b4-4501-aaeb-4db5007ded5f.gif |
|-----------------------------------------|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 63
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 62
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|943ec3db-6b2f-4d8a-a1d9-cdfa7b2fe921.jpeg |
|------------------------------------------|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 62
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 61
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bb7c519a-0113-4137-ada5-4bfa9df4b5d7.gif |
|-----------------------------------------|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 61
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|282ad40c-d6c6-4183-8781-2cd3a5d80ade.gif |
|-----------------------------------------|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 60
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 59
 {executed in 1 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|261ecdff-f966-4797-bc07-75a9eb1a5eee.gif |
|-----------------------------------------|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 59
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjczNiwiZXhwIjoxNzM0NjY4NzM2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.hfEP02CAnoMy9EUQv_rAxDrbWnJeS6Wzs6HVOJnPkxOlizBpsnN8_Ra89WGdUlRN
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjczNiwiZXhwIjoxNzM0NjY4NzM2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.hfEP02CAnoMy9EUQv_rAxDrbWnJeS6Wzs6HVOJnPkxOlizBpsnN8_Ra89WGdUlRN
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.feed.model.FeedGetReq][0;39m
 page: 1, size: null, profileUserId: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.feed.FeedController][0;39m
 FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=0, profileUserId=null)
[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  A.feed_id AS feedId, A.contents, A.location
          , A.created_at AS createdAt
          , B.user_id AS writerUserId
          , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
          , B.pic AS writerPic
          , IF(C.feed_id IS NULL, 0 , 1) AS isLike
     FROM feed A
    INNER JOIN user B
       ON A.writer_user_id = B.user_id
     LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 33

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location  |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|
|80      |         |          |2024-12-20 11:46:59 |33      |8888     |null                                     |1      |
|79      |         |          |2024-12-20 11:46:52 |33      |8888     |null                                     |1      |
|78      |         |          |2024-12-20 11:46:40 |33      |8888     |null                                     |1      |
|77      |         |          |2024-12-20 11:46:33 |33      |8888     |null                                     |1      |
|76      |ÌîºÎìúÎÇ¥Ïö©ÌÖåÏä§Ìä∏  |Í∑∏Î¶ºÏª¥Ìì®ÌÑ∞ÏïÑÌä∏ÌïôÏõê |2024-12-19 11:46:59 |5       |1111     |9e2d2e13-79a7-481f-b221-26e228ce8a4d.jpg |0      |
|75      |asdf     |asdf      |2024-12-10 10:55:05 |19      |zxzx     |2f008281-bcf1-4873-812c-20ab707bf4c7     |0      |
|73      |         |          |2024-12-10 10:33:25 |9       |0        |445adb23-d27b-43c2-837a-3e70f0bfae01     |0      |
|72      |         |          |2024-12-10 10:06:53 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|71      |         |          |2024-12-10 10:04:30 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|70      |ÎßåÏÇ≠       |          |2024-12-10 10:04:12 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|68      |aaaaa    |aaaaa     |2024-12-10 09:50:56 |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |0      |
|67      |         |          |2024-12-09 16:52:00 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|66      |         |          |2024-12-09 16:45:57 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|65      |         |          |2024-12-09 16:38:08 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|64      |         |          |2024-12-09 16:38:04 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|63      |         |          |2024-12-09 16:37:59 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|62      |Îãà ÎØ∏Îûò
ÎÇ®Ìé∏  |          |2024-12-09 16:27:39 |17      |ddd      |null                                     |0      |
|61      |         |          |2024-12-09 16:26:51 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|60      |         |          |2024-12-09 16:19:37 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|59      |         |          |2024-12-09 16:19:21 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 80
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ffacdf87-2f11-439e-89c0-611ad6e7828d.png |
|-----------------------------------------|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 80
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|----------------|------------|--------|---------|----|
|feed_comment_id |comment     |user_id |writernm |pic |
|----------------|------------|--------|---------|----|
|111             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|----------------|------------|--------|---------|----|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 79
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f5cd589c-229a-4aaa-b362-9d9d8097c2b7.png |
|-----------------------------------------|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 79
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|----------------|------------|--------|---------|----|
|feed_comment_id |comment     |user_id |writernm |pic |
|----------------|------------|--------|---------|----|
|107             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|----------------|------------|--------|---------|----|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 78
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|591159c2-eca7-4176-8701-001abeec2bb4.png |
|-----------------------------------------|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 78
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|----------------|------------|--------|---------|----|
|feed_comment_id |comment     |user_id |writernm |pic |
|----------------|------------|--------|---------|----|
|109             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|----------------|------------|--------|---------|----|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 77
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f58fad2e-8a6a-4f42-a870-aecc10e5ea87.png |
|-----------------------------------------|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 77
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|----------------|------------|--------|---------|----|
|feed_comment_id |comment     |user_id |writernm |pic |
|----------------|------------|--------|---------|----|
|110             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|----------------|------------|--------|---------|----|

[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 76
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6d1cd1f5-8f13-4d99-9665-4dbab9b47fb7.png |
|fe728007-d85c-4ab7-8577-58a4c81ff176.gif |
|-----------------------------------------|

[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 76
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|----------------|------------|--------|---------|----|
|feed_comment_id |comment     |user_id |writernm |pic |
|----------------|------------|--------|---------|----|
|115             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|114             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|113             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|112             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|----------------|------------|--------|---------|----|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 75
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a6fb41e-8434-4c72-8139-1169c075b2e8.png |
|-----------------------------------------|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 75
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|----------------|------------|--------|---------|----|
|feed_comment_id |comment     |user_id |writernm |pic |
|----------------|------------|--------|---------|----|
|121             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|120             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|119             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|118             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|----------------|------------|--------|---------|----|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 73
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b53d82b3-0379-49c9-9c85-cb9c403c6523.jpg |
|-----------------------------------------|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 73
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|104             |ÏåâÍ≤åÏù¥ÎÑ§    |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|103             |Í≤åÏù¥Í≤åÏù¥Ïïº   |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|102             |‚ô°       |9       |0        |445adb23-d27b-43c2-837a-3e70f0bfae01     |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 72
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|74f8b9ea-6e30-48e1-983a-3d09b7dbabea.gif |
|-----------------------------------------|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 72
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 71
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2d1c8d65-5c08-4f78-96df-1fb6349d58d0.gif |
|-----------------------------------------|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 71
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 70
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|87f5ba66-f8e4-41ca-a7ec-1d394b7ae5f7.jpg |
|-----------------------------------------|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 70
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|101             |Î≥¥Ïó¨Ï§ò     |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|62d4ef6f-50e4-406f-ae1e-d1f64060366a.jpg |
|-----------------------------------------|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 68
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5e5df70e-01d4-4b33-9e87-00e6a716008d.gif |
|-----------------------------------------|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 67
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|----------------|----------|--------|---------|----|
|feed_comment_id |comment   |user_id |writernm |pic |
|----------------|----------|--------|---------|----|
|100             |Í∞úÏ∂î Î∞ïÍ≥† Í∞ëÎãàÎã§ |17      |ddd      |null|
|----------------|----------|--------|---------|----|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 66
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2b6887e5-7070-4f39-a5db-bc4d35bb51fa.gif |
|-----------------------------------------|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 66
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|----------------|-------------|--------|---------|----|
|feed_comment_id |comment      |user_id |writernm |pic |
|----------------|-------------|--------|---------|----|
|99              |ÏàòÏòÅÏïÑ Í¥ÄÎ¶¨ ÏïàÌïòÎÉê?  |17      |ddd      |null|
|98              |Ïó¨ ÌîºÎìú Í∞ú Ï≥ê ÎçîÎüΩÎÑ§ |17      |ddd      |null|
|----------------|-------------|--------|---------|----|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 65
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0b2c055a-2426-4dbc-8f83-403ecd3fa464.gif |
|-----------------------------------------|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 65
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 64
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d252f5fe-6aa1-4212-b558-caedfb9d59c5.gif |
|-----------------------------------------|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 64
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 63
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|86cea73b-80b4-4501-aaeb-4db5007ded5f.gif |
|-----------------------------------------|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 63
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 62
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|943ec3db-6b2f-4d8a-a1d9-cdfa7b2fe921.jpeg |
|------------------------------------------|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 62
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 61
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bb7c519a-0113-4137-ada5-4bfa9df4b5d7.gif |
|-----------------------------------------|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 61
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|282ad40c-d6c6-4183-8781-2cd3a5d80ade.gif |
|-----------------------------------------|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 60
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 59
 {executed in 0 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|261ecdff-f966-4797-bc07-75a9eb1a5eee.gif |
|-----------------------------------------|

[2024-12-20 11:53:08 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 59
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:08 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjczNiwiZXhwIjoxNzM0NjY4NzM2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.hfEP02CAnoMy9EUQv_rAxDrbWnJeS6Wzs6HVOJnPkxOlizBpsnN8_Ra89WGdUlRN
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjczNiwiZXhwIjoxNzM0NjY4NzM2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.hfEP02CAnoMy9EUQv_rAxDrbWnJeS6Wzs6HVOJnPkxOlizBpsnN8_Ra89WGdUlRN
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.feed.model.FeedGetReq][0;39m
 page: 1, size: null, profileUserId: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.feed.FeedController][0;39m
 FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=0, profileUserId=null)
[2024-12-20 11:53:09 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  A.feed_id AS feedId, A.contents, A.location
          , A.created_at AS createdAt
          , B.user_id AS writerUserId
          , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
          , B.pic AS writerPic
          , IF(C.feed_id IS NULL, 0 , 1) AS isLike
     FROM feed A
    INNER JOIN user B
       ON A.writer_user_id = B.user_id
     LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 33

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 0 msec}
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location  |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|
|80      |         |          |2024-12-20 11:46:59 |33      |8888     |null                                     |1      |
|79      |         |          |2024-12-20 11:46:52 |33      |8888     |null                                     |1      |
|78      |         |          |2024-12-20 11:46:40 |33      |8888     |null                                     |1      |
|77      |         |          |2024-12-20 11:46:33 |33      |8888     |null                                     |1      |
|76      |ÌîºÎìúÎÇ¥Ïö©ÌÖåÏä§Ìä∏  |Í∑∏Î¶ºÏª¥Ìì®ÌÑ∞ÏïÑÌä∏ÌïôÏõê |2024-12-19 11:46:59 |5       |1111     |9e2d2e13-79a7-481f-b221-26e228ce8a4d.jpg |0      |
|75      |asdf     |asdf      |2024-12-10 10:55:05 |19      |zxzx     |2f008281-bcf1-4873-812c-20ab707bf4c7     |0      |
|73      |         |          |2024-12-10 10:33:25 |9       |0        |445adb23-d27b-43c2-837a-3e70f0bfae01     |0      |
|72      |         |          |2024-12-10 10:06:53 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|71      |         |          |2024-12-10 10:04:30 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|70      |ÎßåÏÇ≠       |          |2024-12-10 10:04:12 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|68      |aaaaa    |aaaaa     |2024-12-10 09:50:56 |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |0      |
|67      |         |          |2024-12-09 16:52:00 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|66      |         |          |2024-12-09 16:45:57 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|65      |         |          |2024-12-09 16:38:08 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|64      |         |          |2024-12-09 16:38:04 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|63      |         |          |2024-12-09 16:37:59 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|62      |Îãà ÎØ∏Îûò
ÎÇ®Ìé∏  |          |2024-12-09 16:27:39 |17      |ddd      |null                                     |0      |
|61      |         |          |2024-12-09 16:26:51 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|60      |         |          |2024-12-09 16:19:37 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|59      |         |          |2024-12-09 16:19:21 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-20 11:53:09 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 80
 {executed in 0 msec}
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ffacdf87-2f11-439e-89c0-611ad6e7828d.png |
|-----------------------------------------|

[2024-12-20 11:53:09 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 80
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|----------------|------------|--------|---------|----|
|feed_comment_id |comment     |user_id |writernm |pic |
|----------------|------------|--------|---------|----|
|111             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|----------------|------------|--------|---------|----|

[2024-12-20 11:53:09 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 79
 {executed in 0 msec}
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f5cd589c-229a-4aaa-b362-9d9d8097c2b7.png |
|-----------------------------------------|

[2024-12-20 11:53:09 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 79
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|----------------|------------|--------|---------|----|
|feed_comment_id |comment     |user_id |writernm |pic |
|----------------|------------|--------|---------|----|
|107             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|----------------|------------|--------|---------|----|

[2024-12-20 11:53:09 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 78
 {executed in 1 msec}
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|591159c2-eca7-4176-8701-001abeec2bb4.png |
|-----------------------------------------|

[2024-12-20 11:53:09 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 78
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|----------------|------------|--------|---------|----|
|feed_comment_id |comment     |user_id |writernm |pic |
|----------------|------------|--------|---------|----|
|109             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|----------------|------------|--------|---------|----|

[2024-12-20 11:53:09 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 77
 {executed in 0 msec}
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f58fad2e-8a6a-4f42-a870-aecc10e5ea87.png |
|-----------------------------------------|

[2024-12-20 11:53:09 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 77
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|----------------|------------|--------|---------|----|
|feed_comment_id |comment     |user_id |writernm |pic |
|----------------|------------|--------|---------|----|
|110             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|----------------|------------|--------|---------|----|

[2024-12-20 11:53:09 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 76
 {executed in 0 msec}
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6d1cd1f5-8f13-4d99-9665-4dbab9b47fb7.png |
|fe728007-d85c-4ab7-8577-58a4c81ff176.gif |
|-----------------------------------------|

[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:09 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 76
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|----------------|------------|--------|---------|----|
|feed_comment_id |comment     |user_id |writernm |pic |
|----------------|------------|--------|---------|----|
|115             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|114             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|113             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|112             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|----------------|------------|--------|---------|----|

[2024-12-20 11:53:09 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 75
 {executed in 0 msec}
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a6fb41e-8434-4c72-8139-1169c075b2e8.png |
|-----------------------------------------|

[2024-12-20 11:53:09 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 75
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|----------------|------------|--------|---------|----|
|feed_comment_id |comment     |user_id |writernm |pic |
|----------------|------------|--------|---------|----|
|121             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|120             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|119             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|118             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|----------------|------------|--------|---------|----|

[2024-12-20 11:53:09 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 73
 {executed in 0 msec}
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b53d82b3-0379-49c9-9c85-cb9c403c6523.jpg |
|-----------------------------------------|

[2024-12-20 11:53:09 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 73
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|104             |ÏåâÍ≤åÏù¥ÎÑ§    |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|103             |Í≤åÏù¥Í≤åÏù¥Ïïº   |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|102             |‚ô°       |9       |0        |445adb23-d27b-43c2-837a-3e70f0bfae01     |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-20 11:53:09 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 72
 {executed in 0 msec}
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|74f8b9ea-6e30-48e1-983a-3d09b7dbabea.gif |
|-----------------------------------------|

[2024-12-20 11:53:09 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 72
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:53:09 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 71
 {executed in 0 msec}
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2d1c8d65-5c08-4f78-96df-1fb6349d58d0.gif |
|-----------------------------------------|

[2024-12-20 11:53:09 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 71
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:53:09 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 70
 {executed in 0 msec}
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|87f5ba66-f8e4-41ca-a7ec-1d394b7ae5f7.jpg |
|-----------------------------------------|

[2024-12-20 11:53:09 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 70
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|101             |Î≥¥Ïó¨Ï§ò     |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-20 11:53:09 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 1 msec}
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|62d4ef6f-50e4-406f-ae1e-d1f64060366a.jpg |
|-----------------------------------------|

[2024-12-20 11:53:09 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 68
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:53:09 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5e5df70e-01d4-4b33-9e87-00e6a716008d.gif |
|-----------------------------------------|

[2024-12-20 11:53:09 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 67
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|----------------|----------|--------|---------|----|
|feed_comment_id |comment   |user_id |writernm |pic |
|----------------|----------|--------|---------|----|
|100             |Í∞úÏ∂î Î∞ïÍ≥† Í∞ëÎãàÎã§ |17      |ddd      |null|
|----------------|----------|--------|---------|----|

[2024-12-20 11:53:09 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 66
 {executed in 0 msec}
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2b6887e5-7070-4f39-a5db-bc4d35bb51fa.gif |
|-----------------------------------------|

[2024-12-20 11:53:09 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 66
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|----------------|-------------|--------|---------|----|
|feed_comment_id |comment      |user_id |writernm |pic |
|----------------|-------------|--------|---------|----|
|99              |ÏàòÏòÅÏïÑ Í¥ÄÎ¶¨ ÏïàÌïòÎÉê?  |17      |ddd      |null|
|98              |Ïó¨ ÌîºÎìú Í∞ú Ï≥ê ÎçîÎüΩÎÑ§ |17      |ddd      |null|
|----------------|-------------|--------|---------|----|

[2024-12-20 11:53:09 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 65
 {executed in 0 msec}
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0b2c055a-2426-4dbc-8f83-403ecd3fa464.gif |
|-----------------------------------------|

[2024-12-20 11:53:09 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 65
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:53:09 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 64
 {executed in 0 msec}
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d252f5fe-6aa1-4212-b558-caedfb9d59c5.gif |
|-----------------------------------------|

[2024-12-20 11:53:09 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 64
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:53:09 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 63
 {executed in 0 msec}
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|86cea73b-80b4-4501-aaeb-4db5007ded5f.gif |
|-----------------------------------------|

[2024-12-20 11:53:09 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 63
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:53:09 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 62
 {executed in 0 msec}
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|943ec3db-6b2f-4d8a-a1d9-cdfa7b2fe921.jpeg |
|------------------------------------------|

[2024-12-20 11:53:09 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 62
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:53:09 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 61
 {executed in 0 msec}
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bb7c519a-0113-4137-ada5-4bfa9df4b5d7.gif |
|-----------------------------------------|

[2024-12-20 11:53:09 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 61
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:53:09 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|282ad40c-d6c6-4183-8781-2cd3a5d80ade.gif |
|-----------------------------------------|

[2024-12-20 11:53:09 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 60
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:53:09 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 59
 {executed in 0 msec}
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|261ecdff-f966-4797-bc07-75a9eb1a5eee.gif |
|-----------------------------------------|

[2024-12-20 11:53:09 [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 59
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:09 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjczNiwiZXhwIjoxNzM0NjY4NzM2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.hfEP02CAnoMy9EUQv_rAxDrbWnJeS6Wzs6HVOJnPkxOlizBpsnN8_Ra89WGdUlRN
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjczNiwiZXhwIjoxNzM0NjY4NzM2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.hfEP02CAnoMy9EUQv_rAxDrbWnJeS6Wzs6HVOJnPkxOlizBpsnN8_Ra89WGdUlRN
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.feed.model.FeedGetReq][0;39m
 page: 1, size: null, profileUserId: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.feed.FeedController][0;39m
 FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=0, profileUserId=null)
[2024-12-20 11:53:10 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  A.feed_id AS feedId, A.contents, A.location
          , A.created_at AS createdAt
          , B.user_id AS writerUserId
          , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
          , B.pic AS writerPic
          , IF(C.feed_id IS NULL, 0 , 1) AS isLike
     FROM feed A
    INNER JOIN user B
       ON A.writer_user_id = B.user_id
     LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 33

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 1 msec}
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location  |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|
|80      |         |          |2024-12-20 11:46:59 |33      |8888     |null                                     |1      |
|79      |         |          |2024-12-20 11:46:52 |33      |8888     |null                                     |1      |
|78      |         |          |2024-12-20 11:46:40 |33      |8888     |null                                     |1      |
|77      |         |          |2024-12-20 11:46:33 |33      |8888     |null                                     |1      |
|76      |ÌîºÎìúÎÇ¥Ïö©ÌÖåÏä§Ìä∏  |Í∑∏Î¶ºÏª¥Ìì®ÌÑ∞ÏïÑÌä∏ÌïôÏõê |2024-12-19 11:46:59 |5       |1111     |9e2d2e13-79a7-481f-b221-26e228ce8a4d.jpg |0      |
|75      |asdf     |asdf      |2024-12-10 10:55:05 |19      |zxzx     |2f008281-bcf1-4873-812c-20ab707bf4c7     |0      |
|73      |         |          |2024-12-10 10:33:25 |9       |0        |445adb23-d27b-43c2-837a-3e70f0bfae01     |0      |
|72      |         |          |2024-12-10 10:06:53 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|71      |         |          |2024-12-10 10:04:30 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|70      |ÎßåÏÇ≠       |          |2024-12-10 10:04:12 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|68      |aaaaa    |aaaaa     |2024-12-10 09:50:56 |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |0      |
|67      |         |          |2024-12-09 16:52:00 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|66      |         |          |2024-12-09 16:45:57 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|65      |         |          |2024-12-09 16:38:08 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|64      |         |          |2024-12-09 16:38:04 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|63      |         |          |2024-12-09 16:37:59 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|62      |Îãà ÎØ∏Îûò
ÎÇ®Ìé∏  |          |2024-12-09 16:27:39 |17      |ddd      |null                                     |0      |
|61      |         |          |2024-12-09 16:26:51 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|60      |         |          |2024-12-09 16:19:37 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|59      |         |          |2024-12-09 16:19:21 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:10 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 80
 {executed in 0 msec}
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ffacdf87-2f11-439e-89c0-611ad6e7828d.png |
|-----------------------------------------|

[2024-12-20 11:53:10 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 80
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|------------|--------|---------|----|
|feed_comment_id |comment     |user_id |writernm |pic |
|----------------|------------|--------|---------|----|
|111             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|----------------|------------|--------|---------|----|

[2024-12-20 11:53:10 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 79
 {executed in 1 msec}
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f5cd589c-229a-4aaa-b362-9d9d8097c2b7.png |
|-----------------------------------------|

[2024-12-20 11:53:10 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 79
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|------------|--------|---------|----|
|feed_comment_id |comment     |user_id |writernm |pic |
|----------------|------------|--------|---------|----|
|107             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|----------------|------------|--------|---------|----|

[2024-12-20 11:53:10 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 78
 {executed in 0 msec}
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|591159c2-eca7-4176-8701-001abeec2bb4.png |
|-----------------------------------------|

[2024-12-20 11:53:10 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 78
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|------------|--------|---------|----|
|feed_comment_id |comment     |user_id |writernm |pic |
|----------------|------------|--------|---------|----|
|109             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|----------------|------------|--------|---------|----|

[2024-12-20 11:53:10 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 77
 {executed in 0 msec}
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f58fad2e-8a6a-4f42-a870-aecc10e5ea87.png |
|-----------------------------------------|

[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:10 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 77
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|------------|--------|---------|----|
|feed_comment_id |comment     |user_id |writernm |pic |
|----------------|------------|--------|---------|----|
|110             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|----------------|------------|--------|---------|----|

[2024-12-20 11:53:10 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 76
 {executed in 0 msec}
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6d1cd1f5-8f13-4d99-9665-4dbab9b47fb7.png |
|fe728007-d85c-4ab7-8577-58a4c81ff176.gif |
|-----------------------------------------|

[2024-12-20 11:53:10 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 76
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|------------|--------|---------|----|
|feed_comment_id |comment     |user_id |writernm |pic |
|----------------|------------|--------|---------|----|
|115             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|114             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|113             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|112             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|----------------|------------|--------|---------|----|

[2024-12-20 11:53:10 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 75
 {executed in 1 msec}
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a6fb41e-8434-4c72-8139-1169c075b2e8.png |
|-----------------------------------------|

[2024-12-20 11:53:10 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 75
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|------------|--------|---------|----|
|feed_comment_id |comment     |user_id |writernm |pic |
|----------------|------------|--------|---------|----|
|121             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|120             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|119             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|118             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|----------------|------------|--------|---------|----|

[2024-12-20 11:53:10 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 73
 {executed in 0 msec}
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b53d82b3-0379-49c9-9c85-cb9c403c6523.jpg |
|-----------------------------------------|

[2024-12-20 11:53:10 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 73
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|104             |ÏåâÍ≤åÏù¥ÎÑ§    |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|103             |Í≤åÏù¥Í≤åÏù¥Ïïº   |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|102             |‚ô°       |9       |0        |445adb23-d27b-43c2-837a-3e70f0bfae01     |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-20 11:53:10 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 72
 {executed in 0 msec}
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|74f8b9ea-6e30-48e1-983a-3d09b7dbabea.gif |
|-----------------------------------------|

[2024-12-20 11:53:10 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 72
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:53:10 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 71
 {executed in 0 msec}
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2d1c8d65-5c08-4f78-96df-1fb6349d58d0.gif |
|-----------------------------------------|

[2024-12-20 11:53:10 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 71
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:53:10 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 70
 {executed in 0 msec}
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|87f5ba66-f8e4-41ca-a7ec-1d394b7ae5f7.jpg |
|-----------------------------------------|

[2024-12-20 11:53:10 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 70
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|101             |Î≥¥Ïó¨Ï§ò     |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-20 11:53:10 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|62d4ef6f-50e4-406f-ae1e-d1f64060366a.jpg |
|-----------------------------------------|

[2024-12-20 11:53:10 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 68
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:53:10 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5e5df70e-01d4-4b33-9e87-00e6a716008d.gif |
|-----------------------------------------|

[2024-12-20 11:53:10 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 67
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|----------|--------|---------|----|
|feed_comment_id |comment   |user_id |writernm |pic |
|----------------|----------|--------|---------|----|
|100             |Í∞úÏ∂î Î∞ïÍ≥† Í∞ëÎãàÎã§ |17      |ddd      |null|
|----------------|----------|--------|---------|----|

[2024-12-20 11:53:10 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 66
 {executed in 1 msec}
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2b6887e5-7070-4f39-a5db-bc4d35bb51fa.gif |
|-----------------------------------------|

[2024-12-20 11:53:10 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 66
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|-------------|--------|---------|----|
|feed_comment_id |comment      |user_id |writernm |pic |
|----------------|-------------|--------|---------|----|
|99              |ÏàòÏòÅÏïÑ Í¥ÄÎ¶¨ ÏïàÌïòÎÉê?  |17      |ddd      |null|
|98              |Ïó¨ ÌîºÎìú Í∞ú Ï≥ê ÎçîÎüΩÎÑ§ |17      |ddd      |null|
|----------------|-------------|--------|---------|----|

[2024-12-20 11:53:10 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 65
 {executed in 0 msec}
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0b2c055a-2426-4dbc-8f83-403ecd3fa464.gif |
|-----------------------------------------|

[2024-12-20 11:53:10 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 65
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:53:10 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 64
 {executed in 0 msec}
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d252f5fe-6aa1-4212-b558-caedfb9d59c5.gif |
|-----------------------------------------|

[2024-12-20 11:53:10 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 64
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:53:10 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 63
 {executed in 0 msec}
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|86cea73b-80b4-4501-aaeb-4db5007ded5f.gif |
|-----------------------------------------|

[2024-12-20 11:53:10 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 63
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:53:10 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 62
 {executed in 0 msec}
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|943ec3db-6b2f-4d8a-a1d9-cdfa7b2fe921.jpeg |
|------------------------------------------|

[2024-12-20 11:53:10 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 62
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:53:10 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 61
 {executed in 0 msec}
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bb7c519a-0113-4137-ada5-4bfa9df4b5d7.gif |
|-----------------------------------------|

[2024-12-20 11:53:10 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 61
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:53:10 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|282ad40c-d6c6-4183-8781-2cd3a5d80ade.gif |
|-----------------------------------------|

[2024-12-20 11:53:10 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 60
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:53:10 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 59
 {executed in 0 msec}
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|261ecdff-f966-4797-bc07-75a9eb1a5eee.gif |
|-----------------------------------------|

[2024-12-20 11:53:10 [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 59
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:10 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjczNiwiZXhwIjoxNzM0NjY4NzM2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.hfEP02CAnoMy9EUQv_rAxDrbWnJeS6Wzs6HVOJnPkxOlizBpsnN8_Ra89WGdUlRN
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNDY2MjczNiwiZXhwIjoxNzM0NjY4NzM2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MzMsXCJyb2xlc1wiOltcIlJPTEVfVVNFUlwiLFwiUk9MRV9BRE1JTlwiXX0ifQ.hfEP02CAnoMy9EUQv_rAxDrbWnJeS6Wzs6HVOJnPkxOlizBpsnN8_Ra89WGdUlRN
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.feed.model.FeedGetReq][0;39m
 page: 1, size: null, profileUserId: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.feed.FeedController][0;39m
 FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=0, profileUserId=null)
[2024-12-20 11:53:11 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  A.feed_id AS feedId, A.contents, A.location
          , A.created_at AS createdAt
          , B.user_id AS writerUserId
          , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
          , B.pic AS writerPic
          , IF(C.feed_id IS NULL, 0 , 1) AS isLike
     FROM feed A
    INNER JOIN user B
       ON A.writer_user_id = B.user_id
     LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 33

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 1 msec}
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location  |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|
|80      |         |          |2024-12-20 11:46:59 |33      |8888     |null                                     |1      |
|79      |         |          |2024-12-20 11:46:52 |33      |8888     |null                                     |1      |
|78      |         |          |2024-12-20 11:46:40 |33      |8888     |null                                     |1      |
|77      |         |          |2024-12-20 11:46:33 |33      |8888     |null                                     |1      |
|76      |ÌîºÎìúÎÇ¥Ïö©ÌÖåÏä§Ìä∏  |Í∑∏Î¶ºÏª¥Ìì®ÌÑ∞ÏïÑÌä∏ÌïôÏõê |2024-12-19 11:46:59 |5       |1111     |9e2d2e13-79a7-481f-b221-26e228ce8a4d.jpg |0      |
|75      |asdf     |asdf      |2024-12-10 10:55:05 |19      |zxzx     |2f008281-bcf1-4873-812c-20ab707bf4c7     |0      |
|73      |         |          |2024-12-10 10:33:25 |9       |0        |445adb23-d27b-43c2-837a-3e70f0bfae01     |0      |
|72      |         |          |2024-12-10 10:06:53 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|71      |         |          |2024-12-10 10:04:30 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|70      |ÎßåÏÇ≠       |          |2024-12-10 10:04:12 |18      |1        |b15a898f-4658-4de9-a98a-c951b7377a2c     |0      |
|68      |aaaaa    |aaaaa     |2024-12-10 09:50:56 |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |0      |
|67      |         |          |2024-12-09 16:52:00 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|66      |         |          |2024-12-09 16:45:57 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|65      |         |          |2024-12-09 16:38:08 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|64      |         |          |2024-12-09 16:38:04 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|63      |         |          |2024-12-09 16:37:59 |8       |asd      |d0f3f487-654d-438d-8189-1e0b810bd743     |0      |
|62      |Îãà ÎØ∏Îûò
ÎÇ®Ìé∏  |          |2024-12-09 16:27:39 |17      |ddd      |null                                     |0      |
|61      |         |          |2024-12-09 16:26:51 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|60      |         |          |2024-12-09 16:19:37 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|59      |         |          |2024-12-09 16:19:21 |13      |123      |01ef9fdb-e038-408c-a3f4-c4b6b53a1b21     |0      |
|--------|---------|----------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:11 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 80
 {executed in 0 msec}
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ffacdf87-2f11-439e-89c0-611ad6e7828d.png |
|-----------------------------------------|

[2024-12-20 11:53:11 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 80
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|----------------|------------|--------|---------|----|
|feed_comment_id |comment     |user_id |writernm |pic |
|----------------|------------|--------|---------|----|
|111             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|----------------|------------|--------|---------|----|

[2024-12-20 11:53:11 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 79
 {executed in 1 msec}
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f5cd589c-229a-4aaa-b362-9d9d8097c2b7.png |
|-----------------------------------------|

[2024-12-20 11:53:11 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 79
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|----------------|------------|--------|---------|----|
|feed_comment_id |comment     |user_id |writernm |pic |
|----------------|------------|--------|---------|----|
|107             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|----------------|------------|--------|---------|----|

[2024-12-20 11:53:11 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 78
 {executed in 0 msec}
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|591159c2-eca7-4176-8701-001abeec2bb4.png |
|-----------------------------------------|

[2024-12-20 11:53:11 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 78
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|----------------|------------|--------|---------|----|
|feed_comment_id |comment     |user_id |writernm |pic |
|----------------|------------|--------|---------|----|
|109             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|----------------|------------|--------|---------|----|

[2024-12-20 11:53:11 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 77
 {executed in 1 msec}
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f58fad2e-8a6a-4f42-a870-aecc10e5ea87.png |
|-----------------------------------------|

[2024-12-20 11:53:11 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 77
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|----------------|------------|--------|---------|----|
|feed_comment_id |comment     |user_id |writernm |pic |
|----------------|------------|--------|---------|----|
|110             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|----------------|------------|--------|---------|----|

[2024-12-20 11:53:11 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 76
 {executed in 1 msec}
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6d1cd1f5-8f13-4d99-9665-4dbab9b47fb7.png |
|fe728007-d85c-4ab7-8577-58a4c81ff176.gif |
|-----------------------------------------|

[2024-12-20 11:53:11 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 76
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|----------------|------------|--------|---------|----|
|feed_comment_id |comment     |user_id |writernm |pic |
|----------------|------------|--------|---------|----|
|115             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|114             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|113             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|112             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|----------------|------------|--------|---------|----|

[2024-12-20 11:53:11 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 75
 {executed in 0 msec}
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a6fb41e-8434-4c72-8139-1169c075b2e8.png |
|-----------------------------------------|

[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:11 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 75
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|----------------|------------|--------|---------|----|
|feed_comment_id |comment     |user_id |writernm |pic |
|----------------|------------|--------|---------|----|
|121             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|120             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|119             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|118             |ÌîºÎìú ÏÇ≠Ï†úÍ∞Ä ÏïàÎêòÏûñÏïÑ |33      |8888     |null|
|----------------|------------|--------|---------|----|

[2024-12-20 11:53:11 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 73
 {executed in 0 msec}
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b53d82b3-0379-49c9-9c85-cb9c403c6523.jpg |
|-----------------------------------------|

[2024-12-20 11:53:11 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 73
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|104             |ÏåâÍ≤åÏù¥ÎÑ§    |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|103             |Í≤åÏù¥Í≤åÏù¥Ïïº   |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|102             |‚ô°       |9       |0        |445adb23-d27b-43c2-837a-3e70f0bfae01     |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-20 11:53:11 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 72
 {executed in 0 msec}
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|74f8b9ea-6e30-48e1-983a-3d09b7dbabea.gif |
|-----------------------------------------|

[2024-12-20 11:53:11 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 72
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:53:11 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 71
 {executed in 0 msec}
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2d1c8d65-5c08-4f78-96df-1fb6349d58d0.gif |
|-----------------------------------------|

[2024-12-20 11:53:11 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 71
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:53:11 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 70
 {executed in 0 msec}
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|87f5ba66-f8e4-41ca-a7ec-1d394b7ae5f7.jpg |
|-----------------------------------------|

[2024-12-20 11:53:11 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 70
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|101             |Î≥¥Ïó¨Ï§ò     |16      |7        |ea5eab02-a950-48e6-9e8f-034f86061b2b.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-20 11:53:11 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|62d4ef6f-50e4-406f-ae1e-d1f64060366a.jpg |
|-----------------------------------------|

[2024-12-20 11:53:11 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 68
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:53:11 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5e5df70e-01d4-4b33-9e87-00e6a716008d.gif |
|-----------------------------------------|

[2024-12-20 11:53:11 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 67
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|----------------|----------|--------|---------|----|
|feed_comment_id |comment   |user_id |writernm |pic |
|----------------|----------|--------|---------|----|
|100             |Í∞úÏ∂î Î∞ïÍ≥† Í∞ëÎãàÎã§ |17      |ddd      |null|
|----------------|----------|--------|---------|----|

[2024-12-20 11:53:11 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 66
 {executed in 1 msec}
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2b6887e5-7070-4f39-a5db-bc4d35bb51fa.gif |
|-----------------------------------------|

[2024-12-20 11:53:11 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 66
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|----------------|-------------|--------|---------|----|
|feed_comment_id |comment      |user_id |writernm |pic |
|----------------|-------------|--------|---------|----|
|99              |ÏàòÏòÅÏïÑ Í¥ÄÎ¶¨ ÏïàÌïòÎÉê?  |17      |ddd      |null|
|98              |Ïó¨ ÌîºÎìú Í∞ú Ï≥ê ÎçîÎüΩÎÑ§ |17      |ddd      |null|
|----------------|-------------|--------|---------|----|

[2024-12-20 11:53:11 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 65
 {executed in 0 msec}
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0b2c055a-2426-4dbc-8f83-403ecd3fa464.gif |
|-----------------------------------------|

[2024-12-20 11:53:11 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 65
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:53:11 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 64
 {executed in 0 msec}
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d252f5fe-6aa1-4212-b558-caedfb9d59c5.gif |
|-----------------------------------------|

[2024-12-20 11:53:11 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 64
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:53:11 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 63
 {executed in 1 msec}
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|86cea73b-80b4-4501-aaeb-4db5007ded5f.gif |
|-----------------------------------------|

[2024-12-20 11:53:11 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 63
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:53:11 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 62
 {executed in 0 msec}
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|943ec3db-6b2f-4d8a-a1d9-cdfa7b2fe921.jpeg |
|------------------------------------------|

[2024-12-20 11:53:11 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 62
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:53:11 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 61
 {executed in 0 msec}
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bb7c519a-0113-4137-ada5-4bfa9df4b5d7.gif |
|-----------------------------------------|

[2024-12-20 11:53:11 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 61
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:53:11 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|282ad40c-d6c6-4183-8781-2cd3a5d80ade.gif |
|-----------------------------------------|

[2024-12-20 11:53:11 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 60
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:53:11 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 59
 {executed in 0 msec}
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|261ecdff-f966-4797-bc07-75a9eb1a5eee.gif |
|-----------------------------------------|

[2024-12-20 11:53:11 [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[36m[jdbc.sqltiming][0;39m
  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId,
               A.comment,
               B.user_id AS writerUserId,
               IF(B.nick_name is NULL, B.uid, B.nick_name) AS writerNm,
               B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 59
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[jdbc.resultsettable][0;39m
 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-5] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-4] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-2] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-9] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-1] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-6] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-10] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-3] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-7] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 ip Address: 0:0:0:0:0:0:0:1
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 authorizationHeader: null
[2024-12-20 11:53:11 [32mINFO [0;39mhttp-nio-8080-exec-8] [[36m[com.green.greengram.config.jwt.TokenAuthenticationFilter][0;39m
 token: null
[2024-12-20 12:07:00 [32mINFO [0;39mFile Watcher] [[36m[org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener][0;39m
 Restarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)
[2024-12-20 12:07:00 [32mINFO [0;39mThread-5] [[36m[org.apache.coyote.http11.Http11NioProtocol][0;39m
 Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-20 12:07:00 [32mINFO [0;39mThread-5] [[36m[com.zaxxer.hikari.HikariDataSource][0;39m
 HikariPool-1 - Shutdown initiated...
[2024-12-20 12:07:00 [32mINFO [0;39mThread-5] [[36m[com.zaxxer.hikari.HikariDataSource][0;39m
 HikariPool-1 - Shutdown completed.
[2024-12-20 12:07:01 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.GreenGramApplication][0;39m
 Starting GreenGramApplication using Java 17.0.12 with PID 11724 (D:\GSY\GreenGramSecurity\build\classes\java\main started by Administrator in D:\GSY\GreenGramSecurity)
[2024-12-20 12:07:01 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.GreenGramApplication][0;39m
 No active profile set, falling back to 1 default profile: "default"
[2024-12-20 12:07:01 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.web.embedded.tomcat.TomcatWebServer][0;39m
 Tomcat initialized with port 8080 (http)
[2024-12-20 12:07:01 [32mINFO [0;39mrestartedMain] [[36m[org.apache.coyote.http11.Http11NioProtocol][0;39m
 Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-20 12:07:01 [32mINFO [0;39mrestartedMain] [[36m[org.apache.catalina.core.StandardService][0;39m
 Starting service [Tomcat]
[2024-12-20 12:07:01 [32mINFO [0;39mrestartedMain] [[36m[org.apache.catalina.core.StandardEngine][0;39m
 Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-20 12:07:01 [32mINFO [0;39mrestartedMain] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]][0;39m
 Initializing Spring embedded WebApplicationContext
[2024-12-20 12:07:01 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext][0;39m
 Root WebApplicationContext: initialization completed in 245 ms
[2024-12-20 12:07:01 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.common.MyFileUtils][0;39m
 MyFileUtils - ÏÉùÏÑ±Ïûê: D:\GSY\GreenGramVer3\greengram_ver3
[2024-12-20 12:07:01 [33mWARN [0;39mrestartedMain] [[36m[org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration][0;39m
 

Using generated security password: 5252dcef-51ad-49eb-9340-1a04ec8d8913

This generated password is for development use only. Your security configuration must be updated before running your application in production.

[2024-12-20 12:07:01 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer][0;39m
 Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
[2024-12-20 12:07:01 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping][0;39m
 Adding welcome page: class path resource [static/index.html]
[2024-12-20 12:07:01 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer][0;39m
 LiveReload server is running on port 35729
[2024-12-20 12:07:01 [32mINFO [0;39mrestartedMain] [[36m[org.apache.coyote.http11.Http11NioProtocol][0;39m
 Starting ProtocolHandler ["http-nio-8080"]
[2024-12-20 12:07:01 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.web.embedded.tomcat.TomcatWebServer][0;39m
 Tomcat started on port 8080 (http) with context path '/'
[2024-12-20 12:07:01 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.GreenGramApplication][0;39m
 Started GreenGramApplication in 0.447 seconds (process running for 2040.877)
[2024-12-20 12:07:01 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener][0;39m
 Condition evaluation unchanged
[2024-12-20 12:08:27 [32mINFO [0;39mFile Watcher] [[36m[org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener][0;39m
 Restarting due to 5 class path changes (0 additions, 0 deletions, 5 modifications)
[2024-12-20 12:08:27 [32mINFO [0;39mThread-7] [[36m[org.apache.coyote.http11.Http11NioProtocol][0;39m
 Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-20 12:08:27 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.GreenGramApplication][0;39m
 Starting GreenGramApplication using Java 17.0.12 with PID 11724 (D:\GSY\GreenGramSecurity\build\classes\java\main started by Administrator in D:\GSY\GreenGramSecurity)
[2024-12-20 12:08:27 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.GreenGramApplication][0;39m
 No active profile set, falling back to 1 default profile: "default"
[2024-12-20 12:08:28 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.web.embedded.tomcat.TomcatWebServer][0;39m
 Tomcat initialized with port 8080 (http)
[2024-12-20 12:08:28 [32mINFO [0;39mrestartedMain] [[36m[org.apache.coyote.http11.Http11NioProtocol][0;39m
 Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-20 12:08:28 [32mINFO [0;39mrestartedMain] [[36m[org.apache.catalina.core.StandardService][0;39m
 Starting service [Tomcat]
[2024-12-20 12:08:28 [32mINFO [0;39mrestartedMain] [[36m[org.apache.catalina.core.StandardEngine][0;39m
 Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-20 12:08:28 [32mINFO [0;39mrestartedMain] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]][0;39m
 Initializing Spring embedded WebApplicationContext
[2024-12-20 12:08:28 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext][0;39m
 Root WebApplicationContext: initialization completed in 270 ms
[2024-12-20 12:08:28 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.common.MyFileUtils][0;39m
 MyFileUtils - ÏÉùÏÑ±Ïûê: D:\GSY\GreenGramVer3\greengram_ver3
[2024-12-20 12:08:28 [33mWARN [0;39mrestartedMain] [[36m[org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration][0;39m
 

Using generated security password: fc45b9ec-b116-44ce-8f7c-607139819bc7

This generated password is for development use only. Your security configuration must be updated before running your application in production.

[2024-12-20 12:08:28 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer][0;39m
 Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
[2024-12-20 12:08:28 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping][0;39m
 Adding welcome page: class path resource [static/index.html]
[2024-12-20 12:08:28 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer][0;39m
 LiveReload server is running on port 35729
[2024-12-20 12:08:28 [32mINFO [0;39mrestartedMain] [[36m[org.apache.coyote.http11.Http11NioProtocol][0;39m
 Starting ProtocolHandler ["http-nio-8080"]
[2024-12-20 12:08:28 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.web.embedded.tomcat.TomcatWebServer][0;39m
 Tomcat started on port 8080 (http) with context path '/'
[2024-12-20 12:08:28 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.GreenGramApplication][0;39m
 Started GreenGramApplication in 0.445 seconds (process running for 2127.752)
[2024-12-20 12:08:28 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener][0;39m
 Condition evaluation unchanged
[2024-12-20 12:08:32 [32mINFO [0;39mFile Watcher] [[36m[org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener][0;39m
 Restarting due to 5 class path changes (0 additions, 0 deletions, 5 modifications)
[2024-12-20 12:08:32 [32mINFO [0;39mThread-11] [[36m[org.apache.coyote.http11.Http11NioProtocol][0;39m
 Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-20 12:08:32 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.GreenGramApplication][0;39m
 Starting GreenGramApplication using Java 17.0.12 with PID 11724 (D:\GSY\GreenGramSecurity\build\classes\java\main started by Administrator in D:\GSY\GreenGramSecurity)
[2024-12-20 12:08:32 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.GreenGramApplication][0;39m
 No active profile set, falling back to 1 default profile: "default"
[2024-12-20 12:08:33 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.web.embedded.tomcat.TomcatWebServer][0;39m
 Tomcat initialized with port 8080 (http)
[2024-12-20 12:08:33 [32mINFO [0;39mrestartedMain] [[36m[org.apache.coyote.http11.Http11NioProtocol][0;39m
 Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-20 12:08:33 [32mINFO [0;39mrestartedMain] [[36m[org.apache.catalina.core.StandardService][0;39m
 Starting service [Tomcat]
[2024-12-20 12:08:33 [32mINFO [0;39mrestartedMain] [[36m[org.apache.catalina.core.StandardEngine][0;39m
 Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-20 12:08:33 [32mINFO [0;39mrestartedMain] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]][0;39m
 Initializing Spring embedded WebApplicationContext
[2024-12-20 12:08:33 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext][0;39m
 Root WebApplicationContext: initialization completed in 224 ms
[2024-12-20 12:08:33 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.common.MyFileUtils][0;39m
 MyFileUtils - ÏÉùÏÑ±Ïûê: D:\GSY\GreenGramVer3\greengram_ver3
[2024-12-20 12:08:33 [33mWARN [0;39mrestartedMain] [[36m[org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration][0;39m
 

Using generated security password: 5b09ed60-9812-4b4e-a7e7-c3c1d72926bc

This generated password is for development use only. Your security configuration must be updated before running your application in production.

[2024-12-20 12:08:33 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer][0;39m
 Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
[2024-12-20 12:08:33 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping][0;39m
 Adding welcome page: class path resource [static/index.html]
[2024-12-20 12:08:33 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer][0;39m
 LiveReload server is running on port 35729
[2024-12-20 12:08:33 [32mINFO [0;39mrestartedMain] [[36m[org.apache.coyote.http11.Http11NioProtocol][0;39m
 Starting ProtocolHandler ["http-nio-8080"]
[2024-12-20 12:08:33 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.web.embedded.tomcat.TomcatWebServer][0;39m
 Tomcat started on port 8080 (http) with context path '/'
[2024-12-20 12:08:33 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.GreenGramApplication][0;39m
 Started GreenGramApplication in 0.407 seconds (process running for 2132.778)
[2024-12-20 12:08:33 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener][0;39m
 Condition evaluation unchanged
[2024-12-20 12:08:36 [32mINFO [0;39mFile Watcher] [[36m[org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener][0;39m
 Restarting due to 5 class path changes (0 additions, 0 deletions, 5 modifications)
[2024-12-20 12:08:36 [32mINFO [0;39mThread-15] [[36m[org.apache.coyote.http11.Http11NioProtocol][0;39m
 Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-20 12:08:36 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.GreenGramApplication][0;39m
 Starting GreenGramApplication using Java 17.0.12 with PID 11724 (D:\GSY\GreenGramSecurity\build\classes\java\main started by Administrator in D:\GSY\GreenGramSecurity)
[2024-12-20 12:08:36 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.GreenGramApplication][0;39m
 No active profile set, falling back to 1 default profile: "default"
[2024-12-20 12:08:36 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.web.embedded.tomcat.TomcatWebServer][0;39m
 Tomcat initialized with port 8080 (http)
[2024-12-20 12:08:36 [32mINFO [0;39mrestartedMain] [[36m[org.apache.coyote.http11.Http11NioProtocol][0;39m
 Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-20 12:08:36 [32mINFO [0;39mrestartedMain] [[36m[org.apache.catalina.core.StandardService][0;39m
 Starting service [Tomcat]
[2024-12-20 12:08:36 [32mINFO [0;39mrestartedMain] [[36m[org.apache.catalina.core.StandardEngine][0;39m
 Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-20 12:08:36 [32mINFO [0;39mrestartedMain] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]][0;39m
 Initializing Spring embedded WebApplicationContext
[2024-12-20 12:08:36 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext][0;39m
 Root WebApplicationContext: initialization completed in 283 ms
[2024-12-20 12:08:36 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.common.MyFileUtils][0;39m
 MyFileUtils - ÏÉùÏÑ±Ïûê: D:\GSY\GreenGramVer3\greengram_ver3
[2024-12-20 12:08:36 [33mWARN [0;39mrestartedMain] [[36m[org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration][0;39m
 

Using generated security password: 91e6752b-137a-4311-8b17-b80fe84fb03a

This generated password is for development use only. Your security configuration must be updated before running your application in production.

[2024-12-20 12:08:36 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer][0;39m
 Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
[2024-12-20 12:08:36 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping][0;39m
 Adding welcome page: class path resource [static/index.html]
[2024-12-20 12:08:36 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer][0;39m
 LiveReload server is running on port 35729
[2024-12-20 12:08:36 [32mINFO [0;39mrestartedMain] [[36m[org.apache.coyote.http11.Http11NioProtocol][0;39m
 Starting ProtocolHandler ["http-nio-8080"]
[2024-12-20 12:08:36 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.web.embedded.tomcat.TomcatWebServer][0;39m
 Tomcat started on port 8080 (http) with context path '/'
[2024-12-20 12:08:36 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.GreenGramApplication][0;39m
 Started GreenGramApplication in 0.5 seconds (process running for 2136.227)
[2024-12-20 12:08:36 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener][0;39m
 Condition evaluation unchanged
[2024-12-20 12:08:38 [32mINFO [0;39mFile Watcher] [[36m[org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener][0;39m
 Restarting due to 5 class path changes (0 additions, 0 deletions, 5 modifications)
[2024-12-20 12:08:38 [32mINFO [0;39mThread-19] [[36m[org.apache.coyote.http11.Http11NioProtocol][0;39m
 Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-20 12:08:38 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.GreenGramApplication][0;39m
 Starting GreenGramApplication using Java 17.0.12 with PID 11724 (D:\GSY\GreenGramSecurity\build\classes\java\main started by Administrator in D:\GSY\GreenGramSecurity)
[2024-12-20 12:08:38 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.GreenGramApplication][0;39m
 No active profile set, falling back to 1 default profile: "default"
[2024-12-20 12:08:39 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.web.embedded.tomcat.TomcatWebServer][0;39m
 Tomcat initialized with port 8080 (http)
[2024-12-20 12:08:39 [32mINFO [0;39mrestartedMain] [[36m[org.apache.coyote.http11.Http11NioProtocol][0;39m
 Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-20 12:08:39 [32mINFO [0;39mrestartedMain] [[36m[org.apache.catalina.core.StandardService][0;39m
 Starting service [Tomcat]
[2024-12-20 12:08:39 [32mINFO [0;39mrestartedMain] [[36m[org.apache.catalina.core.StandardEngine][0;39m
 Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-20 12:08:39 [32mINFO [0;39mrestartedMain] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]][0;39m
 Initializing Spring embedded WebApplicationContext
[2024-12-20 12:08:39 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext][0;39m
 Root WebApplicationContext: initialization completed in 352 ms
[2024-12-20 12:08:39 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.common.MyFileUtils][0;39m
 MyFileUtils - ÏÉùÏÑ±Ïûê: D:\GSY\GreenGramVer3\greengram_ver3
[2024-12-20 12:08:39 [33mWARN [0;39mrestartedMain] [[36m[org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration][0;39m
 

Using generated security password: bf040862-f08e-4833-a51a-008ad78e7a7a

This generated password is for development use only. Your security configuration must be updated before running your application in production.

[2024-12-20 12:08:39 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer][0;39m
 Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
[2024-12-20 12:08:39 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping][0;39m
 Adding welcome page: class path resource [static/index.html]
[2024-12-20 12:08:39 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer][0;39m
 LiveReload server is running on port 35729
[2024-12-20 12:08:39 [32mINFO [0;39mrestartedMain] [[36m[org.apache.coyote.http11.Http11NioProtocol][0;39m
 Starting ProtocolHandler ["http-nio-8080"]
[2024-12-20 12:08:39 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.web.embedded.tomcat.TomcatWebServer][0;39m
 Tomcat started on port 8080 (http) with context path '/'
[2024-12-20 12:08:39 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.GreenGramApplication][0;39m
 Started GreenGramApplication in 0.54 seconds (process running for 2138.663)
[2024-12-20 12:08:39 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener][0;39m
 Condition evaluation unchanged
[2024-12-20 12:08:41 [32mINFO [0;39mFile Watcher] [[36m[org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener][0;39m
 Restarting due to 5 class path changes (0 additions, 0 deletions, 5 modifications)
[2024-12-20 12:08:41 [32mINFO [0;39mThread-23] [[36m[org.apache.coyote.http11.Http11NioProtocol][0;39m
 Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-20 12:08:41 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.GreenGramApplication][0;39m
 Starting GreenGramApplication using Java 17.0.12 with PID 11724 (D:\GSY\GreenGramSecurity\build\classes\java\main started by Administrator in D:\GSY\GreenGramSecurity)
[2024-12-20 12:08:41 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.GreenGramApplication][0;39m
 No active profile set, falling back to 1 default profile: "default"
[2024-12-20 12:08:41 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.web.embedded.tomcat.TomcatWebServer][0;39m
 Tomcat initialized with port 8080 (http)
[2024-12-20 12:08:41 [32mINFO [0;39mrestartedMain] [[36m[org.apache.coyote.http11.Http11NioProtocol][0;39m
 Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-20 12:08:41 [32mINFO [0;39mrestartedMain] [[36m[org.apache.catalina.core.StandardService][0;39m
 Starting service [Tomcat]
[2024-12-20 12:08:41 [32mINFO [0;39mrestartedMain] [[36m[org.apache.catalina.core.StandardEngine][0;39m
 Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-20 12:08:41 [32mINFO [0;39mrestartedMain] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]][0;39m
 Initializing Spring embedded WebApplicationContext
[2024-12-20 12:08:41 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext][0;39m
 Root WebApplicationContext: initialization completed in 213 ms
[2024-12-20 12:08:41 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.common.MyFileUtils][0;39m
 MyFileUtils - ÏÉùÏÑ±Ïûê: D:\GSY\GreenGramVer3\greengram_ver3
[2024-12-20 12:08:41 [33mWARN [0;39mrestartedMain] [[36m[org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration][0;39m
 

Using generated security password: 398a2b78-d45c-4021-9ad2-3733c4803c1b

This generated password is for development use only. Your security configuration must be updated before running your application in production.

[2024-12-20 12:08:41 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer][0;39m
 Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
[2024-12-20 12:08:41 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping][0;39m
 Adding welcome page: class path resource [static/index.html]
[2024-12-20 12:08:41 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer][0;39m
 LiveReload server is running on port 35729
[2024-12-20 12:08:41 [32mINFO [0;39mrestartedMain] [[36m[org.apache.coyote.http11.Http11NioProtocol][0;39m
 Starting ProtocolHandler ["http-nio-8080"]
[2024-12-20 12:08:41 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.web.embedded.tomcat.TomcatWebServer][0;39m
 Tomcat started on port 8080 (http) with context path '/'
[2024-12-20 12:08:41 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.GreenGramApplication][0;39m
 Started GreenGramApplication in 0.384 seconds (process running for 2141.353)
[2024-12-20 12:08:41 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener][0;39m
 Condition evaluation unchanged
[2024-12-20 12:08:50 [32mINFO [0;39mFile Watcher] [[36m[org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener][0;39m
 Restarting due to 5 class path changes (0 additions, 5 deletions, 0 modifications)
[2024-12-20 12:08:50 [32mINFO [0;39mThread-27] [[36m[org.apache.coyote.http11.Http11NioProtocol][0;39m
 Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-20 12:08:50 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.GreenGramApplication][0;39m
 Starting GreenGramApplication using Java 17.0.12 with PID 11724 (D:\GSY\GreenGramSecurity\build\classes\java\main started by Administrator in D:\GSY\GreenGramSecurity)
[2024-12-20 12:08:50 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.GreenGramApplication][0;39m
 No active profile set, falling back to 1 default profile: "default"
[2024-12-20 12:08:50 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.web.embedded.tomcat.TomcatWebServer][0;39m
 Tomcat initialized with port 8080 (http)
[2024-12-20 12:08:50 [32mINFO [0;39mrestartedMain] [[36m[org.apache.coyote.http11.Http11NioProtocol][0;39m
 Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-20 12:08:50 [32mINFO [0;39mrestartedMain] [[36m[org.apache.catalina.core.StandardService][0;39m
 Starting service [Tomcat]
[2024-12-20 12:08:50 [32mINFO [0;39mrestartedMain] [[36m[org.apache.catalina.core.StandardEngine][0;39m
 Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-20 12:08:50 [32mINFO [0;39mrestartedMain] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]][0;39m
 Initializing Spring embedded WebApplicationContext
[2024-12-20 12:08:50 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext][0;39m
 Root WebApplicationContext: initialization completed in 222 ms
[2024-12-20 12:08:50 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.common.MyFileUtils][0;39m
 MyFileUtils - ÏÉùÏÑ±Ïûê: D:\GSY\GreenGramVer3\greengram_ver3
[2024-12-20 12:08:50 [33mWARN [0;39mrestartedMain] [[36m[org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration][0;39m
 

Using generated security password: fd5bfec2-1cef-4da9-95ab-711d09ae834d

This generated password is for development use only. Your security configuration must be updated before running your application in production.

[2024-12-20 12:08:50 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer][0;39m
 Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
[2024-12-20 12:08:50 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping][0;39m
 Adding welcome page: class path resource [static/index.html]
[2024-12-20 12:08:50 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer][0;39m
 LiveReload server is running on port 35729
[2024-12-20 12:08:50 [32mINFO [0;39mrestartedMain] [[36m[org.apache.coyote.http11.Http11NioProtocol][0;39m
 Starting ProtocolHandler ["http-nio-8080"]
[2024-12-20 12:08:50 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.web.embedded.tomcat.TomcatWebServer][0;39m
 Tomcat started on port 8080 (http) with context path '/'
[2024-12-20 12:08:50 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.GreenGramApplication][0;39m
 Started GreenGramApplication in 0.387 seconds (process running for 2150.383)
[2024-12-20 12:08:50 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener][0;39m
 Condition evaluation unchanged
[2024-12-20 12:08:52 [32mINFO [0;39mFile Watcher] [[36m[org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener][0;39m
 Restarting due to 5 class path changes (5 additions, 0 deletions, 0 modifications)
[2024-12-20 12:08:52 [32mINFO [0;39mThread-31] [[36m[org.apache.coyote.http11.Http11NioProtocol][0;39m
 Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-20 12:08:52 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.GreenGramApplication][0;39m
 Starting GreenGramApplication using Java 17.0.12 with PID 11724 (D:\GSY\GreenGramSecurity\build\classes\java\main started by Administrator in D:\GSY\GreenGramSecurity)
[2024-12-20 12:08:52 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.GreenGramApplication][0;39m
 No active profile set, falling back to 1 default profile: "default"
[2024-12-20 12:08:52 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.web.embedded.tomcat.TomcatWebServer][0;39m
 Tomcat initialized with port 8080 (http)
[2024-12-20 12:08:52 [32mINFO [0;39mrestartedMain] [[36m[org.apache.coyote.http11.Http11NioProtocol][0;39m
 Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-20 12:08:52 [32mINFO [0;39mrestartedMain] [[36m[org.apache.catalina.core.StandardService][0;39m
 Starting service [Tomcat]
[2024-12-20 12:08:52 [32mINFO [0;39mrestartedMain] [[36m[org.apache.catalina.core.StandardEngine][0;39m
 Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-20 12:08:52 [32mINFO [0;39mrestartedMain] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]][0;39m
 Initializing Spring embedded WebApplicationContext
[2024-12-20 12:08:52 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext][0;39m
 Root WebApplicationContext: initialization completed in 219 ms
[2024-12-20 12:08:52 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.common.MyFileUtils][0;39m
 MyFileUtils - ÏÉùÏÑ±Ïûê: D:\GSY\GreenGramVer3\greengram_ver3
[2024-12-20 12:08:52 [33mWARN [0;39mrestartedMain] [[36m[org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration][0;39m
 

Using generated security password: aba93fcc-d205-46b5-8197-599638f5482b

This generated password is for development use only. Your security configuration must be updated before running your application in production.

[2024-12-20 12:08:52 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer][0;39m
 Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
[2024-12-20 12:08:52 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping][0;39m
 Adding welcome page: class path resource [static/index.html]
[2024-12-20 12:08:52 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer][0;39m
 LiveReload server is running on port 35729
[2024-12-20 12:08:52 [32mINFO [0;39mrestartedMain] [[36m[org.apache.coyote.http11.Http11NioProtocol][0;39m
 Starting ProtocolHandler ["http-nio-8080"]
[2024-12-20 12:08:52 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.web.embedded.tomcat.TomcatWebServer][0;39m
 Tomcat started on port 8080 (http) with context path '/'
[2024-12-20 12:08:52 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.GreenGramApplication][0;39m
 Started GreenGramApplication in 0.401 seconds (process running for 2152.303)
[2024-12-20 12:08:52 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener][0;39m
 Condition evaluation unchanged
[2024-12-20 12:09:05 [32mINFO [0;39mFile Watcher] [[36m[org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener][0;39m
 Restarting due to 5 class path changes (0 additions, 0 deletions, 5 modifications)
[2024-12-20 12:09:05 [32mINFO [0;39mThread-35] [[36m[org.apache.coyote.http11.Http11NioProtocol][0;39m
 Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-20 12:09:06 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.GreenGramApplication][0;39m
 Starting GreenGramApplication using Java 17.0.12 with PID 11724 (D:\GSY\GreenGramSecurity\build\classes\java\main started by Administrator in D:\GSY\GreenGramSecurity)
[2024-12-20 12:09:06 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.GreenGramApplication][0;39m
 No active profile set, falling back to 1 default profile: "default"
[2024-12-20 12:09:06 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.web.embedded.tomcat.TomcatWebServer][0;39m
 Tomcat initialized with port 8080 (http)
[2024-12-20 12:09:06 [32mINFO [0;39mrestartedMain] [[36m[org.apache.coyote.http11.Http11NioProtocol][0;39m
 Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-20 12:09:06 [32mINFO [0;39mrestartedMain] [[36m[org.apache.catalina.core.StandardService][0;39m
 Starting service [Tomcat]
[2024-12-20 12:09:06 [32mINFO [0;39mrestartedMain] [[36m[org.apache.catalina.core.StandardEngine][0;39m
 Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-20 12:09:06 [32mINFO [0;39mrestartedMain] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]][0;39m
 Initializing Spring embedded WebApplicationContext
[2024-12-20 12:09:06 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext][0;39m
 Root WebApplicationContext: initialization completed in 255 ms
[2024-12-20 12:09:06 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.common.MyFileUtils][0;39m
 MyFileUtils - ÏÉùÏÑ±Ïûê: D:\GSY\GreenGramVer3\greengram_ver3
[2024-12-20 12:09:06 [33mWARN [0;39mrestartedMain] [[36m[org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration][0;39m
 

Using generated security password: 903ab8e7-7ef2-40c7-adcd-60219a5c097f

This generated password is for development use only. Your security configuration must be updated before running your application in production.

[2024-12-20 12:09:06 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer][0;39m
 Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
[2024-12-20 12:09:06 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping][0;39m
 Adding welcome page: class path resource [static/index.html]
[2024-12-20 12:09:06 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer][0;39m
 LiveReload server is running on port 35729
[2024-12-20 12:09:06 [32mINFO [0;39mrestartedMain] [[36m[org.apache.coyote.http11.Http11NioProtocol][0;39m
 Starting ProtocolHandler ["http-nio-8080"]
[2024-12-20 12:09:06 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.web.embedded.tomcat.TomcatWebServer][0;39m
 Tomcat started on port 8080 (http) with context path '/'
[2024-12-20 12:09:06 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.GreenGramApplication][0;39m
 Started GreenGramApplication in 0.436 seconds (process running for 2165.906)
[2024-12-20 12:09:06 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener][0;39m
 Condition evaluation unchanged
[2024-12-20 12:09:07 [32mINFO [0;39mFile Watcher] [[36m[org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener][0;39m
 Restarting due to 5 class path changes (0 additions, 5 deletions, 0 modifications)
[2024-12-20 12:09:07 [32mINFO [0;39mThread-39] [[36m[org.apache.coyote.http11.Http11NioProtocol][0;39m
 Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-20 12:09:08 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.GreenGramApplication][0;39m
 Starting GreenGramApplication using Java 17.0.12 with PID 11724 (D:\GSY\GreenGramSecurity\build\classes\java\main started by Administrator in D:\GSY\GreenGramSecurity)
[2024-12-20 12:09:08 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.GreenGramApplication][0;39m
 No active profile set, falling back to 1 default profile: "default"
[2024-12-20 12:09:08 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.web.embedded.tomcat.TomcatWebServer][0;39m
 Tomcat initialized with port 8080 (http)
[2024-12-20 12:09:08 [32mINFO [0;39mrestartedMain] [[36m[org.apache.coyote.http11.Http11NioProtocol][0;39m
 Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-20 12:09:08 [32mINFO [0;39mrestartedMain] [[36m[org.apache.catalina.core.StandardService][0;39m
 Starting service [Tomcat]
[2024-12-20 12:09:08 [32mINFO [0;39mrestartedMain] [[36m[org.apache.catalina.core.StandardEngine][0;39m
 Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-20 12:09:08 [32mINFO [0;39mrestartedMain] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]][0;39m
 Initializing Spring embedded WebApplicationContext
[2024-12-20 12:09:08 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext][0;39m
 Root WebApplicationContext: initialization completed in 252 ms
[2024-12-20 12:09:08 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.common.MyFileUtils][0;39m
 MyFileUtils - ÏÉùÏÑ±Ïûê: D:\GSY\GreenGramVer3\greengram_ver3
[2024-12-20 12:09:08 [33mWARN [0;39mrestartedMain] [[36m[org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration][0;39m
 

Using generated security password: bde84cfc-4d32-4436-92e0-60ef0779cd35

This generated password is for development use only. Your security configuration must be updated before running your application in production.

[2024-12-20 12:09:08 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer][0;39m
 Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
[2024-12-20 12:09:08 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping][0;39m
 Adding welcome page: class path resource [static/index.html]
[2024-12-20 12:09:08 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer][0;39m
 LiveReload server is running on port 35729
[2024-12-20 12:09:08 [32mINFO [0;39mrestartedMain] [[36m[org.apache.coyote.http11.Http11NioProtocol][0;39m
 Starting ProtocolHandler ["http-nio-8080"]
[2024-12-20 12:09:08 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.web.embedded.tomcat.TomcatWebServer][0;39m
 Tomcat started on port 8080 (http) with context path '/'
[2024-12-20 12:09:08 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.GreenGramApplication][0;39m
 Started GreenGramApplication in 0.438 seconds (process running for 2167.847)
[2024-12-20 12:09:08 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener][0;39m
 Condition evaluation unchanged
[2024-12-20 12:09:09 [32mINFO [0;39mFile Watcher] [[36m[org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener][0;39m
 Restarting due to 5 class path changes (5 additions, 0 deletions, 0 modifications)
[2024-12-20 12:09:09 [32mINFO [0;39mThread-43] [[36m[org.apache.coyote.http11.Http11NioProtocol][0;39m
 Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-20 12:09:09 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.GreenGramApplication][0;39m
 Starting GreenGramApplication using Java 17.0.12 with PID 11724 (D:\GSY\GreenGramSecurity\build\classes\java\main started by Administrator in D:\GSY\GreenGramSecurity)
[2024-12-20 12:09:09 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.GreenGramApplication][0;39m
 No active profile set, falling back to 1 default profile: "default"
[2024-12-20 12:09:10 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.web.embedded.tomcat.TomcatWebServer][0;39m
 Tomcat initialized with port 8080 (http)
[2024-12-20 12:09:10 [32mINFO [0;39mrestartedMain] [[36m[org.apache.coyote.http11.Http11NioProtocol][0;39m
 Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-20 12:09:10 [32mINFO [0;39mrestartedMain] [[36m[org.apache.catalina.core.StandardService][0;39m
 Starting service [Tomcat]
[2024-12-20 12:09:10 [32mINFO [0;39mrestartedMain] [[36m[org.apache.catalina.core.StandardEngine][0;39m
 Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-20 12:09:10 [32mINFO [0;39mrestartedMain] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]][0;39m
 Initializing Spring embedded WebApplicationContext
[2024-12-20 12:09:10 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext][0;39m
 Root WebApplicationContext: initialization completed in 243 ms
[2024-12-20 12:09:10 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.common.MyFileUtils][0;39m
 MyFileUtils - ÏÉùÏÑ±Ïûê: D:\GSY\GreenGramVer3\greengram_ver3
[2024-12-20 12:09:10 [33mWARN [0;39mrestartedMain] [[36m[org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration][0;39m
 

Using generated security password: 45e26aa2-cce1-4d7b-a5fb-abf0af5050e9

This generated password is for development use only. Your security configuration must be updated before running your application in production.

[2024-12-20 12:09:10 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer][0;39m
 Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
[2024-12-20 12:09:10 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping][0;39m
 Adding welcome page: class path resource [static/index.html]
[2024-12-20 12:09:10 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer][0;39m
 LiveReload server is running on port 35729
[2024-12-20 12:09:10 [32mINFO [0;39mrestartedMain] [[36m[org.apache.coyote.http11.Http11NioProtocol][0;39m
 Starting ProtocolHandler ["http-nio-8080"]
[2024-12-20 12:09:10 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.web.embedded.tomcat.TomcatWebServer][0;39m
 Tomcat started on port 8080 (http) with context path '/'
[2024-12-20 12:09:10 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.GreenGramApplication][0;39m
 Started GreenGramApplication in 0.458 seconds (process running for 2169.812)
[2024-12-20 12:09:10 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener][0;39m
 Condition evaluation unchanged
[2024-12-20 12:09:11 [32mINFO [0;39mFile Watcher] [[36m[org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener][0;39m
 Restarting due to 5 class path changes (0 additions, 0 deletions, 5 modifications)
[2024-12-20 12:09:11 [32mINFO [0;39mThread-47] [[36m[org.apache.coyote.http11.Http11NioProtocol][0;39m
 Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-20 12:09:11 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.GreenGramApplication][0;39m
 Starting GreenGramApplication using Java 17.0.12 with PID 11724 (D:\GSY\GreenGramSecurity\build\classes\java\main started by Administrator in D:\GSY\GreenGramSecurity)
[2024-12-20 12:09:11 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.GreenGramApplication][0;39m
 No active profile set, falling back to 1 default profile: "default"
[2024-12-20 12:09:12 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.web.embedded.tomcat.TomcatWebServer][0;39m
 Tomcat initialized with port 8080 (http)
[2024-12-20 12:09:12 [32mINFO [0;39mrestartedMain] [[36m[org.apache.coyote.http11.Http11NioProtocol][0;39m
 Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-20 12:09:12 [32mINFO [0;39mrestartedMain] [[36m[org.apache.catalina.core.StandardService][0;39m
 Starting service [Tomcat]
[2024-12-20 12:09:12 [32mINFO [0;39mrestartedMain] [[36m[org.apache.catalina.core.StandardEngine][0;39m
 Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-20 12:09:12 [32mINFO [0;39mrestartedMain] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]][0;39m
 Initializing Spring embedded WebApplicationContext
[2024-12-20 12:09:12 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext][0;39m
 Root WebApplicationContext: initialization completed in 232 ms
[2024-12-20 12:09:12 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.common.MyFileUtils][0;39m
 MyFileUtils - ÏÉùÏÑ±Ïûê: D:\GSY\GreenGramVer3\greengram_ver3
[2024-12-20 12:09:12 [33mWARN [0;39mrestartedMain] [[36m[org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration][0;39m
 

Using generated security password: f21bb470-ec41-4d29-b3b6-fb2280ad0f79

This generated password is for development use only. Your security configuration must be updated before running your application in production.

[2024-12-20 12:09:12 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer][0;39m
 Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
[2024-12-20 12:09:12 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping][0;39m
 Adding welcome page: class path resource [static/index.html]
[2024-12-20 12:09:12 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer][0;39m
 LiveReload server is running on port 35729
[2024-12-20 12:09:12 [32mINFO [0;39mrestartedMain] [[36m[org.apache.coyote.http11.Http11NioProtocol][0;39m
 Starting ProtocolHandler ["http-nio-8080"]
[2024-12-20 12:09:12 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.web.embedded.tomcat.TomcatWebServer][0;39m
 Tomcat started on port 8080 (http) with context path '/'
[2024-12-20 12:09:12 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.GreenGramApplication][0;39m
 Started GreenGramApplication in 0.408 seconds (process running for 2171.733)
[2024-12-20 12:09:12 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener][0;39m
 Condition evaluation unchanged
[2024-12-20 12:15:39 [32mINFO [0;39mFile Watcher] [[36m[org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener][0;39m
 Restarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)
[2024-12-20 12:15:39 [32mINFO [0;39mThread-51] [[36m[org.apache.coyote.http11.Http11NioProtocol][0;39m
 Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-20 12:15:39 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.GreenGramApplication][0;39m
 Starting GreenGramApplication using Java 17.0.12 with PID 11724 (D:\GSY\GreenGramSecurity\build\classes\java\main started by Administrator in D:\GSY\GreenGramSecurity)
[2024-12-20 12:15:39 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.GreenGramApplication][0;39m
 No active profile set, falling back to 1 default profile: "default"
[2024-12-20 12:15:39 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.web.embedded.tomcat.TomcatWebServer][0;39m
 Tomcat initialized with port 8080 (http)
[2024-12-20 12:15:39 [32mINFO [0;39mrestartedMain] [[36m[org.apache.coyote.http11.Http11NioProtocol][0;39m
 Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-20 12:15:39 [32mINFO [0;39mrestartedMain] [[36m[org.apache.catalina.core.StandardService][0;39m
 Starting service [Tomcat]
[2024-12-20 12:15:39 [32mINFO [0;39mrestartedMain] [[36m[org.apache.catalina.core.StandardEngine][0;39m
 Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-20 12:15:39 [32mINFO [0;39mrestartedMain] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]][0;39m
 Initializing Spring embedded WebApplicationContext
[2024-12-20 12:15:39 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext][0;39m
 Root WebApplicationContext: initialization completed in 214 ms
[2024-12-20 12:15:39 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.common.MyFileUtils][0;39m
 MyFileUtils - ÏÉùÏÑ±Ïûê: D:\GSY\GreenGramVer3\greengram_ver3
[2024-12-20 12:15:39 [33mWARN [0;39mrestartedMain] [[36m[org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration][0;39m
 

Using generated security password: 2c5db67c-813f-4ccc-946b-3238d6b417e3

This generated password is for development use only. Your security configuration must be updated before running your application in production.

[2024-12-20 12:15:39 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer][0;39m
 Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
[2024-12-20 12:15:39 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping][0;39m
 Adding welcome page: class path resource [static/index.html]
[2024-12-20 12:15:40 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer][0;39m
 LiveReload server is running on port 35729
[2024-12-20 12:15:40 [32mINFO [0;39mrestartedMain] [[36m[org.apache.coyote.http11.Http11NioProtocol][0;39m
 Starting ProtocolHandler ["http-nio-8080"]
[2024-12-20 12:15:40 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.web.embedded.tomcat.TomcatWebServer][0;39m
 Tomcat started on port 8080 (http) with context path '/'
[2024-12-20 12:15:40 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.GreenGramApplication][0;39m
 Started GreenGramApplication in 0.392 seconds (process running for 2559.42)
[2024-12-20 12:15:40 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener][0;39m
 Condition evaluation unchanged
[2024-12-20 12:38:09 [32mINFO [0;39mFile Watcher] [[36m[org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener][0;39m
 Restarting due to 2 class path changes (1 addition, 0 deletions, 1 modification)
[2024-12-20 12:38:09 [32mINFO [0;39mThread-55] [[36m[org.apache.coyote.http11.Http11NioProtocol][0;39m
 Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-20 12:38:10 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.GreenGramApplication][0;39m
 Starting GreenGramApplication using Java 17.0.12 with PID 11724 (D:\GSY\GreenGramSecurity\build\classes\java\main started by Administrator in D:\GSY\GreenGramSecurity)
[2024-12-20 12:38:10 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.GreenGramApplication][0;39m
 No active profile set, falling back to 1 default profile: "default"
[2024-12-20 12:38:10 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.web.embedded.tomcat.TomcatWebServer][0;39m
 Tomcat initialized with port 8080 (http)
[2024-12-20 12:38:10 [32mINFO [0;39mrestartedMain] [[36m[org.apache.coyote.http11.Http11NioProtocol][0;39m
 Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-20 12:38:10 [32mINFO [0;39mrestartedMain] [[36m[org.apache.catalina.core.StandardService][0;39m
 Starting service [Tomcat]
[2024-12-20 12:38:10 [32mINFO [0;39mrestartedMain] [[36m[org.apache.catalina.core.StandardEngine][0;39m
 Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-20 12:38:10 [32mINFO [0;39mrestartedMain] [[36m[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]][0;39m
 Initializing Spring embedded WebApplicationContext
[2024-12-20 12:38:10 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext][0;39m
 Root WebApplicationContext: initialization completed in 213 ms
[2024-12-20 12:38:10 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.common.MyFileUtils][0;39m
 MyFileUtils - ÏÉùÏÑ±Ïûê: D:\GSY\GreenGramVer3\greengram_ver3
[2024-12-20 12:38:10 [33mWARN [0;39mrestartedMain] [[36m[org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration][0;39m
 

Using generated security password: 8774aefa-5e68-42e8-90bc-95531982706d

This generated password is for development use only. Your security configuration must be updated before running your application in production.

[2024-12-20 12:38:10 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer][0;39m
 Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
[2024-12-20 12:38:10 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping][0;39m
 Adding welcome page: class path resource [static/index.html]
[2024-12-20 12:38:10 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer][0;39m
 LiveReload server is running on port 35729
[2024-12-20 12:38:10 [32mINFO [0;39mrestartedMain] [[36m[org.apache.coyote.http11.Http11NioProtocol][0;39m
 Starting ProtocolHandler ["http-nio-8080"]
[2024-12-20 12:38:10 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.web.embedded.tomcat.TomcatWebServer][0;39m
 Tomcat started on port 8080 (http) with context path '/'
[2024-12-20 12:38:10 [32mINFO [0;39mrestartedMain] [[36m[com.green.greengram.GreenGramApplication][0;39m
 Started GreenGramApplication in 0.391 seconds (process running for 3909.805)
[2024-12-20 12:38:10 [32mINFO [0;39mrestartedMain] [[36m[org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener][0;39m
 Condition evaluation unchanged
